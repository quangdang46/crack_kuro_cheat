#pragma once

// PlayerUnknown's Battle Ground Mobile (1.6.0) SDK

#include "PUBGM_Basic.hpp"
#include "PUBGM_PhotonDestructible_classes.hpp"
#include "PUBGM_InputCore_classes.hpp"
#include "PUBGM_ZLevel_classes.hpp"
#include "PUBGM_UAEStateMachine_classes.hpp"
#include "PUBGM_UAETrigger_classes.hpp"
#include "PUBGM_AnimGraphRuntime_classes.hpp"
#include "PUBGM_UAESharedModule_classes.hpp"
#include "PUBGM_UMG_classes.hpp"
#include "PUBGM_Slate_classes.hpp"
#include "PUBGM_Basic_classes.hpp"
#include "PUBGM_MovieScene_classes.hpp"
#include "PUBGM_UnrealArchExt_classes.hpp"
#include "PUBGM_SlateCore_classes.hpp"
#include "PUBGM_CoreUObject_classes.hpp"
#include "PUBGM_RuntimeMeshComponent_classes.hpp"
#include "PUBGM_Skill_classes.hpp"
#include "PUBGM_PhysXVehicles_classes.hpp"
#include "PUBGM_AIModule_classes.hpp"
#include "PUBGM_Gameplay_classes.hpp"
#include "PUBGM_LevelSequence_classes.hpp"
#include "PUBGM_Engine_classes.hpp"
#include "PUBGM_BuildSystem_classes.hpp"
#include "PUBGM_slua_unreal_classes.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Enums
//---------------------------------------------------------------------------

// Enum ShadowTrackerExtra.EAutoAimLockState
enum class EAutoAimLockState : uint8_t
{
	NotLock                        = 0,
	LockNoTarget                   = 1,
	Locking                        = 2,
	Locked                         = 3,
	EAutoAimLockState_MAX          = 4
};


// Enum ShadowTrackerExtra.ESeekAndLockStage
enum class ESeekAndLockStage : uint8_t
{
	ESeekAndLockStage__ESeekAndLockStage_None = 0,
	ESeekAndLockStage__ESeekAndLockStage = 1,
	ESeekAndLockStage__ESeekAndLockStage01 = 2,
	ESeekAndLockStage__ESeekAndLockStage02 = 3,
	ESeekAndLockStage__ESeekAndLockStage_MAX = 4
};


// Enum ShadowTrackerExtra.EFreshWeaponStateType
enum class EFreshWeaponStateType : uint8_t
{
	FreshWeaponStateType_None      = 0,
	FreshWeaponStateType_Inactive  = 1,
	FreshWeaponStateType_Idle      = 2,
	FreshWeaponStateType_IdleToBackpack = 3,
	FreshWeaponStateType_Backpack  = 4,
	FreshWeaponStateType_BackpackToIdle = 5,
	FreshWeaponStateType_Fire      = 6,
	FreshWeaponStateType_Reload    = 7,
	FreshWeaponStateType_NoBullet  = 8,
	FreshWeaponStateType_PreFire   = 9,
	FreshWeaponStateType_PostFire  = 10,
	FreshWeaponStateType_PostReload = 11,
	FreshWeaponStateType_WarmUp    = 12,
	FreshWeaponStateType_FillGas   = 13,
	FreshWeaponStateType_PostFillGas = 14,
	FreshWeaponStateType_Drop      = 15,
	FreshWeaponStateType_MAX       = 16
};


// Enum ShadowTrackerExtra.ELaserTraceUIStage
enum class ELaserTraceUIStage : uint8_t
{
	ELaserTraceUIStage__LaserTraceUIStage = 0,
	ELaserTraceUIStage__LaserTraceUIStage01 = 1,
	ELaserTraceUIStage__LaserTraceUIStage02 = 2,
	ELaserTraceUIStage__LaserTraceUIStage_MAX = 3
};


// Enum ShadowTrackerExtra.EPawnState
enum class EPawnState : uint8_t
{
	EPawnState__Move               = 0,
	EPawnState__Sprint             = 1,
	EPawnState__ProneMove          = 2,
	EPawnState__Stand              = 3,
	EPawnState__Crouch             = 4,
	EPawnState__Prone              = 5,
	EPawnState__Jump               = 6,
	EPawnState__GunFire            = 7,
	EPawnState__GunReload          = 8,
	EPawnState__GunADS             = 9,
	EPawnState__Picth              = 10,
	EPawnState__SwitchWeapon       = 11,
	EPawnState__Pick               = 12,
	EPawnState__MeleeAttack        = 13,
	EPawnState__HoldGrenade        = 14,
	EPawnState__Save               = 15,
	EPawnState__UseConsumables     = 16,
	EPawnState__Dying              = 17,
	EPawnState__Dead               = 18,
	EPawnState__DriveVehicle       = 19,
	EPawnState__InVehicle          = 20,
	EPawnState__LeanOutVehicle     = 21,
	EPawnState__Swim               = 22,
	EPawnState__InParachute        = 23,
	EPawnState__Vault              = 24,
	EPawnState__InPlane            = 25,
	EPawnState__GunOBOReload       = 26,
	EPawnState__SwitchPP           = 27,
	EPawnState__PlayEmote          = 28,
	EPawnState__HoldShield         = 29,
	EPawnState__Imprisonment       = 30,
	EPawnState__StunBurnNag        = 31,
	EPawnState__Skill              = 32,
	EPawnState__DetectPaintDecal   = 33,
	EPawnState__Revival            = 34,
	EPawnState__AirAttackLocator   = 35,
	EPawnState__ControlUnmannedVehicle = 36,
	EPawnState__Shoveling          = 37,
	EPawnState__RemoteControlVehicle = 38,
	EPawnState__Build              = 39,
	EPawnState__GunFillGas         = 40,
	EPawnState__Shoulder           = 41,
	EPawnState__Variation          = 42,
	EPawnState__CarryBack          = 43,
	EPawnState__BeCarriedBack      = 44,
	EPawnState____MAX              = 45,
	EPawnState__EPawnState_MAX     = 46
};


// Enum ShadowTrackerExtra.EAvatarDamagePosition
enum class EAvatarDamagePosition : uint8_t
{
	EAvatarDamagePosition__Non     = 0,
	EAvatarDamagePosition__BigHead = 1,
	EAvatarDamagePosition__BigLimbs = 2,
	EAvatarDamagePosition__BigBody = 3,
	EAvatarDamagePosition__BigHand = 4,
	EAvatarDamagePosition__BigFoot = 5,
	EAvatarDamagePosition__Wheel0  = 6,
	EAvatarDamagePosition__Wheel1  = 7,
	EAvatarDamagePosition__Wheel2  = 8,
	EAvatarDamagePosition__Wheel3  = 9,
	EAvatarDamagePosition__BigLimb_LeftLowerArm = 10,
	EAvatarDamagePosition__BigLimb_LeftUpperArm = 11,
	EAvatarDamagePosition__BigLimb_RightLowerArm = 12,
	EAvatarDamagePosition__BigLimb_RightUpperArm = 13,
	EAvatarDamagePosition__BigLimb_LeftThigh = 14,
	EAvatarDamagePosition__BigLimb_LeftShank = 15,
	EAvatarDamagePosition__BigLimb_RightThigh = 16,
	EAvatarDamagePosition__BigLimb_RightShank = 17,
	EAvatarDamagePosition__BodyZone0 = 18,
	EAvatarDamagePosition__BodyZone1 = 19,
	EAvatarDamagePosition__BodyZone2 = 20,
	EAvatarDamagePosition__BodyZone3 = 21,
	EAvatarDamagePosition__EAvatarDamagePosition_MAX = 22
};


// Enum ShadowTrackerExtra.EDamageableGameObjectType
enum class EDamageableGameObjectType : uint8_t
{
	EDamageableGameObjectType__EDamageableGameObjectType_Player = 0,
	EDamageableGameObjectType__EDamageableGameObjectType_Monster = 1,
	EDamageableGameObjectType__EDamageableGameObjectType_Vehicle = 2,
	EDamageableGameObjectType__EDamageableGameObjectType_Boss = 3,
	EDamageableGameObjectType__EDamageableGameObjectType_Building = 4,
	EDamageableGameObjectType__EDamageableGameObjectType_Building_A = 5,
	EDamageableGameObjectType__EDamageableGameObjectType_Building_B = 6,
	EDamageableGameObjectType__EDamageableGameObjectType_Building_C = 7,
	EDamageableGameObjectType__EDamageableGameObjectType_Flammable = 8,
	EDamageableGameObjectType__EDamageableGameObjectType_AI = 9,
	EDamageableGameObjectType__EDamageableGameObjectType_MAX = 10
};


// Enum ShadowTrackerExtra.EObserverType
enum class EObserverType : uint8_t
{
	EObserverType__EObserverType_None = 0,
	EObserverType__EObserverType_InSpectating = 1,
	EObserverType__EObserverType_GlobalObserver = 2,
	EObserverType__EObserverType_FriendObserver = 3,
	EObserverType__EObserverType_Spectator = 4,
	EObserverType__EObserverType_MAX = 5
};


// Enum ShadowTrackerExtra.EUAESkillEvent
enum class EUAESkillEvent : uint8_t
{
	UAESkillEvent_None             = 0,
	GrenadeModeChange              = 1,
	ThrowGrenade                   = 2,
	SkillCancel                    = 3,
	GrenadeTimeOut                 = 4,
	SwitchWeapon                   = 5,
	SwitchWeaponInterrupt          = 6,
	SwitchWeaponFinish             = 7,
	UnequipWeapon                  = 8,
	UnequipWeaponFinish            = 9,
	SkillInterrupt                 = 10,
	SkillPlayerDieInterrupt        = 11,
	PickItem                       = 12,
	StartFire                      = 13,
	EUAESkillEvent_MAX             = 14
};


// Enum ShadowTrackerExtra.EUTSkillEntry
enum class EUTSkillEntry : uint8_t
{
	EUTSkillEntry__SkillEntry_None = 0,
	EUTSkillEntry__SkillEntry_Grenade_Down = 1,
	EUTSkillEntry__SkillEntry_Grenade_Up = 2,
	EUTSkillEntry__SkillEntry_Flash_Down = 3,
	EUTSkillEntry__SkillEntry_Flash_Up = 4,
	EUTSkillEntry__SkillEntry_Smoke_Down = 5,
	EUTSkillEntry__SkillEntry_Smoke_Up = 6,
	EUTSkillEntry__SkillEntry_Molotov_Down = 7,
	EUTSkillEntry__SkillEntry_Molotov_Up = 8,
	EUTSkillEntry__SkillEntry_Melee_Fist_Down = 9,
	EUTSkillEntry__SkillEntry_Melee_Fist_Up = 10,
	EUTSkillEntry__SkillEntry_Melee_Weapon_1_Down = 11,
	EUTSkillEntry__SkillEntry_Melee_Weapon_1_Up = 12,
	EUTSkillEntry__SkillEntry_Melee_Weapon_2_Down = 13,
	EUTSkillEntry__SkillEntry_Melee_Weapon_2_Up = 14,
	EUTSkillEntry__SkillEntry_Melee_Weapon_3_Down = 15,
	EUTSkillEntry__SkillEntry_Melee_Weapon_3_Up = 16,
	EUTSkillEntry__SkillEntry_Melee_Weapon_4_Down = 17,
	EUTSkillEntry__SkillEntry_Melee_Weapon_4_Up = 18,
	EUTSkillEntry__SkillEntry_Melee_Weapon_5_Down = 19,
	EUTSkillEntry__SkillEntry_Melee_Weapon_5_Up = 20,
	EUTSkillEntry__SkillEntry_Bandage_Down = 21,
	EUTSkillEntry__SkillEntry_EnergyDrink_Down = 22,
	EUTSkillEntry__SkillEntry_Painkiller_Down = 23,
	EUTSkillEntry__SkillEntry_AdrenalineSyringe_Down = 24,
	EUTSkillEntry__SkillEntry_FirstAidKit_Down = 25,
	EUTSkillEntry__SkillEntry_MedKit_Down = 26,
	EUTSkillEntry__SkillEntry_GasCan_Down = 27,
	EUTSkillEntry__SkillEntry_RapidAid_Down = 28,
	EUTSkillEntry__SkillEntry_GrenadeApple_Down = 29,
	EUTSkillEntry__SkillEntry_GrenadeApple_Up = 30,
	EUTSkillEntry__SkillEntry_GrenadeDance_Down = 31,
	EUTSkillEntry__SkillEntry_GrenadeDance_Up = 32,
	EUTSkillEntry__SkillEntry_GrenadeCandy_Down = 33,
	EUTSkillEntry__SkillEntry_GrenadeCandy_Up = 34,
	EUTSkillEntry__SkillEntry_GrenadeCandyBoom_Down = 35,
	EUTSkillEntry__SkillEntry_GrenadeCandyBoom_Up = 36,
	EUTSkillEntry__SkillEntry_GrenadeSnowBall_Down = 37,
	EUTSkillEntry__SkillEntry_GrenadeSnowBall_Up = 38,
	EUTSkillEntry__SkillEntry_GrenadeZombie_Down = 39,
	EUTSkillEntry__SkillEntry_GrenadeZombie_Up = 40,
	EUTSkillEntry__SkillEntry_GrenadeCake_Down = 41,
	EUTSkillEntry__SkillEntry_GrenadeCake_Up = 42,
	EUTSkillEntry__SkillEntry_Fireworks_Down_CG = 43,
	EUTSkillEntry__SkillEntry_Fireworks_Up_CG = 44,
	EUTSkillEntry__SkillEntry_Candle_Down = 45,
	EUTSkillEntry__SkillEntry_Candle_Up = 46,
	EUTSkillEntry__SkillEntry_SCSetupBonfire_Down = 47,
	EUTSkillEntry__SkillEntry_SCAddBonfireWood_Down = 48,
	EUTSkillEntry__SkillEntry_SCBeginRoast_Down = 49,
	EUTSkillEntry__SkillEntry_SCEatRoast_Down = 50,
	EUTSkillEntry__SkillEntry_SCWarmupPack_Down = 51,
	EUTSkillEntry__SkillEntry_SCPickRoastFromFire_Down = 52,
	EUTSkillEntry__SkillEntry_SCBeginRoastDeer_Down = 53,
	EUTSkillEntry__SkillEntry_SCEatRoastDeer_Down = 54,
	EUTSkillEntry__SkillEntry_CommonDown = 55,
	EUTSkillEntry__SkillEntry_CommonUp = 56,
	EUTSkillEntry__SkillEntry_Boss_Born = 57,
	EUTSkillEntry__SkillEntry_Boss_Born_Delay = 58,
	EUTSkillEntry__SkillEntry_Boss_Landed = 59,
	EUTSkillEntry__SkillEntry_LightCandle_Down = 60,
	EUTSkillEntry__SKillEntry_ChangeWearing = 61,
	EUTSkillEntry__SkillEntry_GrenadeFrozen_Down = 62,
	EUTSkillEntry__SkillEntry_GrenadeFrozen_Up = 63,
	EUTSkillEntry__SkillEntry_Locator_Down = 64,
	EUTSkillEntry__SkillEntry_Locator_Up = 65,
	EUTSkillEntry__SkillEntry_MaintenanceVehicle_Down = 66,
	EUTSkillEntry__SkillEntry_Antidote_Down = 67,
	EUTSkillEntry__SkillEntry_BatteryChip_Down = 68,
	EUTSkillEntry__SkillEntry_Infec_HumanChgRevenger = 69,
	EUTSkillEntry__SkillEntry_Infec_HumanChgZombie = 70,
	EUTSkillEntry__SkillEntry_Infec_ZombieChgKing = 71,
	EUTSkillEntry__SkillEntry_ActivityInteractive = 72,
	EUTSkillEntry__SkillEntry_HalloweenChangeWear = 73,
	EUTSkillEntry__SkillEntry_GrenadePumpkinLantern_Down = 74,
	EUTSkillEntry__SkillEntry_GrenadePumpkinLantern_Up = 75,
	EUTSkillEntry__SkillEntry_AngryBird_R_Down = 76,
	EUTSkillEntry__SkillEntry_AngryBird_R_Up = 77,
	EUTSkillEntry__SkillEntry_AngryBird2_Y_Down = 78,
	EUTSkillEntry__SkillEntry_AngryBird2_Y_Up = 79,
	EUTSkillEntry__SkillEntry_AngryBird_B_Down = 80,
	EUTSkillEntry__SkillEntry_AngryBird_B_Up = 81,
	EUTSkillEntry__SkillEntry_IceWorldActivityInteractive = 82,
	EUTSkillEntry__SkillEntry_IceWorldSnowman_Up = 83,
	EUTSkillEntry__SkillEntry_IceWorldSnowman_Down = 84,
	EUTSkillEntry__SkillEntry_IceWorldMoveablePlatform = 85,
	EUTSkillEntry__SkillEntry_AnniversaryBlindBox = 86,
	EUTSkillEntry__SkillEntry_AnniversaryGameMachine = 87,
	EUTSkillEntry__SkillEntry_AnniversaryTurbodrop = 88,
	EUTSkillEntry__SkillEntry_AnniversaryStopGameMachine = 89,
	EUTSkillEntry__SkillEntry_VehicleStun_Down = 90,
	EUTSkillEntry__SkillEntry_VehicleStun_Up = 91,
	EUTSkillEntry__SkillEntry_VehicleBurn_Down = 92,
	EUTSkillEntry__SkillEntry_VehicleBurn_Up = 93,
	EUTSkillEntry__SkillEntry_ParachuteLand = 94,
	EUTSkillEntry__SkillEntry_ColorBall_Down = 95,
	EUTSkillEntry__SkillEntry_ColorBall_Up = 96,
	EUTSkillEntry__SkillEntry_SocialIsland_Coin = 97,
	EUTSkillEntry__SkillEntry_SocialIsland_ShootRank = 98,
	EUTSkillEntry__SkillEntry_JungleTribe_Mushroom = 99,
	EUTSkillEntry__SkillEntry_JungleTribe_PickMushroom = 100,
	EUTSkillEntry__SkillEntry_JungleTribe_Totem = 101,
	EUTSkillEntry__SkillEntry_JungleTribe_AirBalloonPray = 102,
	EUTSkillEntry__SkillEntry_JungleTribe_BornlandDance = 103,
	EUTSkillEntry__SkillEntry_JungleTribe_DigTreasure = 104,
	EUTSkillEntry__SkillEntry_JungleTribe_TreasureMap = 105,
	EUTSkillEntry__SkillEntry_SocialIsland_Roast = 106,
	EUTSkillEntry__SkillEntry_PuzzleActivity_Rotate = 107,
	EUTSkillEntry__SkillEntry_PuzzleActivity_Sequence = 108,
	EUTSkillEntry__SkillEntry_PuzzleActivity_Flip = 109,
	EUTSkillEntry__SkillEntry_PuzzleActivity_Sphinx = 110,
	EUTSkillEntry__SkillEntry_OpenTreasure = 111,
	EUTSkillEntry__SkillEntry_Max  = 112,
	EUTSkillEntry__EUTSkillEntry_MAX = 113
};


// Enum ShadowTrackerExtra.ESTEPoseState
enum class ESTEPoseState : uint8_t
{
	ESTEPoseState__Stand           = 0,
	ESTEPoseState__Crouch          = 1,
	ESTEPoseState__Prone           = 2,
	ESTEPoseState__Sprint          = 3,
	ESTEPoseState__CrouchSprint    = 4,
	ESTEPoseState__Crawl           = 5,
	ESTEPoseState__Swim            = 6,
	ESTEPoseState__SwimSprint      = 7,
	ESTEPoseState__Dying           = 8,
	ESTEPoseState__DyingBeCarried  = 9,
	ESTEPoseState__ESTEPoseState_MAX = 10
};


// Enum ShadowTrackerExtra.ETeamNumber
enum class ETeamNumber : uint8_t
{
	ETeamNumber__POLICE            = 0,
	ETeamNumber__TERRORIST         = 1,
	ETeamNumber__CIVILIAN          = 2,
	ETeamNumber__UNKNOWN           = 3,
	ETeamNumber__ETeamNumber_MAX   = 4
};


// Enum ShadowTrackerExtra.EUAVUseType
enum class EUAVUseType : uint8_t
{
	EUAVUseType__UAV_None          = 0,
	EUAVUseType__UAV_Init          = 1,
	EUAVUseType__UAV_Using         = 2,
	EUAVUseType__UAV_Standby       = 3,
	EUAVUseType__UAV_MAX           = 4
};


// Enum ShadowTrackerExtra.ESTExtraVehicleSeatType
enum class ESTExtraVehicleSeatType : uint8_t
{
	ESTExtraVehicleSeatType__ESeatType_DriversSeat = 0,
	ESTExtraVehicleSeatType__ESeatType_PassengersSeat = 1,
	ESTExtraVehicleSeatType__ESeatType_FreeFiringLeftSeat = 2,
	ESTExtraVehicleSeatType__ESeatType_FreeFiringRightSeat = 3,
	ESTExtraVehicleSeatType__ESeatType_GunnerSeat = 4,
	ESTExtraVehicleSeatType__ESeatType_VirtualDriverSeat = 5,
	ESTExtraVehicleSeatType__ESeatType_AssistantSeat = 6,
	ESTExtraVehicleSeatType__ESeatType_Max = 7
};


// Enum ShadowTrackerExtra.EVHSeatSideType
enum class EVHSeatSideType : uint8_t
{
	EVHSeatSideType_Center         = 0,
	EVHSeatSideType_Left           = 1,
	EVHSeatSideType_Right          = 2,
	EVHSeatSideType_MAX            = 3
};


// Enum ShadowTrackerExtra.EVHSeatSpecialType
enum class EVHSeatSpecialType : uint8_t
{
	EVHSeatSpecial_Common          = 0,
	EVHSeatSpecial_Narrow          = 1,
	EVHSeatSpecial_OutLeft         = 2,
	EVHSeatSpecial_OutRight        = 3,
	EVHSeatSpecial_Max             = 4
};


// Enum ShadowTrackerExtra.EVHSeatWeaponHoldType
enum class EVHSeatWeaponHoldType : uint8_t
{
	ESeatWeapon_None               = 0,
	ESeatWeapon_ShortOnly          = 1,
	ESeatWeapon_RifleOnly          = 2,
	ESeatWeapon_SeatWeapon         = 3,
	ESeatWeapon_All                = 4,
	ESeatWeapon_MAX                = 5
};


// Enum ShadowTrackerExtra.EVHSeatGUIType
enum class EVHSeatGUIType : uint8_t
{
	EVHSeatGUIType_NoSeat          = 0,
	EVHSeatGUIType_Empty           = 1,
	EVHSeatGUIType_Other           = 2,
	EVHSeatGUIType_Self            = 3,
	EVHSeatGUIType_Max             = 4
};


// Enum ShadowTrackerExtra.EPlayerCameraMode
enum class EPlayerCameraMode : uint8_t
{
	PCM_None                       = 0,
	PCM_Normal                     = 1,
	PCM_Near                       = 2,
	PCM_Aim                        = 3,
	PCM_Plane                      = 4,
	PCM_FPP                        = 5,
	PCM_MAX                        = 6
};


// Enum ShadowTrackerExtra.ESurviveWeaponPropSlot
enum class ESurviveWeaponPropSlot : uint8_t
{
	SWPS_None                      = 0,
	SWPS_MainShootWeapon1          = 1,
	SWPS_MainShootWeapon2          = 2,
	SWPS_SubShootWeapon            = 3,
	SWPS_MeleeWeapon               = 4,
	SWPS_HandProp                  = 5,
	SWPS_TempSpecialWeapon         = 6,
	SWPS_ShiftGrenadeWeapon        = 7,
	SWPS_VehicleWeapon             = 8,
	SWPS_Max                       = 9
};


// Enum ShadowTrackerExtra.EWeaponChangeInvenroryDataType
enum class EWeaponChangeInvenroryDataType : uint8_t
{
	EWCIDT_Init                    = 0,
	EWCIDT_PickUp                  = 1,
	EWCIDT_PutDown                 = 2,
	EWCIDT_Swap                    = 3,
	EWCIDT_GrenadeLaunch           = 4,
	EWCIDT_MAX                     = 5
};


// Enum ShadowTrackerExtra.EWeaponTriggerEvent
enum class EWeaponTriggerEvent : uint8_t
{
	EWeaponTriggerEvent__EWeaponTriggerEvent_None = 0,
	EWeaponTriggerEvent__EWeaponTriggerEvent_PressFuncBtn = 1,
	EWeaponTriggerEvent__EWeaponTriggerEvent_ReleaseFuncBtn = 2,
	EWeaponTriggerEvent__EWeaponTriggerEvent_MAX = 3
};


// Enum ShadowTrackerExtra.ESTExtraVehicleHealthState
enum class ESTExtraVehicleHealthState : uint8_t
{
	ESTExtraVehicleHealthState__VHS_Good = 0,
	ESTExtraVehicleHealthState__VHS_Smoking = 1,
	ESTExtraVehicleHealthState__VHS_Burning = 2,
	ESTExtraVehicleHealthState__VHS_Destroyed = 3,
	ESTExtraVehicleHealthState__VHS_MAX = 4
};


// Enum ShadowTrackerExtra.EDisplayQuality
enum class EDisplayQuality : uint8_t
{
	EDisplayQuality__Low           = 0,
	EDisplayQuality__Middle        = 1,
	EDisplayQuality__High          = 2,
	EDisplayQuality__Invalid       = 3,
	EDisplayQuality__EDisplayQuality_MAX = 4
};


// Enum ShadowTrackerExtra.ESyncOperation
enum class ESyncOperation : uint8_t
{
	ESyncOperation__PutOn          = 0,
	ESyncOperation__PutOff         = 1,
	ESyncOperation__ApplyHead      = 2,
	ESyncOperation__MAX            = 3
};


// Enum ShadowTrackerExtra.EAvatarActionType
enum class EAvatarActionType : uint8_t
{
	EAvatarActionType__NONE        = 0,
	EAvatarActionType__ApplyMesh   = 1,
	EAvatarActionType__ApplyMaterial = 2,
	EAvatarActionType__ApplyMatConfig = 3,
	EAvatarActionType__ApplyParticle = 4,
	EAvatarActionType__ApplyDIYPattern = 5,
	EAvatarActionType__ApplyItemHandle = 6,
	EAvatarActionType__ApplyWeaponHandle = 7,
	EAvatarActionType__ApplyDIYMatParam = 8,
	EAvatarActionType__ApplyDIYMirroParam = 9,
	EAvatarActionType__EAvatarActionType_MAX = 10
};


// Enum ShadowTrackerExtra.EMeshAssetType
enum class EMeshAssetType : uint8_t
{
	EMeshAssetType__None           = 0,
	EMeshAssetType__Attach_StaticMesh = 1,
	EMeshAssetType__Attach_SkeletalMesh = 2,
	EMeshAssetType__SetMaster_SkeletalMesh = 3,
	EMeshAssetType__EMeshAssetType_MAX = 4
};


// Enum ShadowTrackerExtra.EWeaponAttachmentSocketType
enum class EWeaponAttachmentSocketType : uint8_t
{
	EWeaponAttachmentSocketType__GunPoint = 0,
	EWeaponAttachmentSocketType__Grip = 1,
	EWeaponAttachmentSocketType__Magazine = 2,
	EWeaponAttachmentSocketType__Gunstock = 3,
	EWeaponAttachmentSocketType__OpticalSight = 4,
	EWeaponAttachmentSocketType__MasterGun = 5,
	EWeaponAttachmentSocketType__Ammo = 6,
	EWeaponAttachmentSocketType__Pendant = 7,
	EWeaponAttachmentSocketType__AngledOpticalSight = 8,
	EWeaponAttachmentSocketType__EWeaponAttachmentSocketType_MAX = 9
};


// Enum ShadowTrackerExtra.EMeshType
enum class EMeshType : uint8_t
{
	EMeshType__None                = 0,
	EMeshType__Skeletal            = 1,
	EMeshType__Static              = 2,
	EMeshType__SkeletalWithSocket  = 3,
	EMeshType__EMeshType_MAX       = 4
};


// Enum ShadowTrackerExtra.EWeaponPendantSocketType
enum class EWeaponPendantSocketType : uint8_t
{
	EWeaponPendantSocketType__First = 0,
	EWeaponPendantSocketType__Third = 1,
	EWeaponPendantSocketType__Lobby = 2,
	EWeaponPendantSocketType__ArmamentBank = 3,
	EWeaponPendantSocketType__Store = 4,
	EWeaponPendantSocketType__Max_Auto = 5,
	EWeaponPendantSocketType__EWeaponPendantSocketType_MAX = 6
};


// Enum ShadowTrackerExtra.EWeaponFuncFlag
enum class EWeaponFuncFlag : uint8_t
{
	EWeaponFuncFlag__SoundDisable  = 0,
	EWeaponFuncFlag__MaxFuncFlag   = 1,
	EWeaponFuncFlag__EWeaponFuncFlag_MAX = 2
};


// Enum ShadowTrackerExtra.EWeaponComponentType
enum class EWeaponComponentType : uint8_t
{
	WCT_None                       = 0,
	WCT_Scope                      = 1,
	WCT_Max                        = 2
};


// Enum ShadowTrackerExtra.ESurvivePickUpGlobalCategory
enum class ESurvivePickUpGlobalCategory : uint8_t
{
	SurvivePickUpItemGlobalCategory_None = 0,
	SurvivePickUpItemGlobalCategory_Weapon = 1,
	SurvivePickUpItemGlobalCategory_PlayerEquipment = 2,
	SurvivePickUpItemGlobalCategory_WeaponComponent = 3,
	SurvivePickUpItemGlobalCategory_ConsumeItem = 4,
	SurvivePickUpItemGlobalCategory_MAX = 5
};


// Enum ShadowTrackerExtra.ESightType
enum class ESightType : uint8_t
{
	SightX1                        = 0,
	SightX2                        = 1,
	SightX4                        = 2,
	SightX8                        = 3,
	SightDefault                   = 4,
	SightX3                        = 5,
	SightX6                        = 6,
	SightTeleScope                 = 7,
	ESightType_MAX                 = 8
};


// Enum ShadowTrackerExtra.EWeaponFireMode
enum class EWeaponFireMode : uint8_t
{
	WeaponFireMode_Single          = 0,
	WeaponFireMode_Burst           = 1,
	WeaponFireMode_Auto            = 2,
	WeaponFireMode_MAX             = 3
};


// Enum ShadowTrackerExtra.EWeaponHoldType
enum class EWeaponHoldType : uint8_t
{
	EWHT_None                      = 0,
	EWHT_SingleHand                = 1,
	EWHT_TwoHand                   = 2,
	EWHT_Max                       = 3
};


// Enum ShadowTrackerExtra.EWeaponType
enum class EWeaponType : uint8_t
{
	AWT_None                       = 0,
	AWT_Pistol                     = 1,
	AWT_PistolSilencer             = 2,
	AWT_ShotGun                    = 3,
	AWT_SubmachineGun              = 4,
	AWT_RPG                        = 5,
	AWT_ChargeGun                  = 6,
	AWT_Knife                      = 7,
	AWT_EnegyCaptureWhip           = 8,
	AWT_RifleGun                   = 9,
	AWT_RPG7                       = 10,
	AWT_MAX                        = 11
};


// Enum ShadowTrackerExtra.EWeaponTypeNew
enum class EWeaponTypeNew : uint8_t
{
	EWeaponTypeNew_Other           = 0,
	EWeaponTypeNew_Rifle           = 1,
	EWeaponTypeNew_SingleShotSniper = 2,
	EWeaponTypeNew_BurstShotSniper = 3,
	EWeaponTypeNew_Submachine      = 4,
	EWeaponTypeNew_ShotGun         = 5,
	EWeaponTypeNew_MachineGun      = 6,
	EWeaponTypeNew_Pistol          = 7,
	EWeaponTypeNew_Melee           = 8,
	EWeaponTypeNew_Crossbow        = 9,
	EWeaponTypeNew_ThrownObj       = 10,
	EWeaponTypeNew_MAX             = 11
};


// Enum ShadowTrackerExtra.EWeaponAction
enum class EWeaponAction : uint8_t
{
	WA_None                        = 0,
	WA_EquipWeapon                 = 1,
	WA_UnEquipWeapon               = 2,
	WA_Shoot                       = 3,
	WA_IdleToNoneIdle              = 4,
	WA_NoneShoot                   = 5,
	WA_Reload                      = 6,
	WA_AutoShoot                   = 7,
	WA_DropWeapon                  = 8,
	WA_MAX                         = 9
};


// Enum ShadowTrackerExtra.EExtraWeaponUIType
enum class EExtraWeaponUIType : uint8_t
{
	EWUT_None                      = 0,
	EWUT_MeleeWeapon               = 1,
	EWUT_ShootWeapon               = 2,
	EWUT_Greanade                  = 3,
	EWUT_KeroseneFurnace           = 4,
	EWUT_MAX                       = 5
};


// Enum ShadowTrackerExtra.EWeaponState
enum class EWeaponState : uint8_t
{
	WS_Unavailable                 = 0,
	WS_UnEquiped                   = 1,
	WS_Equiped                     = 2,
	WS_MAX                         = 3
};


// Enum ShadowTrackerExtra.ESTEWeaponShootType
enum class ESTEWeaponShootType : uint8_t
{
	ESTEWeaponShootType__OneBulletBursting = 0,
	ESTEWeaponShootType__MultiBulletsBursting = 1,
	ESTEWeaponShootType__Auto      = 2,
	ESTEWeaponShootType__Volley    = 3,
	ESTEWeaponShootType__ESTEWeaponShootType_MAX = 4
};


// Enum ShadowTrackerExtra.EWeaponReloadMethod
enum class EWeaponReloadMethod : uint8_t
{
	All                            = 0,
	Tactical                       = 1,
	EWeaponReloadMethod_MAX        = 2
};


// Enum ShadowTrackerExtra.EWeaponShootIntervalMode
enum class EWeaponShootIntervalMode : uint8_t
{
	EWeaponShootIntervalMode__EWeaponShootIntervalMode_A = 0,
	EWeaponShootIntervalMode__EWeaponShootIntervalMode_B = 1,
	EWeaponShootIntervalMode__EWeaponShootIntervalMode_MAX = 2
};


// Enum ShadowTrackerExtra.ESightVisionType
enum class ESightVisionType : uint8_t
{
	NoneSightVision                = 0,
	NightVision                    = 1,
	ThermalImaging                 = 2,
	ESightVisionType_MAX           = 3
};


// Enum ShadowTrackerExtra.ECrossHairSpreadType
enum class ECrossHairSpreadType : uint8_t
{
	ECrossHairSpreadType__ECHST_Offset = 0,
	ECrossHairSpreadType__ECHST_Scale = 1,
	ECrossHairSpreadType__ECHST_Damage = 2,
	ECrossHairSpreadType__ECHST_Rotate = 3,
	ECrossHairSpreadType__ECHST_MAX = 4
};


// Enum ShadowTrackerExtra.EWeaponReloadType
enum class EWeaponReloadType : uint8_t
{
	Magzine                        = 0,
	OneByOne                       = 1,
	OneByOneAndClip                = 2,
	EWeaponReloadType_MAX          = 3
};


// Enum ShadowTrackerExtra.EShootWeaponState
enum class EShootWeaponState : uint8_t
{
	SWS_Idle                       = 0,
	SWS_NoneIdle                   = 1,
	SWS_Shooting                   = 2,
	SWS_Reloading                  = 3,
	SWS_ReloadDone                 = 4,
	SWS_MAX                        = 5
};


// Enum ShadowTrackerExtra.EShootWeaponShootMode
enum class EShootWeaponShootMode : uint8_t
{
	SWST_MuzzleDirection           = 0,
	SWST_TargetDirection           = 1,
	SWST_TraceTarget               = 2,
	SWST_VehicleShoot              = 3,
	SWST_MAX                       = 4
};


// Enum ShadowTrackerExtra.EForceHideState
enum class EForceHideState : uint8_t
{
	EForceHideState__None          = 0,
	EForceHideState__All           = 1,
	EForceHideState__Team          = 2,
	EForceHideState__Self          = 3,
	EForceHideState__EForceHideState_MAX = 4
};


// Enum ShadowTrackerExtra.EAvatarCustomType
enum class EAvatarCustomType : uint8_t
{
	EAvatarCustomType__AvatarCustomNone = 0,
	EAvatarCustomType__AvatarCustomCharacter = 1,
	EAvatarCustomType__AvatarCustomWeapon = 2,
	EAvatarCustomType__AvatarCustomVehicle = 3,
	EAvatarCustomType__AvatarCustomPet = 4,
	EAvatarCustomType__EAvatarCustomType_MAX = 5
};


// Enum ShadowTrackerExtra.ESlotDescDiff
enum class ESlotDescDiff : uint8_t
{
	ESlotDescDiff__NONE            = 0,
	ESlotDescDiff__VisibleDiff     = 1,
	ESlotDescDiff__MeshDiff        = 2,
	ESlotDescDiff__MatDiff         = 3,
	ESlotDescDiff__ESlotDescDiff_MAX = 4
};


// Enum ShadowTrackerExtra.EAvatarSlotType
enum class EAvatarSlotType : uint8_t
{
	EAvatarSlotType__EAvatarSlotType_NONE = 0,
	EAvatarSlotType__EAvatarSlotType_HeadEquipemtSlot = 1,
	EAvatarSlotType__EAvatarSlotType_HairEquipemtSlot = 2,
	EAvatarSlotType__EAvatarSlotType_HatEquipemtSlot = 3,
	EAvatarSlotType__EAvatarSlotType_FaceEquipemtSlot = 4,
	EAvatarSlotType__EAvatarSlotType_ClothesEquipemtSlot = 5,
	EAvatarSlotType__EAvatarSlotType_PantsEquipemtSlot = 6,
	EAvatarSlotType__EAvatarSlotType_ShoesEquipemtSlot = 7,
	EAvatarSlotType__EAvatarSlotType_BackpackEquipemtSlot = 8,
	EAvatarSlotType__EAvatarSlotType_HelmetEquipemtSlot = 9,
	EAvatarSlotType__EAvatarSlotType_ArmorEquipemtSlot = 10,
	EAvatarSlotType__EAvatarSlotType_ParachuteEquipemtSlot = 11,
	EAvatarSlotType__EAvatarSlotType_GlassEquipemtSlot = 12,
	EAvatarSlotType__EAvatarSlotType_NightVisionEquipemtSlot = 13,
	EAvatarSlotType__EAvatarSlotType_BeardEquipemtSlot = 14,
	EAvatarSlotType__EAvatarSlotType_GlideEquipemtSlot = 15,
	EAvatarSlotType__EAvatarSlotType_HandEffectEquipemtSlot = 16,
	EAvatarSlotType__EAvatarSlotType_BackPack_PendantSlot = 17,
	EAvatarSlotType__EAvatarSlotType_MechaChestSlot = 18,
	EAvatarSlotType__EAvatarSlotType_MechaArmSlot = 19,
	EAvatarSlotType__EAvatarSlotType_MechaLegSlot = 20,
	EAvatarSlotType__EAvatarSlotType_MechaInnerSuitSlot = 21,
	EAvatarSlotType__EAvatarSlotType_MaxSlotNum = 22,
	EAvatarSlotType__EAvatarSlotType_MAX = 23
};


// Enum ShadowTrackerExtra.EAvatarSlotNameConfig
enum class EAvatarSlotNameConfig : uint8_t
{
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_None = 0,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Swim_Suit = 1,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Swim_Pants = 2,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Female_Default_Bra = 3,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_SanJiaoKu = 4,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Black_Pants = 5,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Female_White_Bra = 6,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_Female_Black_Bra = 7,
	EAvatarSlotNameConfig__EAvatarSlotNameConfig_MAX = 8
};


// Enum ShadowTrackerExtra.EEffectValidDevice
enum class EEffectValidDevice : uint8_t
{
	EEffectValidDevice__LowDevice  = 0,
	EEffectValidDevice__MidDevice  = 1,
	EEffectValidDevice__HighDevice = 2,
	EEffectValidDevice__LowAndMidDevice = 3,
	EEffectValidDevice__LowAndHighDevice = 4,
	EEffectValidDevice__MidAndHighDevice = 5,
	EEffectValidDevice__All        = 6,
	EEffectValidDevice__EEffectValidDevice_MAX = 7
};


// Enum ShadowTrackerExtra.EEffectValidTarget
enum class EEffectValidTarget : uint8_t
{
	EEffectValidTarget__Self       = 0,
	EEffectValidTarget__Teammate   = 1,
	EEffectValidTarget__Enemy      = 2,
	EEffectValidTarget__SelfAndTeammate = 3,
	EEffectValidTarget__SelfAndEnemy = 4,
	EEffectValidTarget__EnemyAndTeammate = 5,
	EEffectValidTarget__All        = 6,
	EEffectValidTarget__EEffectValidTarget_MAX = 7
};


// Enum ShadowTrackerExtra.EEffectCreateType
enum class EEffectCreateType : uint8_t
{
	EEffectCreateType__All         = 0,
	EEffectCreateType__RandomOne   = 1,
	EEffectCreateType__RandomGroup = 2,
	EEffectCreateType__RandomSocket = 3,
	EEffectCreateType__EEffectCreateType_MAX = 4
};


// Enum ShadowTrackerExtra.EAvatarSubSlot
enum class EAvatarSubSlot : uint8_t
{
	EAvatarSubSlot__ESubSlot_None  = 0,
	EAvatarSubSlot__ESubSlot_PonyTailHairSlot = 1,
	EAvatarSubSlot__ESubSlot_AnimHair = 2,
	EAvatarSubSlot__ESubSlot_HatPre1 = 3,
	EAvatarSubSlot__ESubSlot_HatPre2 = 4,
	EAvatarSubSlot__ESubSlot_AnimHat = 5,
	EAvatarSubSlot__ESubSlot_VeilSlot = 6,
	EAvatarSubSlot__ESubSlot_GhostFace = 7,
	EAvatarSubSlot__ESubSlot_FacePre1 = 8,
	EAvatarSubSlot__ESubSlot_FacePre2 = 9,
	EAvatarSubSlot__ESubSlot_AnimBeard = 10,
	EAvatarSubSlot__ESubSlot_HoodSlot = 11,
	EAvatarSubSlot__ESubSlot_ClothPre1 = 12,
	EAvatarSubSlot__ESubSlot_ClothPre2 = 13,
	EAvatarSubSlot__ESubSlot_StockingSlot = 14,
	EAvatarSubSlot__ESubSlot_BootsSlot = 15,
	EAvatarSubSlot__ESubSlot_MAX   = 16
};


// Enum ShadowTrackerExtra.ESyncTicketStatus
enum class ESyncTicketStatus : uint8_t
{
	ESyncTicketStatus__EMatch      = 0,
	ESyncTicketStatus__ETimeOut    = 1,
	ESyncTicketStatus__EFuture     = 2,
	ESyncTicketStatus__ESyncTicketStatus_MAX = 3
};


// Enum ShadowTrackerExtra.EFatalDamageCharacterType
enum class EFatalDamageCharacterType : uint8_t
{
	EUnknown                       = 0,
	EPlayer                        = 1,
	ERobot                         = 2,
	EMonster                       = 3,
	EBoss                          = 4,
	EInfecZombie                   = 5,
	EInfecRevenger                 = 6,
	EWalkingDead                   = 7,
	EWalkingDeadAI                 = 8,
	EFatalDamageCharacterType_MAX  = 9
};


// Enum ShadowTrackerExtra.EFatalDamageRelationShip
enum class EFatalDamageRelationShip : uint8_t
{
	MyTeamateIsCauser              = 0,
	NotRelated                     = 1,
	MyTeammateIsVictim             = 2,
	MyTeammateIsCauserAndVictim    = 3,
	EFatalDamageRelationShip_MAX   = 4
};


// Enum ShadowTrackerExtra.EInviteResponceType
enum class EInviteResponceType : uint8_t
{
	EInviteResponceType__ETimeout  = 0,
	EInviteResponceType__EAgree    = 1,
	EInviteResponceType__ERefuse   = 2,
	EInviteResponceType__EBeInviting = 3,
	EInviteResponceType__EInvalidInvitation = 4,
	EInviteResponceType__ENotAllowedInvite = 5,
	EInviteResponceType__ENotAllowedFollow = 6,
	EInviteResponceType__EDuringTransferLeader = 7,
	EInviteResponceType__EInviteResponceType_MAX = 8
};


// Enum ShadowTrackerExtra.EParachuteInvitationType
enum class EParachuteInvitationType : uint8_t
{
	EParachuteInvitationType__EInviteFollow = 0,
	EParachuteInvitationType__EInviteTransferLeader = 1,
	EParachuteInvitationType__EParachuteInvitationType_MAX = 2
};


// Enum ShadowTrackerExtra.EDeltaRotationTest
enum class EDeltaRotationTest : uint8_t
{
	EDeltaRotationTest__Prone      = 0,
	EDeltaRotationTest__KnockedDown = 1,
	EDeltaRotationTest__EDeltaRotationTest_MAX = 2
};


// Enum ShadowTrackerExtra.ECharacterMainType
enum class ECharacterMainType : uint8_t
{
	ECharacterMainType__NormalPlayer = 0,
	ECharacterMainType__Zombie     = 1,
	ECharacterMainType__WalkingDead = 2,
	ECharacterMainType__WalkingDeadAI = 3,
	ECharacterMainType___MAX       = 4,
	ECharacterMainType__ECharacterMainType_MAX = 5
};


// Enum ShadowTrackerExtra.ECharacterSubType
enum class ECharacterSubType : uint8_t
{
	ECharacterSubType__InvalidPawnType = 0,
	ECharacterSubType__NormalPlayer = 1,
	ECharacterSubType__RevengerPlayer = 2,
	ECharacterSubType__MotherZombie = 3,
	ECharacterSubType__NormalZombie = 4,
	ECharacterSubType__InvisibleZombie = 5,
	ECharacterSubType__ThrowerZombie = 6,
	ECharacterSubType__WalkingDeadMale = 7,
	ECharacterSubType__WalkingDeadFemale = 8,
	ECharacterSubType___MAX        = 9,
	ECharacterSubType__ECharacterSubType_MAX = 10
};


// Enum ShadowTrackerExtra.EParachuteState
enum class EParachuteState : uint8_t
{
	EParachuteState__PS_None       = 0,
	EParachuteState__PS_FreeFall   = 1,
	EParachuteState__PS_Opening    = 2,
	EParachuteState__PS_Landing    = 3,
	EParachuteState__PS_Launch     = 4,
	EParachuteState__PS_MAX        = 5
};


// Enum ShadowTrackerExtra.ESTExtraVehicleType
enum class ESTExtraVehicleType : uint8_t
{
	ESTExtraVehicleType__VT_Unknown = 0,
	ESTExtraVehicleType__VT_Motorbike = 1,
	ESTExtraVehicleType__VT_Motorbike01 = 2,
	ESTExtraVehicleType__VT_Motorbike_SideCart = 3,
	ESTExtraVehicleType__VT_Motorbike_SideCart01 = 4,
	ESTExtraVehicleType__VT_Dacia  = 5,
	ESTExtraVehicleType__VT_Dacia01 = 6,
	ESTExtraVehicleType__VT_Dacia02 = 7,
	ESTExtraVehicleType__VT_Dacia03 = 8,
	ESTExtraVehicleType__VT_UAZ    = 9,
	ESTExtraVehicleType__VT_UAZ01  = 10,
	ESTExtraVehicleType__VT_UAZ02  = 11,
	ESTExtraVehicleType__VT_Buggy  = 12,
	ESTExtraVehicleType__VT_Buggy01 = 13,
	ESTExtraVehicleType__VT_Buggy02 = 14,
	ESTExtraVehicleType__VT_PG117  = 15,
	ESTExtraVehicleType__VT_Aquarail = 16,
	ESTExtraVehicleType__VT_MiniBus = 17,
	ESTExtraVehicleType__VT_MiniBus01 = 18,
	ESTExtraVehicleType__VT_MiniBus02 = 19,
	ESTExtraVehicleType__VT_PickUp = 20,
	ESTExtraVehicleType__VT_PickUp01 = 21,
	ESTExtraVehicleType__VT_PickUp02 = 22,
	ESTExtraVehicleType__VT_PickUp03 = 23,
	ESTExtraVehicleType__VT_PickUp04 = 24,
	ESTExtraVehicleType__VT_PickUp05 = 25,
	ESTExtraVehicleType__VT_PickUp06 = 26,
	ESTExtraVehicleType__VT_PickUp07 = 27,
	ESTExtraVehicleType__VT_PickUp08 = 28,
	ESTExtraVehicleType__VT_PickUp09 = 29,
	ESTExtraVehicleType__VT_Buggy03 = 30,
	ESTExtraVehicleType__VT_Buggy04 = 31,
	ESTExtraVehicleType__VT_Buggy05 = 32,
	ESTExtraVehicleType__VT_Mirado_Close = 33,
	ESTExtraVehicleType__VT_Mirado_Close01 = 34,
	ESTExtraVehicleType__VT_Mirado_Close02 = 35,
	ESTExtraVehicleType__VT_Mirado_Close03 = 36,
	ESTExtraVehicleType__VT_Mirado_Open = 37,
	ESTExtraVehicleType__VT_Mirado_Open01 = 38,
	ESTExtraVehicleType__VT_Mirado_Open02 = 39,
	ESTExtraVehicleType__VT_Mirado_Open03 = 40,
	ESTExtraVehicleType__VT_UAZ04  = 41,
	ESTExtraVehicleType__VT_Rony   = 42,
	ESTExtraVehicleType__VT_Rony01 = 43,
	ESTExtraVehicleType__VT_Rony02 = 44,
	ESTExtraVehicleType__VT_Scooter = 45,
	ESTExtraVehicleType__VT_Surfboard = 46,
	ESTExtraVehicleType__VT_UH60   = 47,
	ESTExtraVehicleType__VT_Amphibious = 48,
	ESTExtraVehicleType__VT_TUK    = 49,
	ESTExtraVehicleType__VT_Snowboard = 50,
	ESTExtraVehicleType__VT_UAV    = 51,
	ESTExtraVehicleType__VT_Telecar = 52,
	ESTExtraVehicleType__VT_UCAV   = 53,
	ESTExtraVehicleType__VT_Tank   = 54,
	ESTExtraVehicleType__VT_DragonBoat = 55,
	ESTExtraVehicleType__VT_Tesla  = 56,
	ESTExtraVehicleType__VT_ExtraMount = 57,
	ESTExtraVehicleType__VT_Motorglider = 58,
	ESTExtraVehicleType__VT_LootTruck = 59,
	ESTExtraVehicleType__VT_ATGMotorCycle = 60,
	ESTExtraVehicleType__VT_ModelY = 61,
	ESTExtraVehicleType__VT_Lamborghini = 62,
	ESTExtraVehicleType__VT_Lamborghini01 = 63,
	ESTExtraVehicleType__VT_MegaDrop = 64,
	ESTExtraVehicleType__VT_BigFoot = 65,
	ESTExtraVehicleType__VT_TrackVehicle = 66,
	ESTExtraVehicleType__VT_CoupeRB = 67,
	ESTExtraVehicleType__VT_CatapultMachine = 68,
	ESTExtraVehicleType__VT_MAX    = 69
};


// Enum ShadowTrackerExtra.EThrowGrenadeMode
enum class EThrowGrenadeMode : uint8_t
{
	HighThrowMode                  = 0,
	LowThrowMode                   = 1,
	EThrowGrenadeMode_MAX          = 2
};


// Enum ShadowTrackerExtra.ESightVisionMask
enum class ESightVisionMask : uint8_t
{
	ESightVisionMask__NightVisionEquip = 0,
	ESightVisionMask__NightVisionHelmet = 1,
	ESightVisionMask__NightVisionScope = 2,
	ESightVisionMask__NightVisionEnv = 3,
	ESightVisionMask__ThermalImagingScope = 4,
	ESightVisionMask__NightVision  = 5,
	ESightVisionMask__NightVisionFrame = 6,
	ESightVisionMask__ESightVisionMask_MAX = 7
};


// Enum ShadowTrackerExtra.ECarryBackState
enum class ECarryBackState : uint8_t
{
	ECarryBackState__None          = 0,
	ECarryBackState__InCarryBack   = 1,
	ECarryBackState__CarryBackDone = 2,
	ECarryBackState__InBeCarriedBack = 3,
	ECarryBackState__BeCarriedBackDone = 4,
	ECarryBackState__ECarryBackState_MAX = 5
};


// Enum ShadowTrackerExtra.ESightVisionCondition
enum class ESightVisionCondition : uint8_t
{
	ESightVisionCondition__NightVisionUnderGround = 0,
	ESightVisionCondition__ESightVisionCondition_MAX = 1
};


// Enum ShadowTrackerExtra.EPaintDecalTargetValidationType
enum class EPaintDecalTargetValidationType : uint8_t
{
	EPaintDecalTargetValidationType__ValidTarget = 0,
	EPaintDecalTargetValidationType__InvalidTarget = 1,
	EPaintDecalTargetValidationType__OutrangeTarget = 2,
	EPaintDecalTargetValidationType__EPaintDecalTargetValidationType_MAX = 3
};


// Enum ShadowTrackerExtra.EFollowState
enum class EFollowState : uint8_t
{
	EFollowState__None             = 0,
	EFollowState__Leader           = 1,
	EFollowState__Follower         = 2,
	EFollowState__EFollowState_MAX = 3
};


// Enum ShadowTrackerExtra.ECharacterHealthStatus
enum class ECharacterHealthStatus : uint8_t
{
	HealthyAlive                   = 0,
	HasLastBreath                  = 1,
	FinishedLastBreath             = 2,
	WaitingForRevival              = 3,
	Max                            = 4
};


// Enum ShadowTrackerExtra.EUAVCharacterMsgType
enum class EUAVCharacterMsgType : uint8_t
{
	EUAVCharacterMsgType__UAV_None = 0,
	EUAVCharacterMsgType__UAV_VehicleSound = 1,
	EUAVCharacterMsgType__UAV_CharacterMoveSound = 2,
	EUAVCharacterMsgType__UAV_BulletSound = 3,
	EUAVCharacterMsgType__UAV_HurtSoud = 4,
	EUAVCharacterMsgType__UAV_MAX  = 5
};


// Enum ShadowTrackerExtra.EFootStepState
enum class EFootStepState : uint8_t
{
	EFootStepState__Run            = 0,
	EFootStepState__Squat          = 1,
	EFootStepState__Walk           = 2,
	EFootStepState__Crawl          = 3,
	EFootStepState__Fall           = 4,
	EFootStepState__EFootStepState_MAX = 5
};


// Enum ShadowTrackerExtra.EMoveBaseSpeedType
enum class EMoveBaseSpeedType : uint8_t
{
	EMoveBaseSpeedType__MBST_Normal = 0,
	EMoveBaseSpeedType__MBST_Fast  = 1,
	EMoveBaseSpeedType__MBST_MAX   = 2
};


// Enum ShadowTrackerExtra.EShootVertifyRes
enum class EShootVertifyRes : uint8_t
{
	OK                             = 0,
	ShootBigHead                   = 1,
	ShootPointBigDeviation         = 2,
	ShootBigBoxNull                = 3,
	ShootOtherBlock                = 4,
	ShootOtherBlockRev             = 5,
	NoLagCompensation              = 6,
	ShootTimeTooDelay              = 7,
	MuzzleBigDeviation             = 8,
	ShootHitHeadError              = 9,
	ShootHitRotationError          = 10,
	ShootRangeError                = 11,
	ShootHitInVehicle              = 12,
	ShootHitAITarget               = 13,
	ShootHitVehicleTarget          = 14,
	BulletFlyTimeError             = 15,
	BulletDirError                 = 16,
	BulletImpactOffsetError        = 17,
	CharacterImpactOffsetError     = 18,
	ImpactTargetPassWall           = 19,
	GunPoseError                   = 20,
	HisotryLocusError              = 21,
	Client_HitImpactPassWall       = 22,
	Client_ShootMuzzleHeight       = 23,
	Client_BoneMissMatch           = 24,
	ErrorShooterWeaponRange        = 25,
	MuzzleDirError                 = 26,
	ShooterPosError                = 27,
	ClientVerifyError              = 28,
	VictmPosError                  = 29,
	ShooterInDamageFreeze          = 30,
	WeaponScopePosError            = 31,
	OwnerHeadAndMuzzlePassWall     = 32,
	Non                            = 33,
	EShootVertifyRes_MAX           = 34
};


// Enum ShadowTrackerExtra.ESTEScopeType
enum class ESTEScopeType : uint8_t
{
	Normal                         = 0,
	ProneMove                      = 1,
	InFold                         = 2,
	AutoCollapsed                  = 3,
	BoltAction                     = 4,
	ESTEScopeType_MAX              = 5
};


// Enum ShadowTrackerExtra.EIdeaDecalParentType
enum class EIdeaDecalParentType : uint8_t
{
	EIdeaDecalParentType__NoParent = 0,
	EIdeaDecalParentType__MovableStaticMesh = 1,
	EIdeaDecalParentType__SkeletalMesh = 2,
	EIdeaDecalParentType__DestroyableStaticMesh = 3,
	EIdeaDecalParentType__EIdeaDecalParentType_MAX = 4
};


// Enum ShadowTrackerExtra.ERecoveryReasonType
enum class ERecoveryReasonType : uint8_t
{
	ERecoveryReason_Medicine       = 0,
	ERecoveryReason_Energy         = 1,
	ERecoveryReason_RescueByTeammate = 2,
	ERecoveryReason_Max            = 3
};


// Enum ShadowTrackerExtra.EFootprintType
enum class EFootprintType : uint8_t
{
	EFootprintType__Invalid        = 0,
	EFootprintType__Left           = 1,
	EFootprintType__Right          = 2,
	EFootprintType__EFootprintType_MAX = 3
};


// Enum ShadowTrackerExtra.EPutDownDetachMethod
enum class EPutDownDetachMethod : uint8_t
{
	EPutDownDetachMethod__Freedom  = 0,
	EPutDownDetachMethod__Front    = 1,
	EPutDownDetachMethod__Back     = 2,
	EPutDownDetachMethod__EPutDownDetachMethod_MAX = 3
};


// Enum ShadowTrackerExtra.EMeleeAutoAimType
enum class EMeleeAutoAimType : uint8_t
{
	EMeleeAutoAimType__NoAutoAim   = 0,
	EMeleeAutoAimType__AllTime     = 1,
	EMeleeAutoAimType__EMeleeAutoAimType_MAX = 2
};


// Enum ShadowTrackerExtra.EHealthPredictShowType
enum class EHealthPredictShowType : uint8_t
{
	EHealthPredict_Add             = 0,
	EHealthPredict_Set             = 1,
	EHealthPredict_Max             = 2
};


// Enum ShadowTrackerExtra.EHitPartJugementType
enum class EHitPartJugementType : uint8_t
{
	HitPos                         = 0,
	HitBone                        = 1,
	EHitPartJugementType_MAX       = 2
};


// Enum ShadowTrackerExtra.EMonsterPoseType
enum class EMonsterPoseType : uint8_t
{
	EMonsterPose_Birth01           = 0,
	EMonsterPose_Birth02           = 1,
	EMonsterPose_Idle              = 2,
	EMonsterPose_Combat_Idle       = 3,
	EMonsterPose_Run               = 4,
	EMonsterPose_Combat_Run        = 5,
	EMonsterPose_Attack_01         = 6,
	EMonsterPose_Attack_02         = 7,
	EMonsterPose_Attack_03         = 8,
	EMonsterPose_Hit               = 9,
	EMonsterPose_Hit_Hard          = 10,
	EMonsterPose_Stiff             = 11,
	EMonsterPose_Jump_Start        = 12,
	EMonsterPose_Fall              = 13,
	EMonsterPose_Fall_Stand        = 14,
	EMonsterPose_Fall_Hard_Stand   = 15,
	EMonsterPose_Death_Front       = 16,
	EMonsterPose_Death_HeadShot    = 17,
	EMonsterPose_Death_VehicleHit  = 18,
	EMonsterPose_Death_Explosion   = 19,
	EMonsterPose_Death_Stand       = 20,
	EMonsterPose_Climb             = 21,
	EMonsterPose_Climb_Window      = 22,
	EMonsterPose_Climbing          = 23,
	EMonsterPose_Stun              = 24,
	EMonsterPose_Stride            = 25,
	EMonsterPose_EarthEscape       = 26,
	EMonsterPose_Turn              = 27,
	EMonsterPose_StopLeftLeg       = 28,
	EMonsterPose_StopRightLeg      = 29,
	EMonsterPose_StopLeftLeg_Front = 30,
	EMonsterPose_StopRightLeg_Front = 31,
	EMonsterPose_Max               = 32
};


// Enum ShadowTrackerExtra.ESTEAIState
enum class ESTEAIState : uint8_t
{
	ESTEAIState__ZS_Spawn          = 0,
	ESTEAIState__ZS_Idle           = 1,
	ESTEAIState__ZS_Battle         = 2,
	ESTEAIState__ZS_Move           = 3,
	ESTEAIState__ZS_Run            = 4,
	ESTEAIState__ZS_Inspect        = 5,
	ESTEAIState__ZS_Jump           = 6,
	ESTEAIState__ZS_Land_Light     = 7,
	ESTEAIState__ZS_Land_Hard      = 8,
	ESTEAIState__ZS_Suffer         = 9,
	ESTEAIState__ZS_SufferFreez    = 10,
	ESTEAIState__ZS_Fall           = 11,
	ESTEAIState__ZS_ClimbingWall   = 12,
	ESTEAIState__ZS_CrossingWindow = 13,
	ESTEAIState__ZS_Dead           = 14,
	ESTEAIState__ZS_LockTarget     = 15,
	ESTEAIState__ZS_SpawnOnCeiling = 16,
	ESTEAIState__ZS_NearDeath      = 17,
	ESTEAIState__ZS_Stun           = 18,
	ESTEAIState__ZS_Frozen         = 19,
	ESTEAIState__ZS_Charge         = 20,
	ESTEAIState__ZS_EarthEscape    = 21,
	ESTEAIState__ZS_MAX            = 22
};


// Enum ShadowTrackerExtra.EBPAIState
enum class EBPAIState : uint8_t
{
	EBPAIState__ZS_Spawn           = 0,
	EBPAIState__ZS_Idle            = 1,
	EBPAIState__ZS_Battle          = 2,
	EBPAIState__ZS_Move            = 3,
	EBPAIState__ZS_Run             = 4,
	EBPAIState__ZS_Inspect         = 5,
	EBPAIState__ZS_Jump            = 6,
	EBPAIState__ZS_Land_Light      = 7,
	EBPAIState__ZS_Land_Hard       = 8,
	EBPAIState__ZS_Suffer          = 9,
	EBPAIState__ZS_SufferFreez     = 10,
	EBPAIState__ZS_Fall            = 11,
	EBPAIState__ZS_ClimbingWall    = 12,
	EBPAIState__ZS_CrossingWindow  = 13,
	EBPAIState__ZS_Dead            = 14,
	EBPAIState__ZS_LockTarget      = 15,
	EBPAIState__ZS_SpawnOnCeiling  = 16,
	EBPAIState__ZS_NearDeath       = 17,
	EBPAIState__ZS_Stun            = 18,
	EBPAIState__ZS_Frozen          = 19,
	EBPAIState__ZS_Charge          = 20,
	EBPAIState__ZS_EarthEscape     = 21,
	EBPAIState__ZS_Max             = 22
};


// Enum ShadowTrackerExtra.EStateType
enum class EStateType : uint8_t
{
	EStateType__State_None         = 0,
	EStateType__State_Initial      = 1,
	EStateType__State_Fight        = 2,
	EStateType__State_InPlane      = 3,
	EStateType__State_InExPlane    = 4,
	EStateType__State_Launch       = 5,
	EStateType__State_ParachuteJump = 6,
	EStateType__State_ParachuteOpen = 7,
	EStateType__State_Dead         = 8,
	EStateType__State_Finish       = 9,
	EStateType__State_MAX          = 10
};


// Enum ShadowTrackerExtra.EActivityInteractiveState
enum class EActivityInteractiveState : uint8_t
{
	EActivityInteractiveState__EInteractiveNone = 0,
	EActivityInteractiveState__EInteractiveStart = 1,
	EActivityInteractiveState__EInteractiveInterrupt = 2,
	EActivityInteractiveState__EInteractiveFinished = 3,
	EActivityInteractiveState__EActivityInteractiveState_MAX = 4
};


// Enum ShadowTrackerExtra.EScreenParticleEffectType
enum class EScreenParticleEffectType : uint8_t
{
	ESPET_None                     = 0,
	ESPET_Rainy                    = 1,
	ESPET_Snowy                    = 2,
	ESPET_Blizzard                 = 3,
	ESPET_DustStorm                = 4,
	ESPET_MicroRegion              = 5,
	ESPET_Max                      = 6
};


// Enum ShadowTrackerExtra.EAngledSightType
enum class EAngledSightType : uint8_t
{
	Switch                         = 0,
	AngledSight                    = 1,
	NormalSight                    = 2,
	EAngledSightType_MAX           = 3
};


// Enum ShadowTrackerExtra.EVehicleStyleType
enum class EVehicleStyleType : uint8_t
{
	EVehicleStyleType__EVehicleStyleType_NONE = 0,
	EVehicleStyleType__EVehicleStyleType_Model = 1,
	EVehicleStyleType__EVehicleStyleType_Color = 2,
	EVehicleStyleType__EVehicleStyleType_Pattern = 3,
	EVehicleStyleType__EVehicleStyleType_Particle = 4,
	EVehicleStyleType__EVehicleStyleType_MAX = 5
};


// Enum ShadowTrackerExtra.EVehicleSlotType
enum class EVehicleSlotType : uint8_t
{
	EVehicleSlotType__EVehicleSlotType_NONE = 0,
	EVehicleSlotType__EVehicleSlotType_Body = 1,
	EVehicleSlotType__EVehicleSlotType_Bonnet = 2,
	EVehicleSlotType__EVehicleSlotType_Wheel = 3,
	EVehicleSlotType__EVehicleSlotType_FrontBumper = 4,
	EVehicleSlotType__EVehicleSlotType_TailBumper = 5,
	EVehicleSlotType__EVehicleSlotType_Empennage = 6,
	EVehicleSlotType__EVehicleSlotType_Skirt = 7,
	EVehicleSlotType__EVehicleSlotType_Interior = 8,
	EVehicleSlotType__EVehicleSlotType_Roof = 9,
	EVehicleSlotType__EVehicleSlotType_Exhaust = 10,
	EVehicleSlotType__EVehicleSlotType_Attach1 = 11,
	EVehicleSlotType__EVehicleSlotType_Attach2 = 12,
	EVehicleSlotType__EVehicleSlotType_Attach3 = 13,
	EVehicleSlotType__EVehicleSlotType_Attach4 = 14,
	EVehicleSlotType__EVehicleSlotType_MaxSlotNum = 15,
	EVehicleSlotType__EVehicleSlotType_MAX = 16
};


// Enum ShadowTrackerExtra.ESTExtraVehicleUserState
enum class ESTExtraVehicleUserState : uint8_t
{
	ESTExtraVehicleUserState__EVUS_OutOfVehicle = 0,
	ESTExtraVehicleUserState__EVUS_AsDriver = 1,
	ESTExtraVehicleUserState__EVUS_ASPassenger = 2,
	ESTExtraVehicleUserState__EVUS_MAX = 3
};


// Enum ShadowTrackerExtra.ESTExtraUAVVehicleState
enum class ESTExtraUAVVehicleState : uint8_t
{
	ESTExtraUAVVehicleState__UAVS_Init = 0,
	ESTExtraUAVVehicleState__UAVS_Using = 1,
	ESTExtraUAVVehicleState__UAVS_StandBy = 2,
	ESTExtraUAVVehicleState__UAVS_PowerOff = 3,
	ESTExtraUAVVehicleState__UAVS_Recalling = 4,
	ESTExtraUAVVehicleState__UAVS_Disappearing = 5,
	ESTExtraUAVVehicleState__UAVS_Destroy = 6,
	ESTExtraUAVVehicleState__UAVS_SelfDestruct = 7,
	ESTExtraUAVVehicleState__UAVS_InWater = 8,
	ESTExtraUAVVehicleState__UAVS_Max = 9
};


// Enum ShadowTrackerExtra.EAICharacterRotateInterpType
enum class EAICharacterRotateInterpType : uint8_t
{
	EAICharacterRotateInterpType__UseRotateRateOfCharacterMovementComponent = 0,
	EAICharacterRotateInterpType__UseControlRotationInterp = 1,
	EAICharacterRotateInterpType__EAICharacterRotateInterpType_MAX = 2
};


// Enum ShadowTrackerExtra.EAIShootingPose
enum class EAIShootingPose : uint8_t
{
	EAIShootingPose__ShootingPose_Stand = 0,
	EAIShootingPose__ShootingPose_Stand_Peek_Left = 1,
	EAIShootingPose__ShootingPose_Stand_Peek_Right = 2,
	EAIShootingPose__ShootingPose_Crouch_Peek_Left = 3,
	EAIShootingPose__ShootingPose_Crouch_Peek_Right = 4,
	EAIShootingPose__ShootingPose_Crouch = 5,
	EAIShootingPose__ShootingPose_Prone = 6,
	EAIShootingPose__ShootingPose_Normal = 7,
	EAIShootingPose__ShootingPose_MAX = 8
};


// Enum ShadowTrackerExtra.EAIEquipSpawnItemType
enum class EAIEquipSpawnItemType : uint8_t
{
	EAIEquipSpawnItemType__Shoot_Weap = 0,
	EAIEquipSpawnItemType__Backpack = 1,
	EAIEquipSpawnItemType__other   = 2,
	EAIEquipSpawnItemType__EAIEquipSpawnItemType_MAX = 3
};


// Enum ShadowTrackerExtra.EAIActionType
enum class EAIActionType : uint8_t
{
	AIActionType_Normal            = 0,
	AIActionType_SpecialAction     = 1,
	AIActionType_FinalCircle       = 2,
	AIActionType_MAX               = 3
};


// Enum ShadowTrackerExtra.EWeatherStatusType
enum class EWeatherStatusType : uint8_t
{
	EWeatherStatusType__EWeatherStatusType_None = 0,
	EWeatherStatusType__EWeatherStatusType_SunnyDay = 1,
	EWeatherStatusType__EWeatherStatusType_Night = 2,
	EWeatherStatusType__EWeatherStatusType_Fog = 3,
	EWeatherStatusType__EWeatherStatusType_Rain = 4,
	EWeatherStatusType__EWeatherStatusType_Snow = 5,
	EWeatherStatusType__EWeatherStatusType_Blizzard = 6,
	EWeatherStatusType__EWeatherStatusType_PVEDaytime = 7,
	EWeatherStatusType__EWeatherStatusType_PVEEvening = 8,
	EWeatherStatusType__EWeatherStatusType_PVENight = 9,
	EWeatherStatusType__EWeatherStatusType_MidAutumnDaytime = 10,
	EWeatherStatusType__EWeatherStatusType_MidAutumnEve = 11,
	EWeatherStatusType__EWeatherStatusType_MidAutumnNight = 12,
	EWeatherStatusType__EWeatherStatusType_Aurora = 13,
	EWeatherStatusType__EWeatherStatusType_SpringFestivalNight = 14,
	EWeatherStatusType__EWeatherStatusType_DesertSunny = 15,
	EWeatherStatusType__EWeatherStatusType_DustStorm = 16,
	EWeatherStatusType__EWeatherStatusType_MAX = 17
};


// Enum ShadowTrackerExtra.EPlayerEnegyStage
enum class EPlayerEnegyStage : uint8_t
{
	PES_None                       = 0,
	PES_Stage1                     = 1,
	PES_Stage2                     = 2,
	PES_Stage3                     = 3,
	PES_Stage4                     = 4,
	PES_MAX                        = 5
};


// Enum ShadowTrackerExtra.EMarkStatus
enum class EMarkStatus : uint8_t
{
	EMarkStatus__EMAS_HIDE         = 0,
	EMarkStatus__EMAS_SHOW         = 1,
	EMarkStatus__EMAS_CUSTOMEVENT  = 2,
	EMarkStatus__EMAS_MAX          = 3
};


// Enum ShadowTrackerExtra.EAddMarkFlag
enum class EAddMarkFlag : uint8_t
{
	EAddMarkFlag__EAMF_None        = 0,
	EAddMarkFlag__EAMF_MiniMapOnly = 1,
	EAddMarkFlag__EAMF_EntireMapOnly = 2,
	EAddMarkFlag__EAMF_Both        = 3,
	EAddMarkFlag__EAMF_MAX         = 4
};


// Enum ShadowTrackerExtra.EMarkGetAllType
enum class EMarkGetAllType : uint8_t
{
	EMAGET_ALL                     = 0,
	EMAGET_REP                     = 1,
	EMAGET_LOCAL                   = 2,
	EMAGET_MAX                     = 3
};


// Enum ShadowTrackerExtra.EDriveCar
enum class EDriveCar : uint8_t
{
	EDriveCar__None                = 0,
	EDriveCar__Buggy               = 1,
	EDriveCar__EDriveCar_MAX       = 2
};


// Enum ShadowTrackerExtra.ExtraPlayerLiveState
enum class ExtraPlayerLiveState : uint8_t
{
	ExtraPlayerLiveState__InDefault = 0,
	ExtraPlayerLiveState__InPlane  = 1,
	ExtraPlayerLiveState__InParachute = 2,
	ExtraPlayerLiveState__InVehicle = 3,
	ExtraPlayerLiveState__InDying  = 4,
	ExtraPlayerLiveState__InDied   = 5,
	ExtraPlayerLiveState__Offline  = 6,
	ExtraPlayerLiveState__ExtraPlayerLiveState_MAX = 7
};


// Enum ShadowTrackerExtra.EAirAttackInfo
enum class EAirAttackInfo : uint8_t
{
	EAirAttackInfo__AttackWarningTips = 0,
	EAirAttackInfo__Attacking      = 1,
	EAirAttackInfo__AttackOver     = 2,
	EAirAttackInfo__NoAirAttack    = 3,
	EAirAttackInfo__EAirAttackInfo_MAX = 4
};


// Enum ShadowTrackerExtra.ECircleInfo
enum class ECircleInfo : uint8_t
{
	ECircleInfo__SafeZoneTips      = 0,
	ECircleInfo__BlueCirclePreWarning = 1,
	ECircleInfo__BlueCircleRun     = 2,
	ECircleInfo__NoCircleInfo      = 3,
	ECircleInfo__ECircleInfo_MAX   = 4
};


// Enum ShadowTrackerExtra.EWeatherChangeEvent
enum class EWeatherChangeEvent : uint8_t
{
	EWeatherChangeEvent__EWeatherChangeEvent_StartEnter = 0,
	EWeatherChangeEvent__EWeatherChangeEvent_Staturated = 1,
	EWeatherChangeEvent__EWeatherChangeEvent_StartQuit = 2,
	EWeatherChangeEvent__EWeatherChangeEvent_Quit = 3,
	EWeatherChangeEvent__EWeatherChangeEvent_MAX = 4
};


// Enum ShadowTrackerExtra.EWeatherDayState
enum class EWeatherDayState : uint8_t
{
	EWeatherDayState__Day          = 0,
	EWeatherDayState__Dusk         = 1,
	EWeatherDayState__Night        = 2,
	EWeatherDayState__EWeatherDayState_MAX = 3
};


// Enum ShadowTrackerExtra.ESubSystemType
enum class ESubSystemType : uint8_t
{
	ESubSystemType__ESS_None       = 0,
	ESubSystemType__ESS_DeferredExit = 1,
	ESubSystemType__ESS_RecallTeammate = 2,
	ESubSystemType__ESS_RescueHelicopter = 3,
	ESubSystemType__ESS_HeavyWeapon = 4,
	ESubSystemType__ESS_TDMHardPoint = 5,
	ESubSystemType__ESS_VisualField = 6,
	ESubSystemType__ESS_WorldActorFlag = 7,
	ESubSystemType__ESS_SuperCold  = 8,
	ESubSystemType__ESS_DynamicSpawn = 9,
	ESubSystemType__ESS_ARWeaponManager = 10,
	ESubSystemType__ESS_MAX        = 11
};


// Enum ShadowTrackerExtra.EGameModeSubType
enum class EGameModeSubType : uint8_t
{
	EGameModeSubType__ENoneGameMode = 0,
	EGameModeSubType__EjungleGameMode = 1,
	EGameModeSubType__EZombieStandard = 2,
	EGameModeSubType__EZombieSurvive = 3,
	EGameModeSubType__EEgyptGameMode = 4,
	EGameModeSubType__EFiremanGameMode = 5,
	EGameModeSubType__EAceMode     = 6,
	EGameModeSubType__ETPlan       = 7,
	EGameModeSubType__EEsportsGameMode = 8,
	EGameModeSubType__EIceWorldGameMode = 9,
	EGameModeSubType__EMetroGameMode = 10,
	EGameModeSubType__ERuneGameMode = 11,
	EGameModeSubType__EValentineGameMode = 12,
	EGameModeSubType__EMusicFestivalGameMode = 13,
	EGameModeSubType__EGodzilla    = 14,
	EGameModeSubType__EKingKong    = 15,
	EGameModeSubType__EMGodzilla   = 16,
	EGameModeSubType__ETraverse    = 17,
	EGameModeSubType__EPlanDGameMode = 18,
	EGameModeSubType__EPlanETGameMode = 19,
	EGameModeSubType__ESinkGameMode = 20,
	EGameModeSubType__EGameModeSubType_MAX = 21
};


// Enum ShadowTrackerExtra.EGameModeType
enum class EGameModeType : uint8_t
{
	EGameModeType__EUnknownGameMode = 0,
	EGameModeType__ETypicalGameMode = 1,
	EGameModeType__EEntertainmentGameMode = 2,
	EGameModeType__EGameModeGroup  = 3,
	EGameModeType__EBattleRoyalCorpsWarMode = 4,
	EGameModeType__EWarGameMode    = 5,
	EGameModeType__EWarGameMode_SuperPower = 6,
	EGameModeType__EWarGameMode_GrandTheft = 7,
	EGameModeType__EPVEGameMode    = 8,
	EGameModeType__EPVECollectionGameMode = 9,
	EGameModeType__EActivityGameMode = 10,
	EGameModeType__EDeathMatchGameMode = 11,
	EGameModeType__EPVEInfectionGameMode = 12,
	EGameModeType__EHeavyWeaponGameMode = 13,
	EGameModeType__EVehicleWar     = 14,
	EGameModeType__EVehicleWar_CAMP = 15,
	EGameModeType__EBattleRoyal_SuperCold = 16,
	EGameModeType__ESocialIsland   = 17,
	EGameModeType__ETraining       = 18,
	EGameModeType__EFourInOneGameMode = 19,
	EGameModeType__EBigEventGameMode = 20,
	EGameModeType__EXAndT          = 21,
	EGameModeType__EBountyHunter   = 22,
	EGameModeType__EGameModeType_MAX = 23
};


// Enum ShadowTrackerExtra.WeatherUICountDownType
enum class EWeatherUICountDownType : uint8_t
{
	WeatherUICountDownType__UINone = 0,
	WeatherUICountDownType__UISuperCold = 1,
	WeatherUICountDownType__UILiveMode = 2,
	WeatherUICountDownType__UIMidAutu = 3,
	WeatherUICountDownType__WeatherUICountDownType_MAX = 4
};


// Enum ShadowTrackerExtra.EMonsterTreasureBoxState
enum class EMonsterTreasureBoxState : uint8_t
{
	EMonsterTreasureBoxState__None = 0,
	EMonsterTreasureBoxState__Spawned = 1,
	EMonsterTreasureBoxState__Standby = 2,
	EMonsterTreasureBoxState__Started = 3,
	EMonsterTreasureBoxState__Broken = 4,
	EMonsterTreasureBoxState__CountdownFinished = 5,
	EMonsterTreasureBoxState__AnimationFinished = 6,
	EMonsterTreasureBoxState__Stopped = 7,
	EMonsterTreasureBoxState__EMonsterTreasureBoxState_MAX = 8
};


// Enum ShadowTrackerExtra.EPickUpBoxType
enum class EPickUpBoxType : uint8_t
{
	EPickUpBoxType__EPickUpBoxType_TombBox = 0,
	EPickUpBoxType__EPickUpBoxType_AirDropBox = 1,
	EPickUpBoxType__EPickUpBoxType_TreasureBox = 2,
	EPickUpBoxType__EPickUpBoxType_MonsterTombBox = 3,
	EPickUpBoxType__EPickUpBoxType_VehicleBox = 4,
	EPickUpBoxType__EPickUpBoxType_DeadRemainBox = 5,
	EPickUpBoxType__EPickUpBoxType_ResourceBox = 6,
	EPickUpBoxType__EPickUpBoxType_LootBox = 7,
	EPickUpBoxType__EPickUpBoxType_MAX = 8
};


// Enum ShadowTrackerExtra.ETaskConditionType
enum class ETaskConditionType : uint8_t
{
	ETCT_Operator_And              = 0,
	ETCT_Operator_Or               = 1,
	ETCT_GameMode                  = 2,
	ETCT_SpecifiedItemID           = 3,
	ETCT_SpecifiedArea             = 4,
	ETCT_SpecifiedPlace            = 5,
	ETCT_TouchDownLocType          = 6,
	ETCT_Duration                  = 7,
	ETCT_TakeDamage                = 8,
	ETCT_KillPlayer                = 9,
	ETCT_CollectItem               = 10,
	ETCT_TeamAction                = 11,
	ETCT_MAX                       = 12
};


// Enum ShadowTrackerExtra.ECharacterAnimOverrideType
enum class ECharacterAnimOverrideType : uint8_t
{
	ECAOT_Default                  = 0,
	ECAOT_FlySuit                  = 1,
	ECAOT_FlyDevice                = 2,
	ECAOT_MAX                      = 3
};


// Enum ShadowTrackerExtra.EWeaponOperationMode
enum class EWeaponOperationMode : uint8_t
{
	EWeaponOperationMode__None     = 0,
	EWeaponOperationMode__Shoot    = 1,
	EWeaponOperationMode__Skill    = 2,
	EWeaponOperationMode__Throw    = 3,
	EWeaponOperationMode__EWeaponOperationMode_MAX = 4
};


// Enum ShadowTrackerExtra.EMsgType
enum class EMsgType : uint8_t
{
	EMsgType__EMsg_GMEnterActive   = 0,
	EMsgType__EMsg_GMExitActive    = 1,
	EMsgType__EMsg_GMEnterReady    = 2,
	EMsgType__EMsg_GMExitReady     = 3,
	EMsgType__EMsg_GMEnterFight    = 4,
	EMsgType__EMsg_GMExitFight     = 5,
	EMsgType__EMsg_GMEnterFinish   = 6,
	EMsgType__EMsg_GMExit          = 7,
	EMsgType__EMsg_PCGotoFight     = 8,
	EMsgType__EMsg_PCGotoPlane     = 9,
	EMsgType__EMsg_PCGotoParachuteJump = 10,
	EMsgType__EMsg_PCGotoParachuteOpen = 11,
	EMsgType__EMsg_PCDie           = 12,
	EMsgType__EMsg_PCRespawn       = 13,
	EMsgType__EMsg_PCGotoExPlane   = 14,
	EMsgType__EMsg_PCGotoLaunch    = 15,
	EMsgType__EMsg_MAX             = 16
};


// Enum ShadowTrackerExtra.EChangeCharacterState
enum class EChangeCharacterState : uint8_t
{
	ECCS_None                      = 0,
	ECCS_RecvChange                = 1,
	ECCS_RecvPosses                = 2,
	ECCS_RecvUnposses              = 3,
	ECCS_MAX                       = 4
};


// Enum ShadowTrackerExtra.ETopMostUIPanelType
enum class ETopMostUIPanelType : uint8_t
{
	ETopUIPanelType_MainInputPanel = 0,
	ETopUIPanelType_BackpackPanel  = 1,
	ETopUIPanelType_MAX            = 2
};


// Enum ShadowTrackerExtra.EWarScoreChangeReason
enum class EWarScoreChangeReason : uint8_t
{
	EWarScoreChangeReason__WarScoreChangeReason_NONE = 0,
	EWarScoreChangeReason__WarScoreChangeReason_WHOLETEAMKILLED = 1,
	EWarScoreChangeReason__WarScoreChangeReason_SAVETEAMMATE = 2,
	EWarScoreChangeReason__WarScoreChangeReason_KNOCKDOWNENEMY = 3,
	EWarScoreChangeReason__WarScoreChangeReason_KILLENEMY = 4,
	EWarScoreChangeReason__WarScoreChangeReason_PICKUPSCOREITEM = 5,
	EWarScoreChangeReason__WarScoreChangeReason_GRABSCORE = 6,
	EWarScoreChangeReason__WarScoreChangeReason_MAX = 7
};


// Enum ShadowTrackerExtra.EReportLogType
enum class EReportLogType : uint8_t
{
	AntiDataClientEmpty            = 0,
	AntiDataClientFilter           = 1,
	AntiDataClientCRC              = 2,
	AntiDataSDkNull                = 3,
	AntiDataSDKZero                = 4,
	AntiDataSDKLong                = 5,
	AntiDataSDkEmpty               = 6,
	AntiDataDSEmpty                = 7,
	AntiDataClientOK               = 8,
	AntiDataPlatformInvaild        = 9,
	EReportLogType_MAX             = 10
};


// Enum ShadowTrackerExtra.ESTEPoseStateFailReason
enum class ESTEPoseStateFailReason : uint8_t
{
	ESTEPoseStateFailReason__None  = 0,
	ESTEPoseStateFailReason__SamePose = 1,
	ESTEPoseStateFailReason__ESTEPoseStateFailReason_MAX = 2
};


// Enum ShadowTrackerExtra.EPressType
enum class EPressType : uint8_t
{
	PressNone                      = 0,
	PressFireBtn                   = 1,
	PressMax                       = 2,
	EPressType_MAX                 = 3
};


// Enum ShadowTrackerExtra.EPhysicalSurfaceDescription
enum class EPhysicalSurfaceDescription : uint8_t
{
	EPhysicalSurfaceDescription__Default = 0,
	EPhysicalSurfaceDescription__Concrete = 1,
	EPhysicalSurfaceDescription__Dirt = 2,
	EPhysicalSurfaceDescription__Water = 3,
	EPhysicalSurfaceDescription__Metal = 4,
	EPhysicalSurfaceDescription__Wood = 5,
	EPhysicalSurfaceDescription__Grass = 6,
	EPhysicalSurfaceDescription__Glass = 7,
	EPhysicalSurfaceDescription__Flesh = 8,
	EPhysicalSurfaceDescription__Steel = 9,
	EPhysicalSurfaceDescription__Sandbag = 10,
	EPhysicalSurfaceDescription__Sand = 11,
	EPhysicalSurfaceDescription__Cloth = 12,
	EPhysicalSurfaceDescription__Plastic = 13,
	EPhysicalSurfaceDescription__Leather = 14,
	EPhysicalSurfaceDescription__Ceramics = 15,
	EPhysicalSurfaceDescription__Paper = 16,
	EPhysicalSurfaceDescription__Stone = 17,
	EPhysicalSurfaceDescription__Snow = 18,
	EPhysicalSurfaceDescription__PopCan = 19,
	EPhysicalSurfaceDescription__Pyrefly = 20,
	EPhysicalSurfaceDescription__Leaf = 21,
	EPhysicalSurfaceDescription__Car = 22,
	EPhysicalSurfaceDescription__Asphalt = 23,
	EPhysicalSurfaceDescription__ConcreteTDM = 24,
	EPhysicalSurfaceDescription__Ice = 25,
	EPhysicalSurfaceDescription__Food = 26,
	EPhysicalSurfaceDescription__EPhysicalSurfaceDescription_MAX = 27
};


// Enum ShadowTrackerExtra.ERenderQuality
enum class ERenderQuality : uint8_t
{
	ERenderQuality__Default        = 0,
	ERenderQuality__SMOOTH         = 1,
	ERenderQuality__BALANCE        = 2,
	ERenderQuality__HIGHDEFINITION = 3,
	ERenderQuality__HIGHDEFINITIONPLUS = 4,
	ERenderQuality__ULTRAHIGHDEFINITION = 5,
	ERenderQuality__VERYSMOOTH     = 6,
	ERenderQuality__ERenderQuality_MAX = 7
};


// Enum ShadowTrackerExtra.ETouchFireType
enum class ETouchFireType : uint8_t
{
	NotFire                        = 0,
	ButtonFire                     = 1,
	TouchForceFire                 = 2,
	DoubleClickFire                = 3,
	ETouchFireType_MAX             = 4
};


// Enum ShadowTrackerExtra.EnmSprintOptType
enum class EnmSprintOptType : uint8_t
{
	NoneOpt                        = 0,
	TimeToSprint                   = 1,
	DistToSprint                   = 2,
	EnmSprintOptType_MAX           = 3
};


// Enum ShadowTrackerExtra.EKillOrPutDownMessageType
enum class EKillOrPutDownMessageType : uint8_t
{
	EKillOrPutDownMessageType_YouPutDownPlayer = 0,
	EKillOrPutDownMessageType_YouKilledPlayer = 1,
	EKillOrPutDownMessageType_YouHaveBeenPutDown = 2,
	EKillOrPutDownMessageType_YouHaveBeenKilled = 3,
	EKillOrPutDownMessageType_YourTeammatePutDownPlayer = 4,
	EKillOrPutDownMessageType_YourTeammateKilledPlayer = 5,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDown = 6,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilled = 7,
	EKillOrPutDownMessageType_YouHaveBeenKilledByPoison = 8,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByPoison = 9,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByPoison = 10,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByPoison = 11,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByFallingDown = 12,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByFallingDown = 13,
	EKillOrPutDownMessageType_YouHaveBeenKilledByFallingDown = 14,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByFallingDown = 15,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByDrowing = 16,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByDrowing = 17,
	EKillOrPutDownMessageType_YouHaveBeenKilledByDrowing = 18,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByDrowing = 19,
	EKillOrPutDownMessageType_YouHaveBeenKilledFinally = 20,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledFinally = 21,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByAirAttack = 22,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByAirAttack = 23,
	EKillOrPutDownMessageType_YouHaveBeenKilledByAirAttack = 24,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByAirAttack = 25,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByPoisonWater = 26,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByPoisonWater = 27,
	EKillOrPutDownMessageType_YouHaveBeenKilledByPoisonWater = 28,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByPoisonWater = 29,
	EKillOrPutDownMessageType_YouHaveBeenKilledByLowTemperature = 30,
	EKillOrPutDownMessageType_YourTeammateHaveBeenKilledByLowTemperature = 31,
	EKillOrPutDownMessageType_YouHaveBeenPutDownByLowTemperature = 32,
	EKillOrPutDownMessageType_YourTeammateHaveBeenPutDownByLowTemperature = 33,
	EKillOrPutDownMessageType_MAX  = 34
};


// Enum ShadowTrackerExtra.EAutoAimType
enum class EAutoAimType : uint8_t
{
	EAutoAimType__FullTime         = 0,
	EAutoAimType__OnlyFire         = 1,
	EAutoAimType__OnlyTouch        = 2,
	EAutoAimType__OnlyNotTouch     = 3,
	EAutoAimType__TouchOrFire      = 4,
	EAutoAimType__ScopeOrFire      = 5,
	EAutoAimType__EAutoAimType_MAX = 6
};


// Enum ShadowTrackerExtra.ENewbieGuidePlayerCategory
enum class ENewbieGuidePlayerCategory : uint8_t
{
	Low                            = 0,
	Middle                         = 1,
	High                           = 2,
	ENewbieGuidePlayerCategory_MAX = 3
};


// Enum ShadowTrackerExtra.ENewbieGuideType
enum class ENewbieGuideType : uint8_t
{
	Op                             = 0,
	Rule                           = 1,
	ENewbieGuideType_MAX           = 2
};


// Enum ShadowTrackerExtra.EHardPointOccupyState
enum class EHardPointOccupyState : uint8_t
{
	EHardPointOccupyState__Neutral = 0,
	EHardPointOccupyState__Occupied = 1,
	EHardPointOccupyState__Contending = 2,
	EHardPointOccupyState__EHardPointOccupyState_MAX = 3
};


// Enum ShadowTrackerExtra.EActorStatus
enum class EActorStatus : uint8_t
{
	EActorStatus__None             = 0,
	EActorStatus__Born             = 1,
	EActorStatus__Broken           = 2,
	EActorStatus__Dead             = 3,
	EActorStatus__Backup4          = 4,
	EActorStatus__Backup5          = 5,
	EActorStatus__Backup6          = 6,
	EActorStatus__Backup7          = 7,
	EActorStatus__Backup8          = 8,
	EActorStatus__Backup9          = 9,
	EActorStatus__Max              = 10
};


// Enum ShadowTrackerExtra.EDamageableMeshState
enum class EDamageableMeshState : uint8_t
{
	EDamageableMeshState__EDMS_Normal = 0,
	EDamageableMeshState__EDMS_HealthEvent = 1,
	EDamageableMeshState__EDMS_NearDeath = 2,
	EDamageableMeshState__EDMS_Die = 3,
	EDamageableMeshState__EDMS_DieByInitiative = 4,
	EDamageableMeshState__EDMS_MAX = 5
};


// Enum ShadowTrackerExtra.ERandomRocketExplosionType
enum class ERandomRocketExplosionType : uint8_t
{
	ERRET_COLLIDE                  = 0,
	ERRET_BOMBARMENT               = 1,
	ERRET_DESTRUCTED               = 2,
	ERRET_MAX                      = 3
};


// Enum ShadowTrackerExtra.EMaxFlyHeightType
enum class EMaxFlyHeightType : uint8_t
{
	EMaxFlyHeightType__RelativeToInitialHeight = 0,
	EMaxFlyHeightType__WorldAbsoluteHeight = 1,
	EMaxFlyHeightType__EMaxFlyHeightType_MAX = 2
};


// Enum ShadowTrackerExtra.EGamePawnEvent
enum class EGamePawnEvent : uint8_t
{
	EGamePawnEvent__None           = 0,
	EGamePawnEvent__Birth          = 1,
	EGamePawnEvent__ViewPlane      = 2,
	EGamePawnEvent__Plane          = 3,
	EGamePawnEvent__Jump           = 4,
	EGamePawnEvent__Parachute      = 5,
	EGamePawnEvent__Land           = 6,
	EGamePawnEvent__Die            = 7,
	EGamePawnEvent__ReBirth        = 8,
	EGamePawnEvent__HeightCheck_High = 9,
	EGamePawnEvent__HeightCheck_Mid = 10,
	EGamePawnEvent__HeightCheck_Low = 11,
	EGamePawnEvent__Fighting       = 12,
	EGamePawnEvent__EGamePawnEvent_MAX = 13
};


// Enum ShadowTrackerExtra.ObjectMovingType
enum class EObjectMovingType : uint8_t
{
	OMT_Uniform                    = 0,
	OMT_Acceleration               = 1,
	OMT_Deceleration               = 2,
	OMT_MAX                        = 3
};


// Enum ShadowTrackerExtra.EAllowThrowMode
enum class EAllowThrowMode : uint8_t
{
	EAllowThrowMode__Any           = 0,
	EAllowThrowMode__High          = 1,
	EAllowThrowMode__Low           = 2,
	EAllowThrowMode__EAllowThrowMode_MAX = 3
};


// Enum ShadowTrackerExtra.EThrowState
enum class EThrowState : uint8_t
{
	EThrowState__Idle              = 0,
	EThrowState__Prepare           = 1,
	EThrowState__Aim               = 2,
	EThrowState__Release           = 3,
	EThrowState__Drop              = 4,
	EThrowState__EThrowState_MAX   = 5
};


// Enum ShadowTrackerExtra.ERenderDynamicStyle
enum class ERenderDynamicStyle : uint8_t
{
	ERenderDynamicStyle__Default   = 0,
	ERenderDynamicStyle__GuidedMissile = 1,
	ERenderDynamicStyle__SceneToGrayOnDeath = 2,
	ERenderDynamicStyle__ThermalImagingStyle = 3,
	ERenderDynamicStyle__ERenderDynamicStyle_MAX = 4
};


// Enum ShadowTrackerExtra.ERenderStyle
enum class ERenderStyle : uint8_t
{
	ERenderStyle__Default          = 0,
	ERenderStyle__CLASSIC          = 1,
	ERenderStyle__COLOURFUL        = 2,
	ERenderStyle__REALISTIC        = 3,
	ERenderStyle__SOFT             = 4,
	ERenderStyle__NightVision      = 5,
	ERenderStyle__MOVIE            = 6,
	ERenderStyle__DynamicStyle     = 7,
	ERenderStyle__ERenderStyle_MAX = 8
};


// Enum ShadowTrackerExtra.ESoundEffect
enum class ESoundEffect : uint8_t
{
	ESoundEffect__LOW              = 0,
	ESoundEffect__HIGH             = 1,
	ESoundEffect__SUPERHIGH        = 2,
	ESoundEffect__ESoundEffect_MAX = 3
};


// Enum ShadowTrackerExtra.EGamePlayMode
enum class EGamePlayMode : uint8_t
{
	EGamePlayMode__None            = 0,
	EGamePlayMode__TeamPVE         = 1,
	EGamePlayMode__EGamePlayMode_MAX = 2
};


// Enum ShadowTrackerExtra.ERoleMainSkillID
enum class ERoleMainSkillID : uint8_t
{
	INVISIBLE                      = 0,
	ERoleMainSkillID_MAX           = 1
};


// Enum ShadowTrackerExtra.EInfectionRoundStateType
enum class EInfectionRoundStateType : uint8_t
{
	EInfectionRoundStateType__RoundBefore = 0,
	EInfectionRoundStateType__RoundReady = 1,
	EInfectionRoundStateType__RoundFight = 2,
	EInfectionRoundStateType__RoundEnd = 3,
	EInfectionRoundStateType__EInfectionRoundStateType_MAX = 4
};


// Enum ShadowTrackerExtra.EInfectionBGMStateType
enum class EInfectionBGMStateType : uint8_t
{
	EInfectionBGMStateType__RoundBefore = 0,
	EInfectionBGMStateType__RoundReady = 1,
	EInfectionBGMStateType__RoundFight_Zombie = 2,
	EInfectionBGMStateType__RoundFight_Revenger = 3,
	EInfectionBGMStateType__RoundEnd = 4,
	EInfectionBGMStateType__EInfectionBGMStateType_MAX = 5
};


// Enum ShadowTrackerExtra.EIslandStateType
enum class EIslandStateType : uint8_t
{
	EIslandStateType__IST_Init     = 0,
	EIslandStateType__IST_Opening  = 1,
	EIslandStateType__IST_Close    = 2,
	EIslandStateType__IST_MAX      = 3
};


// Enum ShadowTrackerExtra.EVehicleWarGemMatchState
enum class EVehicleWarGemMatchState : uint8_t
{
	EVehicleWarGemMatchState__EVM_Ready = 0,
	EVehicleWarGemMatchState__EVM_Normal = 1,
	EVehicleWarGemMatchState__EVM_MatchPoint = 2,
	EVehicleWarGemMatchState__EVM_MatchPointFight = 3,
	EVehicleWarGemMatchState__EVM_MatchEnd = 4,
	EVehicleWarGemMatchState__EVM_MAX = 5
};


// Enum ShadowTrackerExtra.EPetState
enum class EPetState : uint8_t
{
	PetStateNone                   = 0,
	PetIdle                        = 1,
	PetDisappear                   = 2,
	PetParachute                   = 3,
	PetFollow                      = 4,
	PetFlyAround                   = 5,
	PetSwimming                    = 6,
	EPetState_MAX                  = 7
};


// Enum ShadowTrackerExtra.EPlayerAutoNavMode
enum class EPlayerAutoNavMode : uint8_t
{
	EPlayerAutoNavMode__StaticLocation = 0,
	EPlayerAutoNavMode__Character  = 1,
	EPlayerAutoNavMode__EPlayerAutoNavMode_MAX = 2
};


// Enum ShadowTrackerExtra.EPlayerAutoNavFindResult
enum class EPlayerAutoNavFindResult : uint8_t
{
	EPlayerAutoNavFindResult__HasPath = 0,
	EPlayerAutoNavFindResult__NoPath = 1,
	EPlayerAutoNavFindResult__NoCharacter = 2,
	EPlayerAutoNavFindResult__EPlayerAutoNavFindResult_MAX = 3
};


// Enum ShadowTrackerExtra.EPlayerAutoNavResult
enum class EPlayerAutoNavResult : uint8_t
{
	EPlayerAutoNavResult__Succeed  = 0,
	EPlayerAutoNavResult__Failed   = 1,
	EPlayerAutoNavResult__UserCancel = 2,
	EPlayerAutoNavResult__NoCharacter = 3,
	EPlayerAutoNavResult__EPlayerAutoNavResult_MAX = 4
};


// Enum ShadowTrackerExtra.ESIslandActiveType
enum class ESIslandActiveType : uint8_t
{
	ESIslandActiveType__SAT_Active = 0,
	ESIslandActiveType__SAT_PandingKickOut = 1,
	ESIslandActiveType__SAT_kickedOut = 2,
	ESIslandActiveType__SAT_MAX    = 3
};


// Enum ShadowTrackerExtra.EFieldOfViewNotificationStatus
enum class EFieldOfViewNotificationStatus : uint8_t
{
	EFieldOfViewNotificationStatus__None = 0,
	EFieldOfViewNotificationStatus__Rendered = 1,
	EFieldOfViewNotificationStatus__Traced = 2,
	EFieldOfViewNotificationStatus__EnumMax = 3,
	EFieldOfViewNotificationStatus__EFieldOfViewNotificationStatus_MAX = 4
};


// Enum ShadowTrackerExtra.EDeathMatchPersonalNotifyReason
enum class EDeathMatchPersonalNotifyReason : uint8_t
{
	EDeathMatchPersonalNotifyReason__Kill = 0,
	EDeathMatchPersonalNotifyReason__HeadShoot = 1,
	EDeathMatchPersonalNotifyReason__EDeathMatchPersonalNotifyReason_MAX = 2
};


// Enum ShadowTrackerExtra.EDeathMatchDamageResult
enum class EDeathMatchDamageResult : uint8_t
{
	EDeathMatchDamageResult__None  = 0,
	EDeathMatchDamageResult__Assist = 1,
	EDeathMatchDamageResult__Kill  = 2,
	EDeathMatchDamageResult__EDeathMatchDamageResult_MAX = 3
};


// Enum ShadowTrackerExtra.EDeathMatchGlobalNotifyReason
enum class EDeathMatchGlobalNotifyReason : uint8_t
{
	EDeathMatchGlobalNotifyReason__FirstKill = 0,
	EDeathMatchGlobalNotifyReason__SuperGod = 1,
	EDeathMatchGlobalNotifyReason__LastStraw = 2,
	EDeathMatchGlobalNotifyReason__Slaughter = 3,
	EDeathMatchGlobalNotifyReason__GameComingEnd_KillNum = 4,
	EDeathMatchGlobalNotifyReason__GameComingEnd_RemainTime = 5,
	EDeathMatchGlobalNotifyReason__HardPointHalfTime = 6,
	EDeathMatchGlobalNotifyReason__HardPointComingEnd_Score = 7,
	EDeathMatchGlobalNotifyReason__HardPointComingEnd_RemainTime = 8,
	EDeathMatchGlobalNotifyReason__ArmsRace_Pan = 9,
	EDeathMatchGlobalNotifyReason__EDeathMatchGlobalNotifyReason_MAX = 10
};


// Enum ShadowTrackerExtra.EDeathMatchGameEndType
enum class EDeathMatchGameEndType : uint8_t
{
	EDeathMatchGameEndType__None   = 0,
	EDeathMatchGameEndType__ScoreWin = 1,
	EDeathMatchGameEndType__Timeout = 2,
	EDeathMatchGameEndType__EnemyEscape = 3,
	EDeathMatchGameEndType__EDeathMatchGameEndType_MAX = 4
};


// Enum ShadowTrackerExtra.EDeathMatchGlobalAudioType
enum class EDeathMatchGlobalAudioType : uint8_t
{
	EDeathMatchGlobalAudioType__FirstKill = 0,
	EDeathMatchGlobalAudioType__SuperGod = 1,
	EDeathMatchGlobalAudioType__SuperGodEnd = 2,
	EDeathMatchGlobalAudioType__Rampage = 3,
	EDeathMatchGlobalAudioType__GameComingHalfScore = 4,
	EDeathMatchGlobalAudioType__GameComingEnd_KillNum = 5,
	EDeathMatchGlobalAudioType__GameComingHalfTime = 6,
	EDeathMatchGlobalAudioType__GameComingEnd_RemainTime = 7,
	EDeathMatchGlobalAudioType__HardPointHalfTime = 8,
	EDeathMatchGlobalAudioType__HardPointComingEnd_Score = 9,
	EDeathMatchGlobalAudioType__HardPointComingEnd_RemainTime = 10,
	EDeathMatchGlobalAudioType__EDeathMatchGlobalAudioType_MAX = 11
};


// Enum ShadowTrackerExtra.EAutoLockSignType
enum class EAutoLockSignType : uint8_t
{
	EAutoLockSignType__ALS_Normal  = 0,
	EAutoLockSignType__ALS_Locking = 1,
	EAutoLockSignType__ALS_Locked  = 2,
	EAutoLockSignType__ALS_MAX     = 3
};


// Enum ShadowTrackerExtra.EDamageType
enum class EDamageType : uint8_t
{
	EDamageType__InvalidDamageType = 0,
	EDamageType__ShootDamage       = 1,
	EDamageType__STPointDamage     = 2,
	EDamageType__CustomRadiusDamage = 3,
	EDamageType__PoisonDamage      = 4,
	EDamageType__DrowningDamage    = 5,
	EDamageType__FallingDamage     = 6,
	EDamageType__MeleeDamage       = 7,
	EDamageType__GrenadeRadiusDamage = 8,
	EDamageType__BurningDamage     = 9,
	EDamageType__AirAttackDamage   = 10,
	EDamageType__VehicleDamage     = 11,
	EDamageType__VehicleExplodeRadiusDamage = 12,
	EDamageType__LastBreathWithoutRescue = 13,
	EDamageType__WinnerFakeDeath   = 14,
	EDamageType__SkillDamage       = 15,
	EDamageType__PoisonFogDamage   = 16,
	EDamageType__GasolineCanExplosion = 17,
	EDamageType__ZombieDamage      = 18,
	EDamageType__LowTemperatureDamage = 19,
	EDamageType__TopFiveGaveUpDamage = 20,
	EDamageType__Resurrection      = 21,
	EDamageType__TyrantMonsterStonedDamage = 22,
	EDamageType__RPGExplosionDamage = 23,
	EDamageType__CartridgeExplosionDamage = 24,
	EDamageType__DotDamage         = 25,
	EDamageType__RadialDamage      = 26,
	EDamageType__CustomRadialDamage = 27,
	EDamageType__EDamageType_MAX   = 28
};


// Enum ShadowTrackerExtra.ECatapultMachineStateType
enum class ECatapultMachineStateType : uint8_t
{
	ECatapultMachineStateType__CMState_Initial = 0,
	ECatapultMachineStateType__CMState_ChargeReady = 1,
	ECatapultMachineStateType__CMState_Charge = 2,
	ECatapultMachineStateType__CMState_Launch = 3,
	ECatapultMachineStateType__CMState_Cooldown = 4,
	ECatapultMachineStateType__CMState_Supplement = 5,
	ECatapultMachineStateType__CMState_MAX = 6
};


// Enum ShadowTrackerExtra.EOutlineType
enum class EOutlineType : uint8_t
{
	EOutlineType__NONE             = 0,
	EOutlineType__Self             = 1,
	EOutlineType__SameTeam         = 2,
	EOutlineType__SameCamp         = 3,
	EOutlineType__Enemy            = 4,
	EOutlineType__EOutlineType_MAX = 5
};


// Enum ShadowTrackerExtra.ESTExtraUAVVehicleOperateState
enum class ESTExtraUAVVehicleOperateState : uint8_t
{
	ESTExtraUAVVehicleOperateState__Operate_Normal = 0,
	ESTExtraUAVVehicleOperateState__Operate_WithUp = 1,
	ESTExtraUAVVehicleOperateState__Operate_WithDown = 2,
	ESTExtraUAVVehicleOperateState__Operate_Clear = 3,
	ESTExtraUAVVehicleOperateState__Operate_MAX = 4
};


// Enum ShadowTrackerExtra.ESTAINoiseType
enum class ESTAINoiseType : uint8_t
{
	ESTAINoiseType__PlayerShootSound = 0,
	ESTAINoiseType__VehicleRunSound = 1,
	ESTAINoiseType__VehicleHornSound = 2,
	ESTAINoiseType__ESTAINoiseType_MAX = 3
};


// Enum ShadowTrackerExtra.ESTExtraVehicleSyncState
enum class ESTExtraVehicleSyncState : uint8_t
{
	ESTExtraVehicleSyncState__VSS_None = 0,
	ESTExtraVehicleSyncState__VSS_Client = 1,
	ESTExtraVehicleSyncState__VSS_ServerAuthorize = 2,
	ESTExtraVehicleSyncState__VSS_MAX = 3
};


// Enum ShadowTrackerExtra.ECameraDataType
enum class ECameraDataType : uint8_t
{
	ECameraDataType_Stand          = 0,
	ECameraDataType_Crouch         = 1,
	ECameraDataType_Prone          = 2,
	ECameraDataType_Indoor         = 3,
	ECameraDataType_LeanLeft       = 4,
	ECameraDataType_LeanRight      = 5,
	ECameraDataType_Vehicle        = 6,
	ECameraDataType_NearDeath      = 7,
	ECameraDataType_PeekLeft       = 8,
	ECameraDataType_PeekRight      = 9,
	ECameraDataType_IndoorLowerCameraStand = 10,
	ECameraDataType_IndoorLowerCameraCrouch = 11,
	ECameraDataType_IndoorLowerCameraProne = 12,
	ECameraDataType_Vault          = 13,
	ECameraDataType_Shoveling      = 14,
	ECameraDataType_Helicopter     = 15,
	ECameraDataType_FireBalloon    = 16,
	ECameraDataType_ShoulderLeft   = 17,
	ECameraDataType_ShoulderRight  = 18,
	ECameraDataType_Insect         = 19,
	ECameraDataType_Max            = 20
};


// Enum ShadowTrackerExtra.ESTExtraVehicleShapeType
enum class ESTExtraVehicleShapeType : uint8_t
{
	ESTExtraVehicleShapeType__VST_Unknown = 0,
	ESTExtraVehicleShapeType__VST_Motorbike = 1,
	ESTExtraVehicleShapeType__VST_Motorbike_SideCart = 2,
	ESTExtraVehicleShapeType__VST_Dacia = 3,
	ESTExtraVehicleShapeType__VST_MiniBus = 4,
	ESTExtraVehicleShapeType__VST_PickUp = 5,
	ESTExtraVehicleShapeType__VST_PickUp01 = 6,
	ESTExtraVehicleShapeType__VST_Buggy = 7,
	ESTExtraVehicleShapeType__VST_UAZ = 8,
	ESTExtraVehicleShapeType__VST_UAZ01 = 9,
	ESTExtraVehicleShapeType__VST_UAZ02 = 10,
	ESTExtraVehicleShapeType__VST_PG117 = 11,
	ESTExtraVehicleShapeType__VST_Aquarail = 12,
	ESTExtraVehicleShapeType__VST_UAZ03 = 13,
	ESTExtraVehicleShapeType__VST_Mirado = 14,
	ESTExtraVehicleShapeType__VST_Mirado01 = 15,
	ESTExtraVehicleShapeType__VST_Rony = 16,
	ESTExtraVehicleShapeType__VST_Scooter = 17,
	ESTExtraVehicleShapeType__VST_SnowMobile = 18,
	ESTExtraVehicleShapeType__VST_TukTukTuk = 19,
	ESTExtraVehicleShapeType__VST_SnowBike = 20,
	ESTExtraVehicleShapeType__VST_Surfboard = 21,
	ESTExtraVehicleShapeType__VST_Snowboard = 22,
	ESTExtraVehicleShapeType__VST_UH60 = 23,
	ESTExtraVehicleShapeType__VST_Amphibious = 24,
	ESTExtraVehicleShapeType__VST_LadaNiva = 25,
	ESTExtraVehicleShapeType__VST_UAV = 26,
	ESTExtraVehicleShapeType__VST_LootTruck = 27,
	ESTExtraVehicleShapeType__VST_ATGMotorCycle = 28,
	ESTExtraVehicleShapeType__VST_ModelY = 29,
	ESTExtraVehicleShapeType__VST_MegaDrop = 30,
	ESTExtraVehicleShapeType__VST_Lamborghini = 31,
	ESTExtraVehicleShapeType__VST_Lamborghini01 = 32,
	ESTExtraVehicleShapeType__VST_GoldMirado = 33,
	ESTExtraVehicleShapeType__VST_BigFoot = 34,
	ESTExtraVehicleShapeType__VST_HeavyDacia = 35,
	ESTExtraVehicleShapeType__VST_HeavyPickup = 36,
	ESTExtraVehicleShapeType__VST_HeavyBuggy = 37,
	ESTExtraVehicleShapeType__VST_HeavyUAZ = 38,
	ESTExtraVehicleShapeType__VST_HeavyUH60 = 39,
	ESTExtraVehicleShapeType__VST_TrackVehicle = 40,
	ESTExtraVehicleShapeType__VST_Motorglider = 41,
	ESTExtraVehicleShapeType__VST_CoupeRB = 42,
	ESTExtraVehicleShapeType__VST_CatapultMachine = 43,
	ESTExtraVehicleShapeType__VST_T72 = 44,
	ESTExtraVehicleShapeType__VST_PreparedVeh1 = 45,
	ESTExtraVehicleShapeType__VST_PreparedVeh2 = 46,
	ESTExtraVehicleShapeType__VST_MAX = 47
};


// Enum ShadowTrackerExtra.EVehicleWarBeLockedState
enum class EVehicleWarBeLockedState : uint8_t
{
	BLS_NotLock                    = 0,
	BLS_Locking                    = 1,
	BLS_Locked                     = 2,
	BLS_MAX                        = 3
};


// Enum ShadowTrackerExtra.EProjectilePassThroughType
enum class EProjectilePassThroughType : uint8_t
{
	EProjectilePassThroughType__Ignore = 0,
	EProjectilePassThroughType__PassThrough = 1,
	EProjectilePassThroughType__Block = 2,
	EProjectilePassThroughType__EProjectilePassThroughType_MAX = 3
};


// Enum ShadowTrackerExtra.EActorHiddenMask
enum class EActorHiddenMask : uint8_t
{
	EActorHiddenMask__ActorHiddenMask1 = 0,
	EActorHiddenMask__ActorHiddenMask2 = 1,
	EActorHiddenMask__ActorHiddenMask3 = 2,
	EActorHiddenMask__ActorHiddenMask4 = 3,
	EActorHiddenMask__ActorHiddenMask5 = 4,
	EActorHiddenMask__ActorHiddenMask6 = 5,
	EActorHiddenMask__ActorHiddenMask7 = 6,
	EActorHiddenMask__ActorHiddenMask8 = 7,
	EActorHiddenMask__EActorHiddenMask_MAX = 8
};


// Enum ShadowTrackerExtra.EEnemyType
enum class EEnemyType : uint8_t
{
	ERealPlayer                    = 0,
	EZombie                        = 1,
	EBuildings                     = 2,
	ETreasureBox                   = 3,
	EProjectile                    = 4,
	EEnemyType_MAX                 = 5
};


// Enum ShadowTrackerExtra.EFlyTargetLocHeightSetType
enum class EFlyTargetLocHeightSetType : uint8_t
{
	EFlyTargetLocHeightSetType__FlyHeightSet_RelativeGround = 0,
	EFlyTargetLocHeightSetType__FlyHeightSet_RelativeCenter = 1,
	EFlyTargetLocHeightSetType__FlyHeightSet_MAX = 2
};


// Enum ShadowTrackerExtra.EAI_BlockType
enum class EAI_BlockType : uint8_t
{
	EAI_BlockType__NoneBlock       = 0,
	EAI_BlockType__HaveNoNavMesh   = 1,
	EAI_BlockType__HaveNavMesh     = 2,
	EAI_BlockType__EAI_MAX         = 3
};


// Enum ShadowTrackerExtra.EAnimalMovePose
enum class EAnimalMovePose : uint8_t
{
	EAnimalMovePose__Walk          = 0,
	EAnimalMovePose__Trot          = 1,
	EAnimalMovePose__Run           = 2,
	EAnimalMovePose__KeepCurrentPose = 3,
	EAnimalMovePose__EAnimalMovePose_MAX = 4
};


// Enum ShadowTrackerExtra.EAIMoveType
enum class EAIMoveType : uint8_t
{
	EAIMoveType__StraightMove      = 0,
	EAIMoveType__CurveMove         = 1,
	EAIMoveType__EAIMoveType_MAX   = 2
};


// Enum ShadowTrackerExtra.EAIWeaponShootType
enum class EAIWeaponShootType : uint8_t
{
	EAIWeaponShootType__SingleShot = 0,
	EAIWeaponShootType__Auto       = 1,
	EAIWeaponShootType__EAIWeaponShootType_MAX = 2
};


// Enum ShadowTrackerExtra.EAINewFocusPriority
enum class EAINewFocusPriority : uint8_t
{
	EAINewFocusPriority__Default   = 0,
	EAINewFocusPriority__Move      = 1,
	EAINewFocusPriority__Gameplay  = 2,
	EAINewFocusPriority__EAINewFocusPriority_MAX = 3
};


// Enum ShadowTrackerExtra.EAIMovePose
enum class EAIMovePose : uint8_t
{
	EAIMovePose__Walk              = 0,
	EAIMovePose__Run               = 1,
	EAIMovePose__CrouchSprint      = 2,
	EAIMovePose__KeepCurrentPose   = 3,
	EAIMovePose__EAIMovePose_MAX   = 4
};


// Enum ShadowTrackerExtra.EAIPoseState
enum class EAIPoseState : uint8_t
{
	EAIPoseState__Stand            = 0,
	EAIPoseState__Crouch           = 1,
	EAIPoseState__Prone            = 2,
	EAIPoseState__Jump             = 3,
	EAIPoseState__EAIPoseState_MAX = 4
};


// Enum ShadowTrackerExtra.EAITriggerAttrType
enum class EAITriggerAttrType : uint8_t
{
	EAITriggerAttrType__None       = 0,
	EAITriggerAttrType__Health     = 1,
	EAITriggerAttrType__Energy     = 2,
	EAITriggerAttrType__EAITriggerAttrType_MAX = 3
};


// Enum ShadowTrackerExtra.EAIAttrCompareType
enum class EAIAttrCompareType : uint8_t
{
	EAIAttrCompareType__None       = 0,
	EAIAttrCompareType__Great      = 1,
	EAIAttrCompareType__Less       = 2,
	EAIAttrCompareType__EAIAttrCompareType_MAX = 3
};


// Enum ShadowTrackerExtra.EAIWayPointEventType
enum class EAIWayPointEventType : uint8_t
{
	EAIWayPointEventType__ExecuteInLua = 0,
	EAIWayPointEventType__ExecuteInBTTask = 1,
	EAIWayPointEventType__EAIWayPointEventType_MAX = 2
};


// Enum ShadowTrackerExtra.EAIOrderType
enum class EAIOrderType : uint8_t
{
	Invalid                        = 0,
	MoveTo                         = 1,
	MoveAttack                     = 2,
	AttackMove                     = 3,
	MoveToTarget                   = 4,
	AttackTarget                   = 5,
	GuardTarget                    = 6,
	GuardArea                      = 7,
	CastSkillNoneTarget            = 8,
	CastSkillOnTarget              = 9,
	CastSkillOnLocation            = 10,
	IdleShow                       = 11,
	RotateTo                       = 12,
	Stop                           = 13,
	EAIOrderType_MAX               = 14
};


// Enum ShadowTrackerExtra.EAirAttackGenerateType
enum class EAirAttackGenerateType : uint8_t
{
	EAirAttackGenerateType__None   = 0,
	EAirAttackGenerateType__Ringtaw = 1,
	EAirAttackGenerateType__Outsider = 2,
	EAirAttackGenerateType__RandomExcludeNone = 3,
	EAirAttackGenerateType__EAirAttackGenerateType_MAX = 4
};


// Enum ShadowTrackerExtra.EExecuteAirDropOrderResult
enum class EExecuteAirDropOrderResult : uint8_t
{
	MakeAirDropOrderDone           = 0,
	UndefinedADFReason             = 1,
	RandomDropFailure              = 2,
	NothingToDrop                  = 3,
	GameNotStart                   = 4,
	GameEnded                      = 5,
	GameStateInvalid               = 6,
	DroppingLocationOutSideLandscape = 7,
	LandscapeExtentInvalid         = 8,
	FlyingDirectionInValid         = 9,
	AirPlaneClassInvalid           = 10,
	NoLandscapeToDrop              = 11,
	UseCustomStrategy              = 12,
	EExecuteAirDropOrderResult_MAX = 13
};


// Enum ShadowTrackerExtra.EAIWayPointEventResult
enum class EAIWayPointEventResult : uint8_t
{
	EAIWayPointEventResult__Succeeded = 0,
	EAIWayPointEventResult__Failed = 1,
	EAIWayPointEventResult__Aborted = 2,
	EAIWayPointEventResult__InProgress = 3,
	EAIWayPointEventResult__None   = 4,
	EAIWayPointEventResult__EAIWayPointEventResult_MAX = 5
};


// Enum ShadowTrackerExtra.EHearSoundCharacterType
enum class EHearSoundCharacterType : uint8_t
{
	EHearSoundCharacterType__CharacterType_Zombie = 0,
	EHearSoundCharacterType__CharacterType_Animal = 1,
	EHearSoundCharacterType__CharacterType_AIPlayer = 2,
	EHearSoundCharacterType__CharacterType_MAX = 3
};


// Enum ShadowTrackerExtra.ESoundType
enum class ESoundType : uint8_t
{
	ESoundType__SoundType_FootStep_Default = 0,
	ESoundType__SoundType_FootStep_Walk = 1,
	ESoundType__SoundType_FootStep_Run = 2,
	ESoundType__SoundType_FootStep_Crouch = 3,
	ESoundType__SoundType_FootStep_Prone = 4,
	ESoundType__SoundType_Weapon_L_WithSilencer = 5,
	ESoundType__SoundType_Weapon_L_WithoutSilencer = 6,
	ESoundType__SoundType_Weapon_M_WithSilencer = 7,
	ESoundType__SoundType_Weapon_M_WithoutSilencer = 8,
	ESoundType__SoundType_Weapon_S_WithSilencer = 9,
	ESoundType__SoundType_Weapon_S_WithoutSilencer = 10,
	ESoundType__SoundType_Weapon_BulletImpact = 11,
	ESoundType__SoundType_Glass    = 12,
	ESoundType__SoundType_Grenade  = 13,
	ESoundType__SoundType_FlashBomb = 14,
	ESoundType__SoundType_SmokeBomb = 15,
	ESoundType__SoundType_BurningBottle = 16,
	ESoundType__SoundType_Vehicle  = 17,
	ESoundType__SoundType_OpenTreasureBox = 18,
	ESoundType__SoundType_MAX      = 19
};


// Enum ShadowTrackerExtra.AnimalAnimListType
enum class EAnimalAnimListType : uint8_t
{
	AnimalAnimListType__Idle       = 0,
	AnimalAnimListType__Idle_Arder = 1,
	AnimalAnimListType__Walk       = 2,
	AnimalAnimListType__Trot       = 3,
	AnimalAnimListType__Run        = 4,
	AnimalAnimListType__Watch      = 5,
	AnimalAnimListType__Dead       = 6,
	AnimalAnimListType__BeHit      = 7,
	AnimalAnimListType__Fear       = 8,
	AnimalAnimListType__Cute       = 9,
	AnimalAnimListType__Max        = 10
};


// Enum ShadowTrackerExtra.EAnimalDeliverStrategy
enum class EAnimalDeliverStrategy : uint8_t
{
	EAnimalDeliverStrategy_Team    = 0,
	EAnimalDeliverStrategy_Individual = 1,
	EAnimalDeliverStrategy_MAX     = 2
};


// Enum ShadowTrackerExtra.ESelectStrategy
enum class ESelectStrategy : uint8_t
{
	ESelectStrategy__ESelectStrategy_Forward = 0,
	ESelectStrategy__ESelectStrategy_Reverse = 1,
	ESelectStrategy__ESelectStrategy_MAX = 2
};


// Enum ShadowTrackerExtra.ESortStrategy
enum class ESortStrategy : uint8_t
{
	ESortStrategy__ESortStrategy_Max = 0,
	ESortStrategy__ESortStrategy_Min = 1,
	ESortStrategy__ESortStrategy_Average = 2,
	ESortStrategy__ESortStrategy_Total = 3
};


// Enum ShadowTrackerExtra.AUTO_SCROLL_TYPE
enum class EAUTO_SCROLL_TYPE : uint8_t
{
	AUTO_SCROLL_TYPE__LEFT_RIGHT   = 0,
	AUTO_SCROLL_TYPE__PING_PONG    = 1,
	AUTO_SCROLL_TYPE__AUTO_SCROLL_MAX = 2
};


// Enum ShadowTrackerExtra.EAvatarActionLifeType
enum class EAvatarActionLifeType : uint8_t
{
	EAvatarActionLifeType__NONE    = 0,
	EAvatarActionLifeType__NormalAction = 1,
	EAvatarActionLifeType__MainAction = 2,
	EAvatarActionLifeType__UniqueAction = 3,
	EAvatarActionLifeType__EAvatarActionLifeType_MAX = 4
};


// Enum ShadowTrackerExtra.EDIYEnableLevel
enum class EDIYEnableLevel : uint8_t
{
	EDIYEnableLevel__None          = 0,
	EDIYEnableLevel__Self          = 1,
	EDIYEnableLevel__Team          = 2,
	EDIYEnableLevel__All           = 3,
	EDIYEnableLevel__EDIYEnableLevel_MAX = 4
};


// Enum ShadowTrackerExtra.EDIYMatPart
enum class EDIYMatPart : uint8_t
{
	EDIYMatPart__EDIYMatPart_Red   = 0,
	EDIYMatPart__EDIYMatPart_Green = 1,
	EDIYMatPart__EDIYMatPart_Blue  = 2,
	EDIYMatPart__EDIYMatPart_Alpha = 3,
	EDIYMatPart__EDIYMatPart_MAX   = 4
};


// Enum ShadowTrackerExtra.EDIYDecalBakingType
enum class EDIYDecalBakingType : uint8_t
{
	EDIYDecalBakingType__Character = 0,
	EDIYDecalBakingType__Weapon    = 1,
	EDIYDecalBakingType__Vehicle   = 2,
	EDIYDecalBakingType__EDIYDecalBakingType_MAX = 3
};


// Enum ShadowTrackerExtra.EAvatarVisiblityType
enum class EAvatarVisiblityType : uint8_t
{
	EAvatarVisiblityType__EAllVisible = 0,
	EAvatarVisiblityType__ETeammateOnly = 1,
	EAvatarVisiblityType__EAvatarVisiblityType_MAX = 2
};


// Enum ShadowTrackerExtra.EHideBoneType
enum class EHideBoneType : uint8_t
{
	EHideBoneType__AlwaysValid     = 0,
	EHideBoneType__InvalidWhenReplaced = 1,
	EHideBoneType__InvalidWhenHidden = 2,
	EHideBoneType__InvalidWhenHiddenOrReplaced = 3,
	EHideBoneType__EHideBoneType_MAX = 4
};


// Enum ShadowTrackerExtra.EPostOperationType
enum class EPostOperationType : uint8_t
{
	EPostOperationType__Name_None  = 0,
	EPostOperationType__KeepHidden = 1,
	EPostOperationType__RecoverHidden = 2,
	EPostOperationType__KeepReplace = 3,
	EPostOperationType__RecoverReplace = 4,
	EPostOperationType__EPostOperationType_MAX = 5
};


// Enum ShadowTrackerExtra.EAvatarAttachmentSlot
enum class EAvatarAttachmentSlot : uint8_t
{
	EAvatarAttachmentSlot__NONE    = 0,
	EAvatarAttachmentSlot__Magazine = 1,
	EAvatarAttachmentSlot__MAX     = 2
};


// Enum ShadowTrackerExtra.EReplaceSlot
enum class EReplaceSlot : uint8_t
{
	EReplaceSlot__EReplaceType_NONE = 0,
	EReplaceSlot__EReplaceType_HeadEquipemtSlot = 1,
	EReplaceSlot__EReplaceType_HairEquipemtSlot = 2,
	EReplaceSlot__EReplaceType_HatEquipemtSlot = 3,
	EReplaceSlot__EReplaceType_FaceEquipemtSlot = 4,
	EReplaceSlot__EReplaceType_ClothesEquipemtSlot = 5,
	EReplaceSlot__EReplaceType_PantsEquipemtSlot = 6,
	EReplaceSlot__EReplaceType_ShoesEquipemtSlot = 7,
	EReplaceSlot__EReplaceType_BackpackEquipemtSlot = 8,
	EReplaceSlot__EReplaceType_HelmetEquipemtSlot = 9,
	EReplaceSlot__EReplaceType_ArmorEquipemtSlot = 10,
	EReplaceSlot__EReplaceType_ParachuteEquipemtSlot = 11,
	EReplaceSlot__EReplaceType_GlassEquipemtSlot = 12,
	EReplaceSlot__EReplaceType_NightVisionEquipemtSlot = 13,
	EReplaceSlot__EReplaceType_BeardEquipemtSlot = 14,
	EReplaceSlot__EReplaceType_PonyTailHairSlot = 15,
	EReplaceSlot__EReplaceType_VeilSlot = 16,
	EReplaceSlot__EReplaceType_GhostFace = 17,
	EReplaceSlot__EReplaceType_HoodSlot = 18,
	EReplaceSlot__EReplaceType_StockingSlot = 19,
	EReplaceSlot__EReplaceType_BootsSlot = 20,
	EReplaceSlot__EReplaceType_MAX = 21
};


// Enum ShadowTrackerExtra.EAvatarSpecialType
enum class EAvatarSpecialType : uint8_t
{
	EAvatarSpecialType__EAvatarSpecialType_None = 0,
	EAvatarSpecialType__EAvatarSpecialType_FlexibleCloth = 1,
	EAvatarSpecialType__EAvatarSpecialType_CustomCloth = 2,
	EAvatarSpecialType__EAvatarSpecialType_Bareheaded = 3,
	EAvatarSpecialType__EAvatarSpecialType_2PassHair = 4,
	EAvatarSpecialType__EAvatarSpecialType_MoreBoneCloth = 5,
	EAvatarSpecialType__EAvatarSpecialType_MAX = 6
};


// Enum ShadowTrackerExtra.EBackpackItemSortType
enum class EBackpackItemSortType : uint8_t
{
	EBackpackItemSortType__EIS_Default = 0,
	EBackpackItemSortType__EIS_Worth = 1,
	EBackpackItemSortType__ECT_Type = 2,
	EBackpackItemSortType__EBackpackItemSortType_MAX = 3
};


// Enum ShadowTrackerExtra.EClipsType
enum class EClipsType : uint8_t
{
	EClipsType__ECT_EXPANSION      = 0,
	EClipsType__ECT_QUICK          = 1,
	EClipsType__ECT_QUICK_EXPANSION = 2,
	EClipsType__ECT_MAX            = 3
};


// Enum ShadowTrackerExtra.EAvatarDownloadType
enum class EAvatarDownloadType : uint8_t
{
	EAvatarDownloadType__EAvatarDownloadType_Character = 0,
	EAvatarDownloadType__EAvatarDownloadType_Vehicle = 1,
	EAvatarDownloadType__EAvatarDownloadType_Weapon = 2,
	EAvatarDownloadType__EAvatarDownloadType_AdvanceVehicle = 3,
	EAvatarDownloadType__EAvatarDownloadType_Other1 = 4,
	EAvatarDownloadType__EAvatarDownloadType_Other2 = 5,
	EAvatarDownloadType__EAvatarDownloadType_Max = 6
};


// Enum ShadowTrackerExtra.EBackpackItemType
enum class EBackpackItemType : uint8_t
{
	UnknownBackpackItemType        = 0,
	BackpackItemType_Weapon        = 1,
	BackpackItemType_WeaponAttachment = 2,
	BackpackItemType_Ammo          = 3,
	BackpackItemType_Clothing      = 4,
	BackpackItemType_Armor         = 5,
	BackpackItemType_Consumable    = 6,
	BackpackItemType_Emote         = 7,
	BackpackItemType_SkillProps    = 8,
	BackpackItemType_VehicleProps  = 9,
	BackpackItemType_Chip          = 10,
	EBackpackItemType_MAX          = 11
};


// Enum ShadowTrackerExtra.EAllAttachmentSet
enum class EAllAttachmentSet : uint8_t
{
	EAllAttachmentSet__GunPoint    = 0,
	EAllAttachmentSet__Grip        = 1,
	EAllAttachmentSet__Magazine    = 2,
	EAllAttachmentSet__Gunstock    = 3,
	EAllAttachmentSet__IronSight   = 4,
	EAllAttachmentSet__RedPointScope = 5,
	EAllAttachmentSet__QXScope     = 6,
	EAllAttachmentSet__X2Scope     = 7,
	EAllAttachmentSet__X4Scope     = 8,
	EAllAttachmentSet__X8Scope     = 9,
	EAllAttachmentSet__EAllAttachmentSet_MAX = 10
};


// Enum ShadowTrackerExtra.EWeaponSubSlotType
enum class EWeaponSubSlotType : uint8_t
{
	EWeaponSubSlotType__None       = 0,
	EWeaponSubSlotType__UpperLarge = 1,
	EWeaponSubSlotType__UpperSmall = 2,
	EWeaponSubSlotType__UpperDefault = 3,
	EWeaponSubSlotType__Laser      = 4,
	EWeaponSubSlotType__EWeaponSubSlotType_MAX = 5
};


// Enum ShadowTrackerExtra.EOpticalSightType
enum class EOpticalSightType : uint8_t
{
	EOpticalSightType__NoneSight   = 0,
	EOpticalSightType__UpperLarge  = 1,
	EOpticalSightType__UpperSmall  = 2,
	EOpticalSightType__UpperDefault = 3,
	EOpticalSightType__EOpticalSightType_MAX = 4
};


// Enum ShadowTrackerExtra.EAICheckFlyingStatusType
enum class EAICheckFlyingStatusType : uint8_t
{
	EAICheckFlyingStatusType__FlyingStatus_HasNavigationSystem = 0,
	EAICheckFlyingStatusType__FlyingStatus_NavigationVoxelDataDone = 1,
	EAICheckFlyingStatusType__FlyingStatus_MAX = 2
};


// Enum ShadowTrackerExtra.EAICheckShootingPoseType
enum class EAICheckShootingPoseType : uint8_t
{
	EAICheckShootingPoseType__ShootingPose_Normal = 0,
	EAICheckShootingPoseType__ShootingPose_Stand = 1,
	EAICheckShootingPoseType__ShootingPose_Peek = 2,
	EAICheckShootingPoseType__ShootingPose_WaitVisibilityCheck = 3,
	EAICheckShootingPoseType__ShootingPose_MAX = 4
};


// Enum ShadowTrackerExtra.ECompareLengthType
enum class ECompareLengthType : uint8_t
{
	ELengthGreater                 = 0,
	ELengthLess                    = 1,
	ELengthEequal                  = 2,
	ECompareLengthType_MAX         = 3
};


// Enum ShadowTrackerExtra.EAIDecoratorGeneralLineTraceType
enum class EAIDecoratorGeneralLineTraceType : uint8_t
{
	EAIDecoratorGeneralLineTraceType__LineTraceType_Forward = 0,
	EAIDecoratorGeneralLineTraceType__LineTraceType_MAX = 1
};


// Enum ShadowTrackerExtra.EInSafetyCircleType
enum class EInSafetyCircleType : uint8_t
{
	EInSafetyCircleType__EInSafetyCircleType_None = 0,
	EInSafetyCircleType__EInSafetyCircleType_BlueCircle = 1,
	EInSafetyCircleType__EInSafetyCircleType_WhiteCircle = 2,
	EInSafetyCircleType__EInSafetyCircleType_MAX = 3
};


// Enum ShadowTrackerExtra.EItemNumCheckType
enum class EItemNumCheckType : uint8_t
{
	ItemNumGreater                 = 0,
	ItemNumLess                    = 1,
	ItemNumEequal                  = 2,
	EItemNumCheckType_MAX          = 3
};


// Enum ShadowTrackerExtra.EChooseEnemySearchMethod
enum class EChooseEnemySearchMethod : uint8_t
{
	EChooseEnemySearchMethod__SearchMethod_Nearest = 0,
	EChooseEnemySearchMethod__SearchMethod_MostHP = 1,
	EChooseEnemySearchMethod__SearchMethod_LeastHP = 2,
	EChooseEnemySearchMethod__SearchMethod_ByBlackboardValue = 3,
	EChooseEnemySearchMethod__SearchMethod_MAX = 4
};


// Enum ShadowTrackerExtra.EChooseEnemyType
enum class EChooseEnemyType : uint8_t
{
	EChooseEnemyType__EnemyType_Player = 0,
	EChooseEnemyType__EnemyType_Animal = 1,
	EChooseEnemyType__EnemyType_Zombie = 2,
	EChooseEnemyType__EnemyType_UAV = 3,
	EChooseEnemyType__EnemyType_MAX = 4
};


// Enum ShadowTrackerExtra.EMobAddHPServiceType
enum class EMobAddHPServiceType : uint8_t
{
	EMobAddHPServiceType__LoseTarget = 0,
	EMobAddHPServiceType__EMobAddHPServiceType_MAX = 1
};


// Enum ShadowTrackerExtra.EAISearchEnemyType
enum class EAISearchEnemyType : uint8_t
{
	EAISearchEnemyType__Nearest    = 0,
	EAISearchEnemyType__Random     = 1,
	EAISearchEnemyType__EAISearchEnemyType_MAX = 2
};


// Enum ShadowTrackerExtra.EAISenseGrenadeType
enum class EAISenseGrenadeType : uint8_t
{
	EAISenseGrenadeType__ExplosionGrenade = 0,
	EAISenseGrenadeType__BurningGrenade = 1,
	EAISenseGrenadeType__SmokingGrenade = 2,
	EAISenseGrenadeType__FlashBomb = 3,
	EAISenseGrenadeType__Grenade_MaxNum = 4,
	EAISenseGrenadeType__EAISenseGrenadeType_MAX = 5
};


// Enum ShadowTrackerExtra.ETargetAngleCheck
enum class ETargetAngleCheck : uint8_t
{
	TargetAngleCheckFocus          = 0,
	TargetAngleCheckFocusFail      = 1,
	TargetAngleCheckFocusSuccess   = 2,
	ETargetAngleCheck_MAX          = 3
};


// Enum ShadowTrackerExtra.EFindFlyingHoverPointOneSideShapeOType
enum class EFindFlyingHoverPointOneSideShapeOType : uint8_t
{
	EFindFlyingHoverPointOneSideShapeOType__OT_RandomSide = 0,
	EFindFlyingHoverPointOneSideShapeOType__OT_LeftSide = 1,
	EFindFlyingHoverPointOneSideShapeOType__OT_RightSide = 2,
	EFindFlyingHoverPointOneSideShapeOType__OT_MAX = 3
};


// Enum ShadowTrackerExtra.EFindFlyingHoverPointHoverType
enum class EFindFlyingHoverPointHoverType : uint8_t
{
	EFindFlyingHoverPointHoverType__HT_OneSideShapeO = 0,
	EFindFlyingHoverPointHoverType__HT_MAX = 1
};


// Enum ShadowTrackerExtra.EFlyToPathfindingThread
enum class EFlyToPathfindingThread : uint8_t
{
	EFlyToPathfindingThread__Sync  = 0,
	EFlyToPathfindingThread__ASync = 1,
	EFlyToPathfindingThread__EFlyToPathfindingThread_MAX = 2
};


// Enum ShadowTrackerExtra.EMobFindAttackablePositionLineTraceType
enum class EMobFindAttackablePositionLineTraceType : uint8_t
{
	EMobFindAttackablePositionLineTraceType__Normal = 0,
	EMobFindAttackablePositionLineTraceType__HalfHeightOffset = 1,
	EMobFindAttackablePositionLineTraceType__CustomHeightOffset = 2,
	EMobFindAttackablePositionLineTraceType__EMobFindAttackablePositionLineTraceType_MAX = 3
};


// Enum ShadowTrackerExtra.ESearchType
enum class ESearchType : uint8_t
{
	ESearchType__CenterInSelfLocation = 0,
	ESearchType__CenterInSpecificLocation = 1,
	ESearchType__ESearchType_MAX   = 2
};


// Enum ShadowTrackerExtra.EModifyBlackboardDataValueType
enum class EModifyBlackboardDataValueType : uint8_t
{
	EModifyBlackboardDataValueType__Int = 0,
	EModifyBlackboardDataValueType__Float = 1,
	EModifyBlackboardDataValueType__Bool = 2,
	EModifyBlackboardDataValueType__String = 3,
	EModifyBlackboardDataValueType__Name = 4,
	EModifyBlackboardDataValueType__Object = 5,
	EModifyBlackboardDataValueType__Vector3 = 6,
	EModifyBlackboardDataValueType__EModifyBlackboardDataValueType_MAX = 7
};


// Enum ShadowTrackerExtra.EAIMoveToOcclusionFinishMovePoseType
enum class EAIMoveToOcclusionFinishMovePoseType : uint8_t
{
	EAIMoveToOcclusionFinishMovePoseType__FinishMovePoseType_Normal = 0,
	EAIMoveToOcclusionFinishMovePoseType__FinishMovePoseType_CrouchIfACrouchOcclusion = 1,
	EAIMoveToOcclusionFinishMovePoseType__FinishMovePoseType_MAX = 2
};


// Enum ShadowTrackerExtra.EAIMoveToOcclusionMovingPoseType
enum class EAIMoveToOcclusionMovingPoseType : uint8_t
{
	EAIMoveToOcclusionMovingPoseType__MovingPoseType_Normal = 0,
	EAIMoveToOcclusionMovingPoseType__MovingPoseType_CrouchSprintIfAlreadyCrouched = 1,
	EAIMoveToOcclusionMovingPoseType__MovingPoseType_MAX = 2
};


// Enum ShadowTrackerExtra.EAIMoveToOcclusionSearchBestOcclusionMethod
enum class EAIMoveToOcclusionSearchBestOcclusionMethod : uint8_t
{
	EAIMoveToOcclusionSearchBestOcclusionMethod__Normal = 0,
	EAIMoveToOcclusionSearchBestOcclusionMethod__NearToTarget = 1,
	EAIMoveToOcclusionSearchBestOcclusionMethod__FarToTarget = 2,
	EAIMoveToOcclusionSearchBestOcclusionMethod__NearToSelf = 3,
	EAIMoveToOcclusionSearchBestOcclusionMethod__RandomOfSelf = 4,
	EAIMoveToOcclusionSearchBestOcclusionMethod__EAIMoveToOcclusionSearchBestOcclusionMethod_MAX = 5
};


// Enum ShadowTrackerExtra.EAIMoveToOcclusionPoseType
enum class EAIMoveToOcclusionPoseType : uint8_t
{
	EAIMoveToOcclusionPoseType__PoseProne = 0,
	EAIMoveToOcclusionPoseType__PoseCrouch = 1,
	EAIMoveToOcclusionPoseType__PoseStand = 2,
	EAIMoveToOcclusionPoseType__PoseBush = 3,
	EAIMoveToOcclusionPoseType__EAIMoveToOcclusionPoseType_MAX = 4
};


// Enum ShadowTrackerExtra.ESeekFlyPointHorizontalAngleType
enum class ESeekFlyPointHorizontalAngleType : uint8_t
{
	ESeekFlyPointHorizontalAngleType__TargetView = 0,
	ESeekFlyPointHorizontalAngleType__TargetToSelf = 1,
	ESeekFlyPointHorizontalAngleType__ESeekFlyPointHorizontalAngleType_MAX = 2
};


// Enum ShadowTrackerExtra.ESeekFlyPointCenterLocType
enum class ESeekFlyPointCenterLocType : uint8_t
{
	ESeekFlyPointCenterLocType__Target = 0,
	ESeekFlyPointCenterLocType__Self = 1,
	ESeekFlyPointCenterLocType__ESeekFlyPointCenterLocType_MAX = 2
};


// Enum ShadowTrackerExtra.EAITaskNodeThrowGrenadeMethod
enum class EAITaskNodeThrowGrenadeMethod : uint8_t
{
	EAITaskNodeThrowGrenadeMethod__ThrowGrenadeMethod_Normal = 0,
	EAITaskNodeThrowGrenadeMethod__ThrowGrenadeMethod_Advanced = 1,
	EAITaskNodeThrowGrenadeMethod__ThrowGrenadeMethod_MAX = 2
};


// Enum ShadowTrackerExtra.ChatFlagType
enum class EChatFlagType : uint8_t
{
	ChatFlagType__DanagerForward   = 0,
	ChatFlagType__SaveMe           = 1,
	ChatFlagType__Congregation     = 2,
	ChatFlagType__SuppliesHere     = 3,
	ChatFlagType__GetOnCar         = 4,
	ChatFlagType__NeedSupplies     = 5,
	ChatFlagType__ChatFlagType_MAX = 6
};


// Enum ShadowTrackerExtra.EMovementState
enum class EMovementState : uint8_t
{
	EMovementState__MS_None        = 0,
	EMovementState__MS_StartUp     = 1,
	EMovementState__MS_Flying      = 2,
	EMovementState__MS_ArriveSmallPoint = 3,
	EMovementState__MS_ArriveBigPoint = 4,
	EMovementState__MS_MAX         = 5
};


// Enum ShadowTrackerExtra.EWidgetTouchState
enum class EWidgetTouchState : uint8_t
{
	EWidgetTouchState__None        = 0,
	EWidgetTouchState__Up          = 1,
	EWidgetTouchState__Down        = 2,
	EWidgetTouchState__Dragging    = 3,
	EWidgetTouchState__EWidgetTouchState_MAX = 4
};


// Enum ShadowTrackerExtra.EClimbingProxyGenerationLineTraceType
enum class EClimbingProxyGenerationLineTraceType : uint8_t
{
	EClimbingProxyGenerationLineTraceType__UsingLineTraceDown = 0,
	EClimbingProxyGenerationLineTraceType__WithoutLineTracing = 1,
	EClimbingProxyGenerationLineTraceType__EClimbingProxyGenerationLineTraceType_MAX = 2
};


// Enum ShadowTrackerExtra.EClimbingProxyGenerationDirection
enum class EClimbingProxyGenerationDirection : uint8_t
{
	EClimbingProxyGenerationDirection__Default = 0,
	EClimbingProxyGenerationDirection__BothWays = 1,
	EClimbingProxyGenerationDirection__LeftToRight = 2,
	EClimbingProxyGenerationDirection__RightToLeft = 3,
	EClimbingProxyGenerationDirection__EClimbingProxyGenerationDirection_MAX = 4
};


// Enum ShadowTrackerExtra.EClimbingProxyGenerationType
enum class EClimbingProxyGenerationType : uint8_t
{
	EClimbingProxyGenerationType__Climbing = 0,
	EClimbingProxyGenerationType__Striding = 1,
	EClimbingProxyGenerationType__EClimbingProxyGenerationType_MAX = 2
};


// Enum ShadowTrackerExtra.ECollectedEventDataEventId
enum class ECollectedEventDataEventId : uint8_t
{
	ECollectedEventDataEventId__GameStatus = 0,
	ECollectedEventDataEventId__StartMatching = 1,
	ECollectedEventDataEventId__PlaneCarrying = 2,
	ECollectedEventDataEventId__PuttingDownCakeFireWorks = 3,
	ECollectedEventDataEventId__RankingScore = 4,
	ECollectedEventDataEventId__TakeDropItem = 5,
	ECollectedEventDataEventId__UsingItem = 6,
	ECollectedEventDataEventId__Falling = 7,
	ECollectedEventDataEventId__Climbing = 8,
	ECollectedEventDataEventId__InFieldOfView = 9,
	ECollectedEventDataEventId__UnderEnermyAttack = 10,
	ECollectedEventDataEventId__TakingDamage = 11,
	ECollectedEventDataEventId__ReducingSignalValue = 12,
	ECollectedEventDataEventId__CircleReducing = 13,
	ECollectedEventDataEventId__CircleChange = 14,
	ECollectedEventDataEventId__Rescue = 15,
	ECollectedEventDataEventId__DrivingVehicle = 16,
	ECollectedEventDataEventId__ReloadingBullet = 17,
	ECollectedEventDataEventId__AirDrop = 18,
	ECollectedEventDataEventId__PlayerPos = 19,
	ECollectedEventDataEventId__WeaponUsage = 20,
	ECollectedEventDataEventId__ItemPackageCreate = 21,
	ECollectedEventDataEventId__ItemAttach = 22,
	ECollectedEventDataEventId__ItemDetach = 23,
	ECollectedEventDataEventId__PlayerInfo = 24,
	ECollectedEventDataEventId__MiniMapShowInfo = 25,
	ECollectedEventDataEventId__Following = 26,
	ECollectedEventDataEventId__MiniMapPinning = 27,
	ECollectedEventDataEventId__Blocking = 28,
	ECollectedEventDataEventId__Dancing = 29,
	ECollectedEventDataEventId__PickingupTombBox = 30,
	ECollectedEventDataEventId__AirAttacking = 31,
	ECollectedEventDataEventId__CurrentWeapon = 32,
	ECollectedEventDataEventId__SceneInfo = 33,
	ECollectedEventDataEventId__TeamInfo = 34,
	ECollectedEventDataEventId__EnteringLeavingTeam = 35,
	ECollectedEventDataEventId__OnOffline = 36,
	ECollectedEventDataEventId__RankList = 37,
	ECollectedEventDataEventId__TextMessage = 38,
	ECollectedEventDataEventId__PawnState = 39,
	ECollectedEventDataEventId__OpenCloseDoor = 40,
	ECollectedEventDataEventId__MicSpeakerState = 41,
	ECollectedEventDataEventId__VehicleState = 42,
	ECollectedEventDataEventId__EnumMax = 43,
	ECollectedEventDataEventId__ECollectedEventDataEventId_MAX = 44
};


// Enum ShadowTrackerExtra.EFireResetType
enum class EFireResetType : uint8_t
{
	EFireResetType__EFireResetType_None = 0,
	EFireResetType__EFireResetType_Single = 1,
	EFireResetType__EFireResetType_Loop = 2,
	EFireResetType__EFireResetType_SingleAndLoop = 3,
	EFireResetType__EFireResetType_MAX = 4
};


// Enum ShadowTrackerExtra.ECustomCndEventType
enum class ECustomCndEventType : uint8_t
{
	OnStartFire                    = 0,
	OnStopFire                     = 1,
	OnFireHitServer                = 2,
	MaxType                        = 3,
	ECustomCndEventType_MAX        = 4
};


// Enum ShadowTrackerExtra.EConditionHeathType
enum class EConditionHeathType : uint8_t
{
	EConditionHeathType__EQUAL     = 0,
	EConditionHeathType__MORE_THAN = 1,
	EConditionHeathType__LESS_THAN = 2,
	EConditionHeathType__EConditionHeathType_MAX = 3
};


// Enum ShadowTrackerExtra.EDDMCFindType
enum class EDDMCFindType : uint8_t
{
	DDMCFT_ALL                     = 0,
	DDMCFT_RPC                     = 1,
	DDMCFT_REP                     = 2,
	DDMCFT_NONE                    = 3,
	DDMCFT_MAX                     = 4
};


// Enum ShadowTrackerExtra.EDeathMatchPersonalMedalType
enum class EDeathMatchPersonalMedalType : uint8_t
{
	EDeathMatchPersonalMedalType__SuperGod = 0,
	EDeathMatchPersonalMedalType__ContinuouKill = 1,
	EDeathMatchPersonalMedalType__SuperGodEnd = 2,
	EDeathMatchPersonalMedalType__TopSpotEnd = 3,
	EDeathMatchPersonalMedalType__ContinuouKillEnd = 4,
	EDeathMatchPersonalMedalType__FirstKill = 5,
	EDeathMatchPersonalMedalType__Revenge = 6,
	EDeathMatchPersonalMedalType__HeadShot = 7,
	EDeathMatchPersonalMedalType__Hunter = 8,
	EDeathMatchPersonalMedalType__Rally = 9,
	EDeathMatchPersonalMedalType__Cheer = 10,
	EDeathMatchPersonalMedalType__Sharpshooter = 11,
	EDeathMatchPersonalMedalType__GorgeousExplosion = 12,
	EDeathMatchPersonalMedalType__Slaughter = 13,
	EDeathMatchPersonalMedalType__AntiKill = 14,
	EDeathMatchPersonalMedalType__SunderArmorExperts = 15,
	EDeathMatchPersonalMedalType__RPG = 16,
	EDeathMatchPersonalMedalType__Guard = 17,
	EDeathMatchPersonalMedalType__Raiders = 18,
	EDeathMatchPersonalMedalType__Keeper = 19,
	EDeathMatchPersonalMedalType__EDeathMatchPersonalMedalType_MAX = 20
};


// Enum ShadowTrackerExtra.EDeathMatchWWISENotifyReason
enum class EDeathMatchWWISENotifyReason : uint8_t
{
	EDeathMatchWWISENotifyReason__None = 0,
	EDeathMatchWWISENotifyReason__Reload = 1,
	EDeathMatchWWISENotifyReason__NormalKill = 2,
	EDeathMatchWWISENotifyReason__RedTeamFirstKill = 3,
	EDeathMatchWWISENotifyReason__BlueTeamFirstKill = 4,
	EDeathMatchWWISENotifyReason__RedTeamLeading = 5,
	EDeathMatchWWISENotifyReason__BlueTeamLeading = 6,
	EDeathMatchWWISENotifyReason__RedTeamAlmostWin = 7,
	EDeathMatchWWISENotifyReason__BlueTeamAlmostWin = 8,
	EDeathMatchWWISENotifyReason__RedTeamAlmostCompletelyWin = 9,
	EDeathMatchWWISENotifyReason__BlueTeamAlmostCompoletelyWin = 10,
	EDeathMatchWWISENotifyReason__RedTeamHalfTimeLeading = 11,
	EDeathMatchWWISENotifyReason__BlueTeamHalfTimeLeading = 12,
	EDeathMatchWWISENotifyReason__RedTeamTimeEndLeading = 13,
	EDeathMatchWWISENotifyReason__BlueTeamTimeEndLeading = 14,
	EDeathMatchWWISENotifyReason__RedTeamHasSuperGod = 15,
	EDeathMatchWWISENotifyReason__BlueTeamHasSuperGod = 16,
	EDeathMatchWWISENotifyReason__RedTeamEndSuperGod = 17,
	EDeathMatchWWISENotifyReason__BlueTeamEndSuperGod = 18,
	EDeathMatchWWISENotifyReason__RedTeamRampage = 19,
	EDeathMatchWWISENotifyReason__BlueTeamRampage = 20,
	EDeathMatchWWISENotifyReason__RedTeamWillOccupyHardPoint = 21,
	EDeathMatchWWISENotifyReason__BlueTeamWillOccupyHardPoint = 22,
	EDeathMatchWWISENotifyReason__RedTeamWillOccupyHardPoint_Time = 23,
	EDeathMatchWWISENotifyReason__BlueTeamWillOccupyHardPoint_Time = 24,
	EDeathMatchWWISENotifyReason__RedTeamWillHardPointHalfTime = 25,
	EDeathMatchWWISENotifyReason__BlueTeamWillHardPointHalfTime = 26,
	EDeathMatchWWISENotifyReason__EDeathMatchWWISENotifyReason_MAX = 27
};


// Enum ShadowTrackerExtra.EScanPhase
enum class EScanPhase : uint8_t
{
	EScanPhase__ScanPhaseNone      = 0,
	EScanPhase__ScanPhase1         = 1,
	EScanPhase__ScanPhase2         = 2,
	EScanPhase__ScanPhase3         = 3,
	EScanPhase__ScanPhase4         = 4,
	EScanPhase__ScanPhase5         = 5,
	EScanPhase__ScanPhase6         = 6,
	EScanPhase__ScanPhase7         = 7,
	EScanPhase__ScanPhase8         = 8,
	EScanPhase__ScanPhase9         = 9,
	EScanPhase__EScanPhase_MAX     = 10
};


// Enum ShadowTrackerExtra.EItemCurveAnimState
enum class EItemCurveAnimState : uint8_t
{
	EItemCurveAnimState__DelayStart = 0,
	EItemCurveAnimState__Anim      = 1,
	EItemCurveAnimState__DelayDestroy = 2,
	EItemCurveAnimState__End       = 3,
	EItemCurveAnimState__EItemCurveAnimState_MAX = 4
};


// Enum ShadowTrackerExtra.ShooterLEDState
enum class EShooterLEDState : uint8_t
{
	ShooterLEDState__Ready         = 0,
	ShooterLEDState__Fighting      = 1,
	ShooterLEDState__Finished      = 2,
	ShooterLEDState__ShooterLEDState_MAX = 3
};


// Enum ShadowTrackerExtra.EDynamicWeatherExMgrActivityStatus
enum class EDynamicWeatherExMgrActivityStatus : uint8_t
{
	EDynamicWeatherExMgrActivityStatus__Begin = 0,
	EDynamicWeatherExMgrActivityStatus__End = 1,
	EDynamicWeatherExMgrActivityStatus__EDynamicWeatherExMgrActivityStatus_MAX = 2
};


// Enum ShadowTrackerExtra.ENightStatus
enum class ENightStatus : uint8_t
{
	ENightStatus__ENightStatus_Other = 0,
	ENightStatus__ENightStatus_Night1 = 1,
	ENightStatus__ENightStatus_Night2 = 2,
	ENightStatus__ENightStatus_MAX = 3
};


// Enum ShadowTrackerExtra.EWeatherChangeStatus
enum class EWeatherChangeStatus : uint8_t
{
	EWeatherChangeStatus__EWeatherChangeStatus_StartEnter = 0,
	EWeatherChangeStatus__EWeatherChangeStatus_Duration = 1,
	EWeatherChangeStatus__EWeatherChangeStatus_StartQuit = 2,
	EWeatherChangeStatus__EWeatherChangeStatus_MAX = 3
};


// Enum ShadowTrackerExtra.EEffectAdjustType
enum class EEffectAdjustType : uint8_t
{
	EEffectAdjustType__EAT_MinShowDistanceAndLerp = 0,
	EEffectAdjustType__EAT_MinShowDistanceAndHide = 1,
	EEffectAdjustType__EAT_MAX     = 2
};


// Enum ShadowTrackerExtra.ESpikeDeploymentState
enum class ESpikeDeploymentState : uint8_t
{
	ESpikeDeploymentState__PreDeploy = 0,
	ESpikeDeploymentState__Deploying = 1,
	ESpikeDeploymentState__PostDeploy = 2,
	ESpikeDeploymentState__Popped  = 3,
	ESpikeDeploymentState__Idle    = 4,
	ESpikeDeploymentState__ESpikeDeploymentState_MAX = 5
};


// Enum ShadowTrackerExtra.EProjectileEventType
enum class EProjectileEventType : uint8_t
{
	EProjectileEventType__None     = 0,
	EProjectileEventType__Activate = 1,
	EProjectileEventType__Bounce   = 2,
	EProjectileEventType__Stop     = 3,
	EProjectileEventType__Exploded = 4,
	EProjectileEventType__Damaged  = 5,
	EProjectileEventType__EProjectileEventType_MAX = 6
};


// Enum ShadowTrackerExtra.EProjectileExplosionStartType
enum class EProjectileExplosionStartType : uint8_t
{
	EProjectileExplosionStartType__Never = 0,
	EProjectileExplosionStartType__Impact = 1,
	EProjectileExplosionStartType__Timer = 2,
	EProjectileExplosionStartType__ImpactAndTimer = 3,
	EProjectileExplosionStartType__EProjectileExplosionStartType_MAX = 4
};


// Enum ShadowTrackerExtra.EEnhancerSpotState
enum class EEnhancerSpotState : uint8_t
{
	EEnhancerSpotState__DeActive   = 0,
	EEnhancerSpotState__Ready      = 1,
	EEnhancerSpotState__Active     = 2,
	EEnhancerSpotState__EEnhancerSpotState_MAX = 3
};


// Enum ShadowTrackerExtra.EEventDataCollectionValues_MicSpeakerState_Speaker
enum class EEventDataCollectionValues_MicSpeakerState_Speaker : uint8_t
{
	EEventDataCollectionValues_MicSpeakerState_Speaker__None = 0,
	EEventDataCollectionValues_MicSpeakerState_Speaker__Lbs = 1,
	EEventDataCollectionValues_MicSpeakerState_Speaker__Team = 2,
	EEventDataCollectionValues_MicSpeakerState_Speaker__EEventDataCollectionValues_MicSpeakerState_MAX = 3
};


// Enum ShadowTrackerExtra.EEventDataCollectionValues_MicSpeakerState_Mic
enum class EEventDataCollectionValues_MicSpeakerState_Mic : uint8_t
{
	EEventDataCollectionValues_MicSpeakerState_Mic__None = 0,
	EEventDataCollectionValues_MicSpeakerState_Mic__Lbs = 1,
	EEventDataCollectionValues_MicSpeakerState_Mic__Team = 2,
	EEventDataCollectionValues_MicSpeakerState_Mic__KeyLbs = 3,
	EEventDataCollectionValues_MicSpeakerState_Mic__KeyTeam = 4,
	EEventDataCollectionValues_MicSpeakerState_Mic__EEventDataCollectionValues_MicSpeakerState_MAX = 5
};


// Enum ShadowTrackerExtra.EEventDataCollectionValues_RankList_Type
enum class EEventDataCollectionValues_RankList_Type : uint8_t
{
	EEventDataCollectionValues_RankList_Type__None = 0,
	EEventDataCollectionValues_RankList_Type__Hot = 1,
	EEventDataCollectionValues_RankList_Type__Lucky = 2,
	EEventDataCollectionValues_RankList_Type__EEventDataCollectionValues_RankList_MAX = 3
};


// Enum ShadowTrackerExtra.EFinderShape
enum class EFinderShape : uint8_t
{
	EFinderShape__Line             = 0,
	EFinderShape__Box              = 1,
	EFinderShape__Sphere           = 2,
	EFinderShape__Capsule          = 3,
	EFinderShape__Cone             = 4,
	EFinderShape__Fan              = 5,
	EFinderShape__Complex          = 6,
	EFinderShape__EFinderShape_MAX = 7
};


// Enum ShadowTrackerExtra.EFakePlayerBornType
enum class EFakePlayerBornType : uint8_t
{
	FromLobby                      = 0,
	FromSpawner                    = 1,
	EFakePlayerBornType_MAX        = 2
};


// Enum ShadowTrackerExtra.EFPPCameraDataType
enum class EFPPCameraDataType : uint8_t
{
	EFPPCameraType_InVehicle       = 0,
	EFPPCameraType_Shoveling       = 1,
	EFPPCameraType_Max             = 2
};


// Enum ShadowTrackerExtra.EBotType
enum class EBotType : uint8_t
{
	BotType_First                  = 0,
	BotType_Default                = 1,
	BotType_Boss                   = 2,
	BotType_NormalActor            = 3,
	BotType_Vehicle                = 4,
	BotType_PickUpWrapper          = 5,
	BotType_All                    = 6,
	BotType_MAX                    = 7
};


// Enum ShadowTrackerExtra.EBotCategray
enum class EBotCategray : uint8_t
{
	BotCategory_First              = 0,
	BotCategory_Monster            = 1,
	BotCategory_Decorator          = 2,
	BotCategory_NormalActor        = 3,
	BotCategory_Vehicle            = 4,
	BotCategory_PickUpWrapper      = 5,
	BotCategory_FakePlayer         = 6,
	BotCategory_All                = 7,
	BotCategory_MAX                = 8
};


// Enum ShadowTrackerExtra.ELevelChapterType
enum class ELevelChapterType : uint8_t
{
	NormalChapter                  = 0,
	PoliceChapter                  = 1,
	EliteMonsterGroupChapter       = 2,
	ELevelChapterType_MAX          = 3
};


// Enum ShadowTrackerExtra.EConstructType
enum class EConstructType : uint8_t
{
	EConstructType__ECT_Static     = 0,
	EConstructType__ECT_Dynamic    = 1,
	EConstructType__ECT_BlueprintAttach = 2,
	EConstructType__ECT_GlobalOverride = 3,
	EConstructType__ECT_MAX        = 4
};


// Enum ShadowTrackerExtra.EGameReplayType
enum class EGameReplayType : uint8_t
{
	EGameReplayType__EGameReplayType_None = 0,
	EGameReplayType__EGameReplayType_DeathPlayback = 1,
	EGameReplayType__EGameReplayType_CompletePlayback = 2,
	EGameReplayType__EGameReplayType_ObservingReplay = 3,
	EGameReplayType__EGameReplayType_WonderfulPlayback = 4,
	EGameReplayType__EGameReplayType_MAX = 5
};


// Enum ShadowTrackerExtra.EGPCompareType
enum class EGPCompareType : uint8_t
{
	EGPCompareType__CMP_Equal      = 0,
	EGPCompareType__CMP_Less       = 1,
	EGPCompareType__CMP_LessEqual  = 2,
	EGPCompareType__CMP_Greater    = 3,
	EGPCompareType__CMP_GreaterEqual = 4,
	EGPCompareType__CMP_NotEqual   = 5,
	EGPCompareType__CMP_Regex      = 6,
	EGPCompareType__CMP_Mask       = 7,
	EGPCompareType__CMP_MAX        = 8
};


// Enum ShadowTrackerExtra.EGPSourceType
enum class EGPSourceType : uint8_t
{
	EGPSourceType__SRC_PreviousRegexMatch = 0,
	EGPSourceType__SRC_GpuFamily   = 1,
	EGPSourceType__SRC_GlVersion   = 2,
	EGPSourceType__SRC_OSVersion   = 3,
	EGPSourceType__SRC_DeviceMake  = 4,
	EGPSourceType__SRC_DeviceModel = 5,
	EGPSourceType__SRC_VulkanVersion = 6,
	EGPSourceType__SRC_TotalPhysicalGB = 7,
	EGPSourceType__SRC_ProfileName = 8,
	EGPSourceType__SRC_OpenID      = 9,
	EGPSourceType__SRC_MapName     = 10,
	EGPSourceType__SRC_GameModeName = 11,
	EGPSourceType__SRC_MAX         = 12
};


// Enum ShadowTrackerExtra.EGroupBackpackScheme
enum class EGroupBackpackScheme : uint8_t
{
	NoneScheme                     = 0,
	VehicleScheme                  = 1,
	EGroupBackpackScheme_MAX       = 2
};


// Enum ShadowTrackerExtra.EHardPointManagerState
enum class EHardPointManagerState : uint8_t
{
	EHardPointManagerState__None   = 0,
	EHardPointManagerState__WaitActivate = 1,
	EHardPointManagerState__HardPointActivating = 2,
	EHardPointManagerState__EHardPointManagerState_MAX = 3
};


// Enum ShadowTrackerExtra.EIdeaFenceSelector
enum class EIdeaFenceSelector : uint8_t
{
	EIdeaFenceSelector__None       = 0,
	EIdeaFenceSelector__Use        = 1,
	EIdeaFenceSelector__Use01      = 2,
	EIdeaFenceSelector__Use02      = 3,
	EIdeaFenceSelector__Use03      = 4,
	EIdeaFenceSelector__EIdeaFenceSelector_MAX = 5
};


// Enum ShadowTrackerExtra.EImpactMask
enum class EImpactMask : uint8_t
{
	EImpactMask__EImpactNone       = 0,
	EImpactMask__EImpactEffect     = 1,
	EImpactMask__EImpactAll        = 2,
	EImpactMask__EImpactMask_MAX   = 3
};


// Enum ShadowTrackerExtra.EInteractState
enum class EInteractState : uint8_t
{
	EInteractState__InteractState_None = 0,
	EInteractState__InteractState_Interacting = 1,
	EInteractState__InteractState_Occupied = 2,
	EInteractState__InteractState_MAX = 3
};


// Enum ShadowTrackerExtra.EInterp3Method
enum class EInterp3Method : uint8_t
{
	EInterp3Method__PositionFirst  = 0,
	EInterp3Method__RoationFirst   = 1,
	EInterp3Method__PositionForced = 2,
	EInterp3Method__RoationForced  = 3,
	EInterp3Method__EInterp3Method_MAX = 4
};


// Enum ShadowTrackerExtra.ELobbyBgMatType
enum class ELobbyBgMatType : uint8_t
{
	ELBS                           = 0,
	EMarketAppearance              = 1,
	EMarketParachute               = 2,
	EMarketWeapon                  = 3,
	ESeasonPass                    = 4,
	ELobbyBgMat_Max                = 5,
	ELobbyBgMatType_MAX            = 6
};


// Enum ShadowTrackerExtra.EXTaskSrcType
enum class EXTaskSrcType : uint8_t
{
	EXTaskSrcType__BySelf          = 0,
	EXTaskSrcType__ByTeammate      = 1,
	EXTaskSrcType__EXTaskSrcType_MAX = 2
};


// Enum ShadowTrackerExtra.EXTaskType
enum class EXTaskType : uint8_t
{
	EXTaskType__TaskTypeDefault    = 0,
	EXTaskType__TaskTypeMain       = 1,
	EXTaskType__TaskTypeBranch     = 2,
	EXTaskType__TaskTypeDaily      = 3,
	EXTaskType__TaskTypeBounty     = 4,
	EXTaskType__TaskTypeBattle     = 5,
	EXTaskType__TaskTypeWishing    = 6,
	EXTaskType__TaskTypeLobby      = 7,
	EXTaskType__TaskTypeAward      = 8,
	EXTaskType__TaskTypeMilitary   = 9,
	EXTaskType__EXTaskType_MAX     = 10
};


// Enum ShadowTrackerExtra.FXTaskStateType
enum class EFXTaskStateType : uint8_t
{
	FXTaskStateType__StateNone     = 0,
	FXTaskStateType__StateGot      = 1,
	FXTaskStateType__StateProgress = 2,
	FXTaskStateType__StateDone     = 3,
	FXTaskStateType__StateComplete = 4,
	FXTaskStateType__StateFail     = 5,
	FXTaskStateType__FXTaskStateType_MAX = 6
};


// Enum ShadowTrackerExtra.KilledReason
enum class EKilledReason : uint8_t
{
	KilledReason__None             = 0,
	KilledReason__KillBySun        = 1,
	KilledReason__KillByLeave      = 2,
	KilledReason__KillBySleep      = 3,
	KilledReason__KillByFightingState = 4,
	KilledReason__KilledReason_MAX = 5
};


// Enum ShadowTrackerExtra.EMarkTypeIDClearType
enum class EMarkTypeIDClearType : uint8_t
{
	EMarkTypeIDClearType__ETC_OWNER_ONLY = 0,
	EMarkTypeIDClearType__ETC_TEAMMATE = 1,
	EMarkTypeIDClearType__ETC_Global = 2,
	EMarkTypeIDClearType__ETC_ALL  = 3,
	EMarkTypeIDClearType__ETC_MAX  = 4
};


// Enum ShadowTrackerExtra.EMarkDispatchRange
enum class EMarkDispatchRange : uint8_t
{
	EMarkDispatchRange__EMAMDT_OWNER_ONLY = 0,
	EMarkDispatchRange__EMAMDT_TEAMMATE = 1,
	EMarkDispatchRange__EMAMDT_ENEMIES = 2,
	EMarkDispatchRange__EMAMDT_TEAMMATE_RANGED = 3,
	EMarkDispatchRange__EMAMDT_ENEMIES_RANGED = 4,
	EMarkDispatchRange__EMAMDT_ALL_RANGED = 5,
	EMarkDispatchRange__EMAMDT_ALL = 6,
	EMarkDispatchRange__EMAMDT_MAX = 7
};


// Enum ShadowTrackerExtra.EMarkDispatchActionType
enum class EMarkDispatchActionType : uint8_t
{
	EMarkDispatchActionType__EMAMAT_INSTANT = 0,
	EMarkDispatchActionType__EMAMAT_DELAYED = 1,
	EMarkDispatchActionType__EMAMAT_DELAYED_WITHCALLBACK = 2,
	EMarkDispatchActionType__EMAMAT_BATCH = 3,
	EMarkDispatchActionType__EMAMAT_MAX = 4
};


// Enum ShadowTrackerExtra.EMarkParentWidget
enum class EMarkParentWidget : uint8_t
{
	EMPW_None                      = 0,
	EMPW_MiniMap                   = 1,
	EMPW_EntireMap                 = 2,
	EMPW_MAX                       = 3
};


// Enum ShadowTrackerExtra.EUIMarkState
enum class EUIMarkState : uint8_t
{
	EUMS_None                      = 0,
	EUMS_Show                      = 1,
	EUMS_Hide                      = 2,
	EUMS_MAX                       = 3
};


// Enum ShadowTrackerExtra.EMapWidgetType
enum class EMapWidgetType : uint8_t
{
	EMWT_None                      = 0,
	EMWT_Fighting_MiniMap          = 1,
	EMWT_Fighting_EntireMap        = 2,
	EMWT_Observe_MiniMap           = 3,
	EMWT_Observe_EntireMap         = 4,
	EMWT_MAX                       = 5
};


// Enum ShadowTrackerExtra.EMetorPolygonAreaType
enum class EMetorPolygonAreaType : uint8_t
{
	EMetorPolygonAreaType__PAT_Normal = 0,
	EMetorPolygonAreaType__PAT_OuterBound = 1,
	EMetorPolygonAreaType__PAT_Radiation = 2,
	EMetorPolygonAreaType__PAT_MAX = 3
};


// Enum ShadowTrackerExtra.EMissileState
enum class EMissileState : uint8_t
{
	EMissileState__Ready           = 0,
	EMissileState__Flying          = 1,
	EMissileState__Bomb            = 2,
	EMissileState__EMissileState_MAX = 3
};


// Enum ShadowTrackerExtra.EMobClimbingProxyType
enum class EMobClimbingProxyType : uint8_t
{
	EMobClimbingProxyType__Climbing = 0,
	EMobClimbingProxyType__Striding = 1,
	EMobClimbingProxyType__ClimbWindow = 2,
	EMobClimbingProxyType__EMobClimbingProxyType_MAX = 3
};


// Enum ShadowTrackerExtra.ENoiseSearchType
enum class ENoiseSearchType : uint8_t
{
	ENoiseSearchType__Loudest      = 0,
	ENoiseSearchType__Nearest      = 1,
	ENoiseSearchType__ENoiseSearchType_MAX = 2
};


// Enum ShadowTrackerExtra.ENoiseAttenuationModel
enum class ENoiseAttenuationModel : uint8_t
{
	ENoiseAttenuationModel__LinearSquard = 0,
	ENoiseAttenuationModel__Logarithmic = 1,
	ENoiseAttenuationModel__LogSquard = 2,
	ENoiseAttenuationModel__ENoiseAttenuationModel_MAX = 3
};


// Enum ShadowTrackerExtra.ELogicAreaType
enum class ELogicAreaType : uint8_t
{
	ELogicAreaType__BreakableWall  = 0,
	ELogicAreaType__BreakableHouse = 1,
	ELogicAreaType__ELogicAreaType_MAX = 2
};


// Enum ShadowTrackerExtra.ENetProfileMonitorArg
enum class ENetProfileMonitorArg : uint8_t
{
	ENetProfileMonitorArg__NumClients = 0,
	ENetProfileMonitorArg__OutRate = 1,
	ENetProfileMonitorArg__InRate  = 2,
	ENetProfileMonitorArg__OutLoss = 3,
	ENetProfileMonitorArg__InLoss  = 4,
	ENetProfileMonitorArg__OutSaturation = 5,
	ENetProfileMonitorArg__NumConsideredActors = 6,
	ENetProfileMonitorArg__NumNetWorkActors = 7,
	ENetProfileMonitorArg__FPS     = 8,
	ENetProfileMonitorArg__ENetProfileMonitorArg_MAX = 9
};


// Enum ShadowTrackerExtra.ENetProfileCondition
enum class ENetProfileCondition : uint8_t
{
	ENetProfileCondition__PLANE    = 0,
	ENetProfileCondition__ENetProfileCondition_MAX = 1
};


// Enum ShadowTrackerExtra.EBulletImpactDir
enum class EBulletImpactDir : uint8_t
{
	ImpactNormal                   = 0,
	ImpactShootDir                 = 1,
	EBulletImpactDir_MAX           = 2
};


// Enum ShadowTrackerExtra.ECurrencyType
enum class ECurrencyType : uint8_t
{
	PlayerStateVar                 = 0,
	Item                           = 1,
	ECurrencyType_MAX              = 2
};


// Enum ShadowTrackerExtra.ECreateType
enum class ECreateType : uint8_t
{
	ECreateTypeRefuse              = 0,
	ECreateTypeFree                = 1,
	ECreateTypeAddToPool           = 2,
	ECreateType_Max                = 3
};


// Enum ShadowTrackerExtra.EDisplayPolicy
enum class EDisplayPolicy : uint8_t
{
	EDisplayPolicy__Visibility     = 0,
	EDisplayPolicy__Activity       = 1,
	EDisplayPolicy__EDisplayPolicy_MAX = 2
};


// Enum ShadowTrackerExtra.EPetSlotType
enum class EPetSlotType : uint8_t
{
	EPetSlotType__EPetSlotType_NONE = 0,
	EPetSlotType__EPetSlotType_Body = 1,
	EPetSlotType__EPetSlotType_Suit = 2,
	EPetSlotType__EPetSlotType_Hat = 3,
	EPetSlotType__EPetSlotType_Glasses = 4,
	EPetSlotType__EPetSlotType_Jacket = 5,
	EPetSlotType__EPetSlotType_Bag = 6,
	EPetSlotType__EPetSlotType_Trousers = 7,
	EPetSlotType__EPetSlotType_Shoes = 8,
	EPetSlotType__EPetSlotType_MaxSlotNum = 9,
	EPetSlotType__EPetSlotType_MAX = 10
};


// Enum ShadowTrackerExtra.EPetFallingTimeCnd
enum class EPetFallingTimeCnd : uint8_t
{
	Equal                          = 0,
	MoreThan                       = 1,
	LessThan                       = 2,
	EPetFallingTimeCnd_MAX         = 3
};


// Enum ShadowTrackerExtra.EPetRelevantType
enum class EPetRelevantType : uint8_t
{
	PetRelevant_OnlySelf           = 0,
	PetRelevant_Team               = 1,
	PetRelevant_All                = 2,
	PetRelevant_MAX                = 3
};


// Enum ShadowTrackerExtra.EPawnStateChangeType
enum class EPawnStateChangeType : uint8_t
{
	Enter                          = 0,
	Leave                          = 1,
	EPawnStateChangeType_MAX       = 2
};


// Enum ShadowTrackerExtra.EPetEventType
enum class EPetEventType : uint8_t
{
	PetEventNone                   = 0,
	PlayEmotionEvent               = 1,
	PlayerStateEvent               = 2,
	PetRandomMontageEvent          = 3,
	PlayerPlayEmotionEvent         = 4,
	PlayerWin                      = 5,
	PlayerKillSomeone              = 6,
	PlayerAssistKill               = 7,
	EnemyStep                      = 8,
	EnemyShoot                     = 9,
	AirAttack                      = 10,
	EPetEventType_MAX              = 11
};


// Enum ShadowTrackerExtra.EPetFollowOwnerType
enum class EPetFollowOwnerType : uint8_t
{
	Attach                         = 0,
	Follow                         = 1,
	EPetFollowOwnerType_MAX        = 2
};


// Enum ShadowTrackerExtra.EPVEDeadAttacker
enum class EPVEDeadAttacker : uint8_t
{
	Nothing                        = 0,
	Zombie                         = 1,
	EPVEDeadAttacker_MAX           = 2
};


// Enum ShadowTrackerExtra.EMeleeDamageSubType
enum class EMeleeDamageSubType : uint8_t
{
	Fist                           = 0,
	Cowbar                         = 1,
	Pan                            = 2,
	Machete                        = 3,
	Sickle                         = 4,
	Dagger                         = 5,
	EMeleeDamageSubType_MAX        = 6
};


// Enum ShadowTrackerExtra.EAdditionDamageSubType
enum class EAdditionDamageSubType : uint8_t
{
	AdditionDamageToVehicle        = 0,
	AdditionDamageToZombie         = 1,
	AdditionDamageToDoor           = 2,
	EAdditionDamageSubType_MAX     = 3
};


// Enum ShadowTrackerExtra.EPlayerEquipmentLevel
enum class EPlayerEquipmentLevel : uint8_t
{
	PEL                            = 0,
	PEL01                          = 1,
	PEL02                          = 2,
	PEL_MAX                        = 3
};


// Enum ShadowTrackerExtra.ERespawnPointType
enum class ERespawnPointType : uint8_t
{
	ERespawnPointType__Plane       = 0,
	ERespawnPointType__BornPoint   = 1,
	ERespawnPointType__ERespawnPointType_MAX = 2
};


// Enum ShadowTrackerExtra.EAnimPlayFlag
enum class EAnimPlayFlag : uint8_t
{
	EAnimPlayFlag__None            = 0,
	EAnimPlayFlag__DisableLeftHandIK = 1,
	EAnimPlayFlag__EAnimPlayFlag_MAX = 2
};


// Enum ShadowTrackerExtra.EAirDropType
enum class EAirDropType : uint8_t
{
	EAirDropType__AirDrop_None     = 0,
	EAirDropType__AirDrop_NormalAirDrop = 1,
	EAirDropType__AirDrop_SuperAirDrop = 2,
	EAirDropType__AirDrop_VehicleAirDrop = 3,
	EAirDropType__AirDrop_ZombieAirDrop = 4,
	EAirDropType__AirDrop_MAX      = 5
};


// Enum ShadowTrackerExtra.FSoundType
enum class EFSoundType : uint8_t
{
	FSoundType__ESoundMove         = 0,
	FSoundType__ESoundFire         = 1,
	FSoundType__ESoundVehicle      = 2,
	FSoundType__FSoundType_MAX     = 3
};


// Enum ShadowTrackerExtra.EScopeMeshAnimType
enum class EScopeMeshAnimType : uint8_t
{
	ScopeMeshAnimType_Normal       = 0,
	ScopeMeshAnimType_Translate    = 1,
	ScopeMeshAnimType_Scope        = 2,
	ScopeMeshAnimType_MAX          = 3
};


// Enum ShadowTrackerExtra.EBattleTextType
enum class EBattleTextType : uint8_t
{
	EBattleTextType__EBattleTextType_Fist = 0,
	EBattleTextType__EBattleTextType_BurningBomb = 1,
	EBattleTextType__EBattleTextType_Use = 2,
	EBattleTextType__EBattleTextType_ShotAndExplode = 3,
	EBattleTextType__EBattleTextType_Vehicle = 4,
	EBattleTextType__EBattleTextType_You = 5,
	EBattleTextType__EBattleTextType_YourTeammate = 6,
	EBattleTextType__EBattleTextType_By = 7,
	EBattleTextType__EBattleTextType_HeadShot = 8,
	EBattleTextType__EBattleTextType_PutDown = 9,
	EBattleTextType__EBattleTextType_Kill = 10,
	EBattleTextType__EBattleTextType_Killed = 11,
	EBattleTextType__EBattleTextType_Le = 12,
	EBattleTextType__EBattleTextType_Because = 13,
	EBattleTextType__EBattleTextType_CriticalWounded = 14,
	EBattleTextType__EBattleTextType_HighFallingDown = 15,
	EBattleTextType__EBattleTextType_FallToGround = 16,
	EBattleTextType__EBattleTextType_InPosionArea = 17,
	EBattleTextType__EBattleTextType_TooMuchTime = 18,
	EBattleTextType__EBattleTextType_UnderWeater = 19,
	EBattleTextType__EBattleTextType_Finally = 20,
	EBattleTextType__EBattleTextType_AirAttackHit = 21,
	EBattleTextType__EBattleTextType_AccidentalDamage = 22,
	EBattleTextType__EBattleTextType_Myself = 23,
	EBattleTextType__EBattleTextType_Explosion = 24,
	EBattleTextType__EBattleTextType_PoisonWater = 25,
	EBattleTextType__EBattleTextType_Dot = 26,
	EBattleTextType__EBattleTextType_MAX = 27
};


// Enum ShadowTrackerExtra.EHandlePickUpActionReplicatedDataActionType
enum class EHandlePickUpActionReplicatedDataActionType : uint8_t
{
	EHandlePickUpActionReplicatedDataActionType_None = 0,
	EHandlePickUpActionReplicatedDataActionType_PickUpWeapon = 1,
	EHandlePickUpActionReplicatedDataActionType_PickUpPlayerEquipment = 2,
	EHandlePickUpActionReplicatedDataActionType_PutDownlayerEquipment = 3,
	EHandlePickUpActionReplicatedDataActionType_MAX = 4
};


// Enum ShadowTrackerExtra.EConsumeItemCategory
enum class EConsumeItemCategory : uint8_t
{
	EConsumeItemCategory_None      = 0,
	EConsumeItemCategory_RecoverHealth = 1,
	EConsumeItemCategory_RecoverEnegy = 2,
	EConsumeItemCategory_MAX       = 3
};


// Enum ShadowTrackerExtra.EConsumeItemType
enum class EConsumeItemType : uint8_t
{
	EConsumeItemType_None          = 0,
	EConsumeItemType_Bandage       = 1,
	EConsumeItemType_MedicalBag    = 2,
	EConsumeItemType_MedicalBox    = 3,
	EConsumeItemType_EnegyDrink    = 4,
	EConsumeItemType_PainKillerPills = 5,
	EConsumeItemType_Adrenaline    = 6,
	EConsumeItemType_MedicalBoxFast = 7,
	EConsumeItemType_Antidote      = 8,
	EConsumeItemType_BatteryChip   = 9,
	EConsumeItemType_WarmupBag     = 10,
	EConsumeItemType_RoastedChick  = 11,
	EConsumeItemType_Mushroom      = 12,
	EConsumeItemType_QuickBandage  = 13,
	EConsumeItemType_QuickFirstAid = 14,
	EConsumeItemType_IceDrink      = 15,
	EConsumeItemType_ResistRadiation = 16,
	EConsumeItemType_AddDurability = 17,
	EConsumeItemType_MGodzillaCrystal = 18,
	EConsumeItemType_KingKongCrystal = 19,
	EConsumeItemType_MAX           = 20
};


// Enum ShadowTrackerExtra.EPlayerEquipmentSlotType
enum class EPlayerEquipmentSlotType : uint8_t
{
	EPlayerEquipmentSlotType_None  = 0,
	EPlayerEquipmentSlotType_HeadEquipemtSlot = 1,
	EPlayerEquipmentSlotType_ChestEquipemtSlot = 2,
	EPlayerEquipmentSlotType_JacketEquipemtSlot = 3,
	EPlayerEquipmentSlotType_BackEquipemtSlot = 4,
	EPlayerEquipmentSlotType_LegsEquipemtSlot = 5,
	EPlayerEquipmentSlotType_FeetEquipemtSlot = 6,
	EPlayerEquipmentSlotType_MAX   = 7
};


// Enum ShadowTrackerExtra.EDataTableType
enum class EDataTableType : uint8_t
{
	EDataTableType_None            = 0,
	EDataTableType_PickUpGlobalDataTable = 1,
	EDataTableType_PickUpGlobalIDAndWrapperDataTable = 2,
	EDataTableType_WeaponDataTable = 3,
	EDataTableType_PlayerEquipmentDataTable = 4,
	EDataTableType_WeaponComponentDataTable = 5,
	EDataTableType_ConsumeItemDataTable = 6,
	EDataTableType_AkEventDataTable = 7,
	EDataTableType_MAX             = 8
};


// Enum ShadowTrackerExtra.ESurvivePickUpType
enum class ESurvivePickUpType : uint8_t
{
	SPUT_RifileGun                 = 0,
	SPUT_SubmachineGun             = 1,
	SPUT_SniperGun                 = 2,
	SPUT_Shotgun                   = 3,
	SPUT_Pistol                    = 4,
	SPUT_Helmet                    = 5,
	SPUT_Chest                     = 6,
	SPUT_Scop                      = 7,
	SPUT_Bandage                   = 8,
	SPUT_MedicalBag                = 9,
	SPUT_MedicalBox                = 10,
	SPUT_EnegyDrink                = 11,
	SPUT_PainKillerPills           = 12,
	SPUT_Adrenaline                = 13,
	SPUT_MAX                       = 14
};


// Enum ShadowTrackerExtra.ESurvivePickUpCategory
enum class ESurvivePickUpCategory : uint8_t
{
	SPUC_MainShootWeapon           = 0,
	SPUC_SubShootWeapon            = 1,
	SPUC_MeleWeapon                = 2,
	SPUC_Prop                      = 3,
	SPUC_PlayerEquipment           = 4,
	SPUC_WeaponComponent           = 5,
	SPUC_ConsumeItem               = 6,
	SPUC_Other                     = 7,
	SPUC_MAX                       = 8
};


// Enum ShadowTrackerExtra.EPostEffectBlendType
enum class EPostEffectBlendType : uint8_t
{
	PEBT_ScanBomb                  = 0,
	PEBT_DeadGray                  = 1,
	PEBT_PropOutline               = 2,
	PEBT_MAX                       = 3
};


// Enum ShadowTrackerExtra.EPlayerBodyPartType
enum class EPlayerBodyPartType : uint8_t
{
	PBPT_Head                      = 0,
	PBPT_LeftArm                   = 1,
	PBPT_RightArm                  = 2,
	PBPT_LeftLeg                   = 3,
	PBPT_RightLeg                  = 4,
	PBPT_Body                      = 5,
	PBPT_MAX                       = 6
};


// Enum ShadowTrackerExtra.EWeaponSlot
enum class EWeaponSlot : uint8_t
{
	Primary                        = 0,
	Secondary                      = 1,
	Pistol                         = 2,
	EWeaponSlot_MAX                = 3
};


// Enum ShadowTrackerExtra.EInfectionChgReason
enum class EInfectionChgReason : uint8_t
{
	EInfectionChgReason__None      = 0,
	EInfectionChgReason__SelectChgToZombie = 1,
	EInfectionChgReason__InfectionChgToZombie = 2,
	EInfectionChgReason__ZombieRespawn = 3,
	EInfectionChgReason__HumanChgToRevenger = 4,
	EInfectionChgReason__RoundChgToNormalPlayer = 5,
	EInfectionChgReason__EInfectionChgReason_MAX = 6
};


// Enum ShadowTrackerExtra.EPVEProjectileDamageTiming
enum class EPVEProjectileDamageTiming : uint8_t
{
	EPVEProjectileDamageTiming__DamageWhenExplode = 0,
	EPVEProjectileDamageTiming__DamageWhenImpact = 1,
	EPVEProjectileDamageTiming__EPVEProjectileDamageTiming_MAX = 2
};


// Enum ShadowTrackerExtra.EQuickSignSubType
enum class EQuickSignSubType : uint8_t
{
	EQuickSignSubType__Invalid     = 0,
	EQuickSignSubType__SomebodyCame = 1,
	EQuickSignSubType__AttackPos   = 2,
	EQuickSignSubType__DefencePos  = 3,
	EQuickSignSubType__AssemblePos = 4,
	EQuickSignSubType__NeedAmmo    = 5,
	EQuickSignSubType__NeedAttachment = 6,
	EQuickSignSubType__ComeInVehicle = 7,
	EQuickSignSubType__NeedMedicine = 8,
	EQuickSignSubType__MarkVehicle = 9,
	EQuickSignSubType__MarkOpenDoor = 10,
	EQuickSignSubType__MarkAirDrop = 11,
	EQuickSignSubType__MarkDeadBox = 12,
	EQuickSignSubType__MarkSupply  = 13,
	EQuickSignSubType__MarkPos     = 14,
	EQuickSignSubType__Dangerous   = 15,
	EQuickSignSubType__MarkPosSafeZone = 16,
	EQuickSignSubType__NeedMuzzle  = 17,
	EQuickSignSubType__NeedGrip    = 18,
	EQuickSignSubType__NeedMag     = 19,
	EQuickSignSubType__NeedStock   = 20,
	EQuickSignSubType__NeedScope   = 21,
	EQuickSignSubType__NeedSideScope = 22,
	EQuickSignSubType__NeedWeapon  = 23,
	EQuickSignSubType__NeedHelmet  = 24,
	EQuickSignSubType__NeedArmor   = 25,
	EQuickSignSubType__NeedBackpack = 26,
	EQuickSignSubType__NeedNightVision = 27,
	EQuickSignSubType__ResRoger    = 28,
	EQuickSignSubType__ResComing   = 29,
	EQuickSignSubType__ResIWant    = 30,
	EQuickSignSubType__EQuickSignSubType_MAX = 31
};


// Enum ShadowTrackerExtra.EQuickSignType
enum class EQuickSignType : uint8_t
{
	EQuickSignType__Cancle         = 0,
	EQuickSignType__Attack         = 1,
	EQuickSignType__Defence        = 2,
	EQuickSignType__Assemble       = 3,
	EQuickSignType__NeedAmmo       = 4,
	EQuickSignType__NeedAttachment = 5,
	EQuickSignType__ComeInVehicle  = 6,
	EQuickSignType__NeedMedicine   = 7,
	EQuickSignType__SomebodyCame   = 8,
	EQuickSignType__Attention      = 9,
	EQuickSignType__MarkPos        = 10,
	EQuickSignType__MarkPosSafeZone = 11,
	EQuickSignType__NeedSlot       = 12,
	EQuickSignType__ResRoger       = 13,
	EQuickSignType__ResComing      = 14,
	EQuickSignType__ResIWant       = 15,
	EQuickSignType__EQuickSignType_MAX = 16
};


// Enum ShadowTrackerExtra.EMarkItemType
enum class EMarkItemType : uint8_t
{
	EIT_Hide                       = 0,
	EIT_InScreen                   = 1,
	EIT_OutScreen                  = 2,
	EIT_MAX                        = 3
};


// Enum ShadowTrackerExtra.EWonderfulKeepState
enum class EWonderfulKeepState : uint8_t
{
	EWonderfulKeepState__EWonderfulKeepState_None = 0,
	EWonderfulKeepState__EWonderfulKeepState_WaitFor = 1,
	EWonderfulKeepState__EWonderfulKeepState_Failed = 2,
	EWonderfulKeepState__EWonderfulKeepState_Success = 3,
	EWonderfulKeepState__EWonderfulKeepState_MAX = 4
};


// Enum ShadowTrackerExtra.EWonderfulType
enum class EWonderfulType : uint8_t
{
	EWonderfulType__EWonderfulType_None = 0,
	EWonderfulType__EWonderfulType_MultiKill = 1,
	EWonderfulType__EWonderfulType_MovingVehicleKill = 2,
	EWonderfulType__EWonderfulType_AntiKill = 3,
	EWonderfulType__EWonderfulType_LongDistance = 4,
	EWonderfulType__EWonderfulType_MovingKill = 5,
	EWonderfulType__EWonderfulType_MAX = 6
};


// Enum ShadowTrackerExtra.EWonderfulErrorCode
enum class EWonderfulErrorCode : uint8_t
{
	EWonderfulErrorCode__EWonderfulErrorCode_None = 0,
	EWonderfulErrorCode__EWonderfulErrorCode_FileNameError = 1,
	EWonderfulErrorCode__EWonderfulErrorCode_FileNotExist = 2,
	EWonderfulErrorCode__EWonderfulErrorCode_LoadFileError = 3,
	EWonderfulErrorCode__EWonderfulErrorCode_SerializeError = 4,
	EWonderfulErrorCode__EWonderfulErrorCode_InPlayState = 5,
	EWonderfulErrorCode__EWonderfulErrorCode_NullPtr = 6,
	EWonderfulErrorCode__EWonderfulErrorCode_UncompressError = 7,
	EWonderfulErrorCode__EWonderfulErrorCode_MAX = 8
};


// Enum ShadowTrackerExtra.EDemoType
enum class EDemoType : uint8_t
{
	EDemoType_None                 = 0,
	EDemoType_Server               = 1,
	EDemoType_Client               = 2,
	EDemoType_Wonderful            = 3,
	EDemoType_MAX                  = 4
};


// Enum ShadowTrackerExtra.ERevivalPointState
enum class ERevivalPointState : uint8_t
{
	ERevivalPointState__None       = 0,
	ERevivalPointState__Start      = 1,
	ERevivalPointState__Revivaling = 2,
	ERevivalPointState__RevivalFinish = 3,
	ERevivalPointState__RevivalCD  = 4,
	ERevivalPointState__Destroy    = 5,
	ERevivalPointState__ERevivalPointState_MAX = 6
};


// Enum ShadowTrackerExtra.ERollState
enum class ERollState : uint8_t
{
	None                           = 0,
	Rolling                        = 1,
	Picking                        = 2,
	ERollState_MAX                 = 3
};


// Enum ShadowTrackerExtra.ERuneElemixType
enum class ERuneElemixType : uint8_t
{
	ERuneElemixType__RET_None      = 0,
	ERuneElemixType__RET_Wind      = 1,
	ERuneElemixType__RET_Fire      = 2,
	ERuneElemixType__RET_Ice       = 3,
	ERuneElemixType__RET_MAX       = 4
};


// Enum ShadowTrackerExtra.EShootTimeDataTransType
enum class EShootTimeDataTransType : uint8_t
{
	EShootTimeDataTransType__ESTDT_None = 0,
	EShootTimeDataTransType__ESTDT_DynamicFloor = 1,
	EShootTimeDataTransType__ESTDT_VehicleWeapon = 2,
	EShootTimeDataTransType__ESTDT_MAX = 3
};


// Enum ShadowTrackerExtra.ETraceShootType
enum class ETraceShootType : uint8_t
{
	EST_NONE                       = 0,
	EST_CAMERA                     = 1,
	EST_AIM                        = 2,
	EST_FOLD                       = 3,
	EST_MAX                        = 4
};


// Enum ShadowTrackerExtra.ETargetBodyType
enum class ETargetBodyType : uint8_t
{
	ETargetBodyType__Head1         = 0,
	ETargetBodyType__Head2         = 1,
	ETargetBodyType__Body1         = 2,
	ETargetBodyType__Body2         = 3,
	ETargetBodyType__Body3         = 4,
	ETargetBodyType__ETargetBodyType_MAX = 5
};


// Enum ShadowTrackerExtra.EWeaponVeiryIgnore
enum class EWeaponVeiryIgnore : uint8_t
{
	EWeaponVeiryIgnore__None       = 0,
	EWeaponVeiryIgnore__WVI_HitCheck = 1,
	EWeaponVeiryIgnore__EWeaponVeiryIgnore_MAX = 2
};


// Enum ShadowTrackerExtra.EHelicopterState
enum class EHelicopterState : uint8_t
{
	EHelicopterState_Idle          = 0,
	EHelicopterState_FlyInReady    = 1,
	EHelicopterState_FlyInFight    = 2,
	EHelicopterState_MAX           = 3
};


// Enum ShadowTrackerExtra.ESnowBoardState
enum class ESnowBoardState : uint8_t
{
	ESnowBoardState__ESBS_InLand   = 0,
	ESnowBoardState__ESBS_FLYING0  = 1,
	ESnowBoardState__ESBS_FLYING1  = 2,
	ESnowBoardState__ESBS_FLYING2  = 3,
	ESnowBoardState__ESBS_FLYING3  = 4,
	ESnowBoardState__ESBS_FALLING  = 5,
	ESnowBoardState__ESBS_MAX      = 6
};


// Enum ShadowTrackerExtra.EOverrideAutoPickUp
enum class EOverrideAutoPickUp : uint8_t
{
	EOverrideAutoPickUp__Invalid   = 0,
	EOverrideAutoPickUp__Enable    = 1,
	EOverrideAutoPickUp__Disable   = 2,
	EOverrideAutoPickUp__EOverrideAutoPickUp_MAX = 3
};


// Enum ShadowTrackerExtra.ESkirtPoseType
enum class ESkirtPoseType : uint8_t
{
	ESkirtPose_Lobby               = 0,
	ESkirtPose_Stand               = 1,
	ESkirtPose_Crouch              = 2,
	ESkirtPose_Prone               = 3,
	ESkirtPose_InVehicle           = 4,
	ESkirtPose_Swim                = 5,
	ESkirtPose_Parachute           = 6,
	ESkirtPose_NoSim               = 7,
	ESkirtPose_LobbyCorrectSkMesh  = 8,
	ESkirtPose_MAX                 = 9
};


// Enum ShadowTrackerExtra.ELoopMoveMode
enum class ELoopMoveMode : uint8_t
{
	ELoopMoveMode__ELoopMoveMode_None = 0,
	ELoopMoveMode__ELoopMoveMode_NoLoop = 1,
	ELoopMoveMode__ELoopMoveMode_Forward = 2,
	ELoopMoveMode__ELoopMoveMode_Back = 3,
	ELoopMoveMode__ELoopMoveMode_MAX = 4
};


// Enum ShadowTrackerExtra.ESocialIslandSwingSeatType
enum class ESocialIslandSwingSeatType : uint8_t
{
	SwingSeatCenter                = 0,
	SwingSeatLeft                  = 1,
	SwingSeatRight                 = 2,
	ESocialIslandSwingSeatType_MAX = 3
};


// Enum ShadowTrackerExtra.EIslandDuelResult
enum class EIslandDuelResult : uint8_t
{
	EIslandDuelResult__State_Win   = 0,
	EIslandDuelResult__State_Fail  = 1,
	EIslandDuelResult__State_Tie   = 2,
	EIslandDuelResult__State_MAX   = 3
};


// Enum ShadowTrackerExtra.EIslandDuelReqResponse
enum class EIslandDuelReqResponse : uint8_t
{
	EIslandDuelReqResponse__IDF_Access = 0,
	EIslandDuelReqResponse__IDF_Refuse = 1,
	EIslandDuelReqResponse__IDF_SettingNotAllow = 2,
	EIslandDuelReqResponse__IDS_SelfStateNotAllow = 3,
	EIslandDuelReqResponse__IDS_TargetStateNoAllow = 4,
	EIslandDuelReqResponse__EIslandDuelReqResponse_MAX = 5
};


// Enum ShadowTrackerExtra.EIslandBattleState
enum class EIslandBattleState : uint8_t
{
	EIslandBattleState__BattleState_NONE = 0,
	EIslandBattleState__BattleState_PreEnter = 1,
	EIslandBattleState__BattleState_ENTER = 2,
	EIslandBattleState__BattleState_Ready = 3,
	EIslandBattleState__BattleState_Fight = 4,
	EIslandBattleState__BattleState_Settle = 5,
	EIslandBattleState__BattleState_MAX = 6
};


// Enum ShadowTrackerExtra.EIslandDuelState
enum class EIslandDuelState : uint8_t
{
	EIslandDuelState__State_NONE   = 0,
	EIslandDuelState__State_Ready  = 1,
	EIslandDuelState__State_Fight  = 2,
	EIslandDuelState__State_OutArea = 3,
	EIslandDuelState__State_MAX    = 4
};


// Enum ShadowTrackerExtra.EIslandInteractiveStateType
enum class EIslandInteractiveStateType : uint8_t
{
	EIslandInteractiveStateType__IST_None = 0,
	EIslandInteractiveStateType__IST_Seat = 1,
	EIslandInteractiveStateType__IST_Duel = 2,
	EIslandInteractiveStateType__IST_Emote = 3,
	EIslandInteractiveStateType__IST_Duck = 4,
	EIslandInteractiveStateType__IST_ShootPractice = 5,
	EIslandInteractiveStateType__IST_Battle = 6,
	EIslandInteractiveStateType__IST_Swing = 7,
	EIslandInteractiveStateType__IST_MusicGame = 8,
	EIslandInteractiveStateType__IST_MAX = 9
};


// Enum ShadowTrackerExtra.EST3DNavigationQueryStatus
enum class EST3DNavigationQueryStatus : uint8_t
{
	EST3DNavigationQueryStatus__Unscheduled = 0,
	EST3DNavigationQueryStatus__InProgress = 1,
	EST3DNavigationQueryStatus__Succeeded = 2,
	EST3DNavigationQueryStatus__Failed = 3,
	EST3DNavigationQueryStatus__EST3DNavigationQueryStatus_MAX = 4
};


// Enum ShadowTrackerExtra.EST3DNavigationCookFlag
enum class EST3DNavigationCookFlag : uint8_t
{
	EST3DNavigationCookFlag__CookedJPSPreTable = 0,
	EST3DNavigationCookFlag__CookedJPSForcedNeighbors = 1,
	EST3DNavigationCookFlag__EST3DNavigationCookFlag_MAX = 2
};


// Enum ShadowTrackerExtra.EST3DNavigationGenerationType
enum class EST3DNavigationGenerationType : uint8_t
{
	EST3DNavigationGenerationType__Static = 0,
	EST3DNavigationGenerationType__Dynamic = 1,
	EST3DNavigationGenerationType__EST3DNavigationGenerationType_MAX = 2
};


// Enum ShadowTrackerExtra.EST3DNavigationSearchAlgorithm
enum class EST3DNavigationSearchAlgorithm : uint8_t
{
	EST3DNavigationSearchAlgorithm__AStar = 0,
	EST3DNavigationSearchAlgorithm__JPS = 1,
	EST3DNavigationSearchAlgorithm__JPSPlus = 2,
	EST3DNavigationSearchAlgorithm__EST3DNavigationSearchAlgorithm_MAX = 3
};


// Enum ShadowTrackerExtra.EST3DNavigationLocProjectStrategy
enum class EST3DNavigationLocProjectStrategy : uint8_t
{
	EST3DNavigationLocProjectStrategy__AdjustLocByMoveUp = 0,
	EST3DNavigationLocProjectStrategy__EST3DNavigationLocProjectStrategy_MAX = 1
};


// Enum ShadowTrackerExtra.EST3DNavigationPathfindingPartialStrategy
enum class EST3DNavigationPathfindingPartialStrategy : uint8_t
{
	EST3DNavigationPathfindingPartialStrategy__AdjustTargetByMoveUp = 0,
	EST3DNavigationPathfindingPartialStrategy__EST3DNavigationPathfindingPartialStrategy_MAX = 1
};


// Enum ShadowTrackerExtra.EAnimalState
enum class EAnimalState : uint8_t
{
	EAnimalState__Idle             = 0,
	EAnimalState__Idle_Arder       = 1,
	EAnimalState__Walk             = 2,
	EAnimalState__Trot             = 3,
	EAnimalState__Run              = 4,
	EAnimalState__Jump             = 5,
	EAnimalState__Watch            = 6,
	EAnimalState__Dead             = 7,
	EAnimalState__Scare            = 8,
	EAnimalState__Fighting         = 9,
	EAnimalState__Fear             = 10,
	EAnimalState__Cute             = 11,
	EAnimalState__Max              = 12
};


// Enum ShadowTrackerExtra.EAnimalType
enum class EAnimalType : uint8_t
{
	EAnimalType__NONE              = 0,
	EAnimalType__CHICKEN           = 1,
	EAnimalType__DEER              = 2,
	EAnimalType__ROE_DEER          = 3,
	EAnimalType__RABBIT            = 4,
	EAnimalType__GOBLIN            = 5,
	EAnimalType__ICE               = 6,
	EAnimalType__EAnimalType_MAX   = 7
};


// Enum ShadowTrackerExtra.EBuffTargetSourceType
enum class EBuffTargetSourceType : uint8_t
{
	EBuffTargetSourceType__Self    = 0,
	EBuffTargetSourceType__PrevActionSet = 1,
	EBuffTargetSourceType__AreaOfTeammate = 2,
	EBuffTargetSourceType__AreaOfMonster = 3,
	EBuffTargetSourceType__EBuffTargetSourceType_MAX = 4
};


// Enum ShadowTrackerExtra.EHitFilterType
enum class EHitFilterType : uint8_t
{
	EHitFilterType__EFilterByGun   = 0,
	EHitFilterType__EFilterByBullet = 1,
	EHitFilterType__EHitFilterType_MAX = 2
};


// Enum ShadowTrackerExtra.EBuffDotValueType
enum class EBuffDotValueType : uint8_t
{
	EBuffDotValueType__BurningDamage = 0,
	EBuffDotValueType__ShootWeaponDamage = 1,
	EBuffDotValueType__AddHealth   = 2,
	EBuffDotValueType__AddBulletNum = 3,
	EBuffDotValueType__AddArmor    = 4,
	EBuffDotValueType__AddHelmet   = 5,
	EBuffDotValueType__PoisonFogDamage = 6,
	EBuffDotValueType__AddEnergy   = 7,
	EBuffDotValueType__AddWeaponDurability = 8,
	EBuffDotValueType__DotDamage   = 9,
	EBuffDotValueType__EBuffDotValueType_MAX = 10
};


// Enum ShadowTrackerExtra.EBuffSenseTargetState
enum class EBuffSenseTargetState : uint8_t
{
	EBuffSenseTargetState__Sensing = 0,
	EBuffSenseTargetState__HasEnemy = 1,
	EBuffSenseTargetState__WaitSense = 2,
	EBuffSenseTargetState__EBuffSenseTargetState_MAX = 3
};


// Enum ShadowTrackerExtra.EBuffMofifyDurationType
enum class EBuffMofifyDurationType : uint8_t
{
	EBuffMofifyDurationType__RefCauserDistance = 0,
	EBuffMofifyDurationType__RefMonsterType = 1,
	EBuffMofifyDurationType__RefOneAndTwo = 2,
	EBuffMofifyDurationType__EBuffMofifyDurationType_MAX = 3
};


// Enum ShadowTrackerExtra.EBuffAirDropShowType
enum class EBuffAirDropShowType : uint8_t
{
	EBuffAirDropShowType__ExceptNone = 0,
	EBuffAirDropShowType__ExceptSelfOpened = 1,
	EBuffAirDropShowType__ExceptTeamOpened = 2,
	EBuffAirDropShowType__EBuffAirDropShowType_MAX = 3
};


// Enum ShadowTrackerExtra.EEffectSpreadState
enum class EEffectSpreadState : uint8_t
{
	EEffectSpreadState__ESS_InitialTrace = 0,
	EEffectSpreadState__ESS_InitialProcess = 1,
	EEffectSpreadState__ESS_Spreading = 2,
	EEffectSpreadState__ESS_SpreadDone = 3,
	EEffectSpreadState__ESS_Ending = 4,
	EEffectSpreadState__ESS_MAX    = 5
};


// Enum ShadowTrackerExtra.EBuffHitFaceType
enum class EBuffHitFaceType : uint8_t
{
	EBuffHitFaceType__All          = 0,
	EBuffHitFaceType__Forward      = 1,
	EBuffHitFaceType__Back         = 2,
	EBuffHitFaceType__EBuffHitFaceType_MAX = 3
};


// Enum ShadowTrackerExtra.EBuffBeHitSpaceType
enum class EBuffBeHitSpaceType : uint8_t
{
	EBuffBeHitSpaceType__All       = 0,
	EBuffBeHitSpaceType__Stand     = 1,
	EBuffBeHitSpaceType__Air       = 2,
	EBuffBeHitSpaceType__EBuffBeHitSpaceType_MAX = 3
};


// Enum ShadowTrackerExtra.EBuffKeepInStateType
enum class EBuffKeepInStateType : uint8_t
{
	EBuffKeepInStateType__MinUnion = 0,
	EBuffKeepInStateType__ContainOne = 1,
	EBuffKeepInStateType__EBuffKeepInStateType_MAX = 2
};


// Enum ShadowTrackerExtra.EnumPoisonFogStage
enum class EnumPoisonFogStage : uint8_t
{
	EnumPoisonFogStage__None       = 0,
	EnumPoisonFogStage__Stage_One  = 1,
	EnumPoisonFogStage__Stage_Two  = 2,
	EnumPoisonFogStage__Stage_Three = 3,
	EnumPoisonFogStage__EnumPoisonFogStage_MAX = 4
};


// Enum ShadowTrackerExtra.ECustomMovmentMode
enum class ECustomMovmentMode : uint8_t
{
	CUSTOM_MOVE_None               = 0,
	CUSTOM_MOVE_CrowdMove          = 1,
	CUSTOM_MOVE_Shovel             = 2,
	CUSTOM_MOVE_Max                = 3
};


// Enum ShadowTrackerExtra.EPlayShovelSoundType
enum class EPlayShovelSoundType : uint8_t
{
	Shovel_Enter                   = 0,
	Shovel_Exit                    = 1,
	Shovel_Interrupt               = 2,
	Shovel_MAX                     = 3
};


// Enum ShadowTrackerExtra.EClothAnimBPType
enum class EClothAnimBPType : uint8_t
{
	EClothAnimBPType__EClothAnimBP_None = 0,
	EClothAnimBPType__EClothAnimBP_Lobby = 1,
	EClothAnimBPType__EClothAnimBP_Max = 2
};


// Enum ShadowTrackerExtra.ESTCrowdSimulationState
enum class ESTCrowdSimulationState : uint8_t
{
	ESTCrowdSimulationState__Enabled = 0,
	ESTCrowdSimulationState__ObstacleOnly = 1,
	ESTCrowdSimulationState__Disabled = 2,
	ESTCrowdSimulationState__ESTCrowdSimulationState_MAX = 3
};


// Enum ShadowTrackerExtra.EActorCacheID
enum class EActorCacheID : uint8_t
{
	ACID_Bullet                    = 0,
	ACID_BulletImpactEffect        = 1,
	ACID_MAX                       = 2
};


// Enum ShadowTrackerExtra.ESTEScopeState
enum class ESTEScopeState : uint8_t
{
	ScopeOut                       = 0,
	ScopeIn                        = 1,
	ESTEScopeState_MAX             = 2
};


// Enum ShadowTrackerExtra.EReleaseToFireType
enum class EReleaseToFireType : uint8_t
{
	EReleaseToFireType__RELEASEFIRE_NONE = 0,
	EReleaseToFireType__RELEASEFIRE_SHOTGUN = 1,
	EReleaseToFireType__RELEASEFIRE_SNIPER = 2,
	EReleaseToFireType__RELEASEFIRE_BRUST = 3,
	EReleaseToFireType__RELEASEFIRE_MAX = 4
};


// Enum ShadowTrackerExtra.ShootWeaponAnimType
enum class EShootWeaponAnimType : uint8_t
{
	SWAT_Shoot                     = 0,
	SWAT_NoneShoot                 = 1,
	SWAT_Reload                    = 2,
	SWAT_IdleToNoneIdle            = 3,
	SWAT_MAX                       = 4
};


// Enum ShadowTrackerExtra.ESTEWeaponHoldType
enum class ESTEWeaponHoldType : uint8_t
{
	ESTEWeaponHoldType__Hand       = 0,
	ESTEWeaponHoldType__Rifle      = 1,
	ESTEWeaponHoldType__Pistol     = 2,
	ESTEWeaponHoldType__Melee      = 3,
	ESTEWeaponHoldType__ESTEWeaponHoldType_MAX = 4
};


// Enum ShadowTrackerExtra.EAirborne2
enum class EAirborne2 : uint8_t
{
	Airborne                       = 0,
	FreeFall                       = 1,
	Opening                        = 2,
	Landing                        = 3,
	EAirborne2_MAX                 = 4
};


// Enum ShadowTrackerExtra.EAnimBPType
enum class EAnimBPType : uint8_t
{
	EAnimBPType__EAnimBP_None      = 0,
	EAnimBPType__EAnimBP_Vehicle   = 1,
	EAnimBPType__EAnimBP_TPP       = 2,
	EAnimBPType__EAnimBP_FPP       = 3,
	EAnimBPType__EAnimBP_Max       = 4
};


// Enum ShadowTrackerExtra.EMainCharMontagePlayType
enum class EMainCharMontagePlayType : uint8_t
{
	EMainCharMontagePlay_All       = 0,
	EMainCharMontagePlay_TPP       = 1,
	EMainCharMontagePlay_FPP       = 2,
	EMainCharMontagePlay_TPPVeh    = 3,
	EMainCharMontagePlay_FPPVeh    = 4,
	EMainCharMontagePlay_MAX       = 5
};


// Enum ShadowTrackerExtra.EPlayEmoteSubState
enum class EPlayEmoteSubState : uint8_t
{
	EPlayEmoteSubState_None        = 0,
	EPlayEmoteSubState_RealEmote   = 1,
	EPlayEmoteSubState_ChangeWearing = 2,
	EPlayEmoteSubState_MAX         = 3
};


// Enum ShadowTrackerExtra.ECustomMoveModeType
enum class ECustomMoveModeType : uint8_t
{
	ECustomMoveMode_None           = 0,
	ECustomMoveMode_Hang           = 1,
	ECustomMoveMode_Vault          = 2,
	ECustomMoveMode_Shovel         = 3,
	ECustomMoveMode_SkillAttach    = 4,
	ECustomMoveMode_Max            = 5
};


// Enum ShadowTrackerExtra.EPlayerHurtAnimType
enum class EPlayerHurtAnimType : uint8_t
{
	EPlayerHurtAnim_None           = 0,
	EPlayerHurtAnim_Point          = 1,
	EPlayerHurtAnim_Melee          = 2,
	EPlayerHurtAnim_Max            = 3
};


// Enum ShadowTrackerExtra.EBuffSkillSpellerType
enum class EBuffSkillSpellerType : uint8_t
{
	OnSelf                         = 0,
	OnTarget                       = 1,
	EBuffSkillSpellerType_MAX      = 2
};


// Enum ShadowTrackerExtra.EBuffSpellerSourceType
enum class EBuffSpellerSourceType : uint8_t
{
	SourceNone                     = 0,
	SourceEvent                    = 1,
	EBuffSpellerSourceType_MAX     = 2
};


// Enum ShadowTrackerExtra.EBuffApplierCondition
enum class EBuffApplierCondition : uint8_t
{
	BuffAppConditio_Ignore         = 0,
	BuffAppCondition_IsZombie      = 1,
	BuffAppCondition_InSight       = 2,
	BuffAppCondition_InnerRange    = 3,
	BuffAppConditio_Default        = 4,
	EBuffApplierCondition_MAX      = 5
};


// Enum ShadowTrackerExtra.EBodyPosition
enum class EBodyPosition : uint8_t
{
	EBodyPosition__Non             = 0,
	EBodyPosition__BodyHead        = 1,
	EBodyPosition__BodyBody        = 2,
	EBodyPosition__BodyFoot        = 3,
	EBodyPosition__BodyTPPSpringArm = 4,
	EBodyPosition__BodyTPPCamera   = 5,
	EBodyPosition__EBodyPosition_MAX = 6
};


// Enum ShadowTrackerExtra.EGameMap
enum class EGameMap : uint8_t
{
	NoMap                          = 0,
	SurviveRoot                    = 1,
	SurviveTestRoot                = 2,
	SurviveRCity                   = 3,
	EGameMap_MAX                   = 4
};


// Enum ShadowTrackerExtra.EInfectionAnimBPType
enum class EInfectionAnimBPType : uint8_t
{
	EInfectionAnimBPType__EInfectionAnimBP_None = 0,
	EInfectionAnimBPType__EInfectionAnimBP_TPP = 1,
	EInfectionAnimBPType__EInfectionAnimBP_FPP = 2,
	EInfectionAnimBPType__EInfectionAnimBP_Lobby = 3,
	EInfectionAnimBPType__EInfectionAnimBP_Max = 4
};


// Enum ShadowTrackerExtra.EPlayerOperation
enum class EPlayerOperation : uint8_t
{
	EPlayerOperation__None         = 0,
	EPlayerOperation__Parachute    = 1,
	EPlayerOperation__Shooting     = 2,
	EPlayerOperation__Driving      = 3,
	EPlayerOperation__EPlayerOperation_MAX = 4
};


// Enum ShadowTrackerExtra.EMapType
enum class EMapType : uint8_t
{
	ENTIREMAP                      = 0,
	MINIMAP                        = 1,
	EMapType_MAX                   = 2
};


// Enum ShadowTrackerExtra.EMonsterFuncType
enum class EMonsterFuncType : uint8_t
{
	EMonsterFuncType__AutoExit     = 0,
	EMonsterFuncType__BigBody      = 1,
	EMonsterFuncType__MaxFuncType  = 2,
	EMonsterFuncType__EMonsterFuncType_MAX = 3
};


// Enum ShadowTrackerExtra.ENewBuffApplierCondition
enum class ENewBuffApplierCondition : uint8_t
{
	NewBuffAppCondition_IsZombie   = 0,
	NewBuffAppCondition_InSight    = 1,
	NewBuffAppCondition_InnerRange = 2,
	NewBuffAppConditio_Default     = 3,
	ENewBuffApplierCondition_MAX   = 4
};


// Enum ShadowTrackerExtra.EVehicleControlType
enum class EVehicleControlType : uint8_t
{
	EVCType_Buttons                = 0,
	EVCType_SingleJoystick         = 1,
	EVCType_FullJoystick           = 2,
	EVCType_MAX                    = 3
};


// Enum ShadowTrackerExtra.EVirtualJoystickState
enum class EVirtualJoystickState : uint8_t
{
	EVJS_None                      = 0,
	EVJS_Left                      = 1,
	EVJS_Right                     = 2,
	EVJS_MAX                       = 3
};


// Enum ShadowTrackerExtra.EApplyStatus
enum class EApplyStatus : uint8_t
{
	REVERT                         = 0,
	NO_APPLY                       = 1,
	Apply                          = 2,
	EApplyStatus_MAX               = 3
};


// Enum ShadowTrackerExtra.ELoadMode
enum class ELoadMode : uint8_t
{
	LOW_LOAD                       = 0,
	MEDIUM_LOAD                    = 1,
	HIGH_LOAD                      = 2,
	ELoadMode_MAX                  = 3
};


// Enum ShadowTrackerExtra.EMobWalkType
enum class EMobWalkType : uint8_t
{
	EMobWalkType__Normal           = 0,
	EMobWalkType__IdleWalk         = 1,
	EMobWalkType__AttackWalk       = 2,
	EMobWalkType__SprintRun        = 3,
	EMobWalkType__Sideways         = 4,
	EMobWalkType__MaxSpeed         = 5,
	EMobWalkType__EMobWalkType_MAX = 6
};


// Enum ShadowTrackerExtra.EMonsterType
enum class EMonsterType : uint8_t
{
	EMonsterType__EMonsterType_All = 0,
	EMonsterType__EMonsterType_Normal = 1,
	EMonsterType__EMonsterType_Elite = 2,
	EMonsterType__EMonsterType_Boss = 3,
	EMonsterType__EMonsterType_BigBoss = 4,
	EMonsterType__EMonsterType_Behemoth = 5,
	EMonsterType__EMonsterType_MAX = 6
};


// Enum ShadowTrackerExtra.EMonsterAnimGroupMask
enum class EMonsterAnimGroupMask : uint8_t
{
	EMonsterAnimGroupMask__EMonsterAnimGroupMask_Null = 0,
	EMonsterAnimGroupMask__EMonsterAnimGroupMask_Base = 1,
	EMonsterAnimGroupMask__EMonsterAnimGroupMask_Child = 2,
	EMonsterAnimGroupMask__EMonsterAnimGroupMask_MAX = 3
};


// Enum ShadowTrackerExtra.ENetRelevantType
enum class ENetRelevantType : uint8_t
{
	ENetRelevantType_All           = 0,
	ENetRelevantType_Teammates     = 1,
	ENetRelevantType_OwnerOnly     = 2,
	ENetRelevantType_None          = 3,
	ENetRelevantType_Max           = 4
};


// Enum ShadowTrackerExtra.SnowManStatus
enum class ESnowManStatus : uint8_t
{
	SnowManStatus__Born            = 0,
	SnowManStatus__Broken          = 1,
	SnowManStatus__Dead            = 2,
	SnowManStatus__SnowManStatus_MAX = 3
};


// Enum ShadowTrackerExtra.EVehicleDriveTankControlModel
enum class EVehicleDriveTankControlModel : uint8_t
{
	EVehicleDriveTankControlModel__STANDARD = 0,
	EVehicleDriveTankControlModel__SPECIAL = 1,
	EVehicleDriveTankControlModel__EVehicleDriveTankControlModel_MAX = 2
};


// Enum ShadowTrackerExtra.EVehicleAIAvoidanceMode
enum class EVehicleAIAvoidanceMode : uint8_t
{
	EVehicleAIAvoidanceMode__Off   = 0,
	EVehicleAIAvoidanceMode__SingleTrace = 1,
	EVehicleAIAvoidanceMode__MultiTrace = 2,
	EVehicleAIAvoidanceMode__EVehicleAIAvoidanceMode_MAX = 3
};


// Enum ShadowTrackerExtra.ESpawnType
enum class ESpawnType : uint8_t
{
	ESpawnType__Single             = 0,
	ESpawnType__ContinuousOnTimer  = 1,
	ESpawnType__ContinuousOnDeath  = 2,
	ESpawnType__ESpawnType_MAX     = 3
};


// Enum ShadowTrackerExtra.ESyncBuildState
enum class ESyncBuildState : uint8_t
{
	ESyncBuildState__SyncBuild_None = 0,
	ESyncBuildState__SyncBuild_Building = 1,
	ESyncBuildState__SyncBuild_Finish = 2,
	ESyncBuildState__SyncBuild_MAX = 3
};


// Enum ShadowTrackerExtra.EVehAnimAssetType
enum class EVehAnimAssetType : uint8_t
{
	EVehAssetType_Sequence         = 0,
	EVehAssetType_BlendSpace       = 1,
	EVehAssetType_Max              = 2
};


// Enum ShadowTrackerExtra.EHiarAnimBPType
enum class EHiarAnimBPType : uint8_t
{
	EHiarAnimBPType__EHairAnimBP_None = 0,
	EHiarAnimBPType__EHairAnimBP_Lobby = 1,
	EHiarAnimBPType__EHairAnimBP_Max = 2
};


// Enum ShadowTrackerExtra.EPlatformDeviceLevel
enum class EPlatformDeviceLevel : uint8_t
{
	PlatformDeviceLevel_Low        = 0,
	PlatformDeviceLevel_Middle     = 1,
	PlatformDeviceLevel_Hight      = 2,
	PlatformDeviceLevel_None       = 3,
	PlatformDeviceLevel_MAX        = 4
};


// Enum ShadowTrackerExtra.ESurfBoardState
enum class ESurfBoardState : uint8_t
{
	ESurfBoardState__ESBS_InWater  = 0,
	ESurfBoardState__ESBS_FLYING0  = 1,
	ESurfBoardState__ESBS_FLYING1  = 2,
	ESurfBoardState__ESBS_FLYING2  = 3,
	ESurfBoardState__ESBS_FALLING  = 4,
	ESurfBoardState__ESBS_MAX      = 5
};


// Enum ShadowTrackerExtra.ETextVertPos
enum class ETextVertPos : uint8_t
{
	ETextVertPos__Top              = 0,
	ETextVertPos__Center           = 1,
	ETextVertPos__Bottom           = 2,
	ETextVertPos__MAX              = 3
};


// Enum ShadowTrackerExtra.ETextHorzPos
enum class ETextHorzPos : uint8_t
{
	ETextHorzPos__Left             = 0,
	ETextHorzPos__Center           = 1,
	ETextHorzPos__Right            = 2,
	ETextHorzPos__MAX              = 3
};


// Enum ShadowTrackerExtra.ECharOperationType
enum class ECharOperationType : uint8_t
{
	OpMove                         = 0,
	OpSprint                       = 1,
	OpJump                         = 2,
	OpInvalidEnum                  = 3,
	ECharOperationType_MAX         = 4
};


// Enum ShadowTrackerExtra.EOperationRunResult
enum class EOperationRunResult : uint8_t
{
	OpRunning                      = 0,
	OpSuccess                      = 1,
	OpAutoFinish                   = 2,
	OpFail                         = 3,
	OpNotStarted                   = 4,
	EOperationRunResult_MAX        = 5
};


// Enum ShadowTrackerExtra.ETaskTeamActionConditionType
enum class ETaskTeamActionConditionType : uint8_t
{
	ETTACT_SameArea                = 0,
	ETTACT_SameEmote               = 1,
	ETTACT_SameEmoteInSameTime     = 2,
	ETTACT_SameEmoteInSameTimeAndArea = 3,
	ETTACT_MAX                     = 4
};


// Enum ShadowTrackerExtra.ETaskActionType
enum class ETaskActionType : uint8_t
{
	ETAT_Common                    = 0,
	ETAT_CollectItem               = 1,
	ETAT_RedoCollectItem           = 2,
	ETAT_KillPlayer                = 3,
	ETAT_MAX                       = 4
};


// Enum ShadowTrackerExtra.ETaskEventType
enum class ETaskEventType : uint8_t
{
	ETET_TakeDamage                = 0,
	ETET_KillPlayer                = 1,
	ETET_TouchDown                 = 2,
	ETET_DoEmote                   = 3,
	ETET_EnterArea                 = 4,
	ETET_PickupItem                = 5,
	ETET_DropItem                  = 6,
	ETET_MAX                       = 7
};


// Enum ShadowTrackerExtra.ETaskTriggerAreaType
enum class ETaskTriggerAreaType : uint8_t
{
	ETTAT_City_Unknown             = 0,
	ETTAT_City_P                   = 1,
	ETTAT_MilitaryBase             = 2,
	ETTAT_School                   = 3,
	ETTAT_StMartin                 = 4,
	ETTAT_City_Ebo                 = 5,
	ETTAT_City_Lion                = 6,
	ETTAT_City_River               = 7,
	ETTAT_Quarry                   = 8,
	ETTAT_Shami                    = 9,
	ETTAT_MAX                      = 10
};


// Enum ShadowTrackerExtra.ETaskTriggerItemType
enum class ETaskTriggerItemType : uint8_t
{
	ETTIT_DoEmote                  = 0,
	ETTIT_DeathBox                 = 1,
	ETTIT_PicnicMat                = 2,
	ETTIT_MAX                      = 3
};


// Enum ShadowTrackerExtra.ETaskSubType
enum class ETaskSubType : uint8_t
{
	ETST_Specific_area_kill_task   = 0,
	ETST_Dancing_around_box_task   = 1,
	ETST_Dancing_in_area_task      = 2,
	ETST_Dancing_in_position_task  = 3,
	ETST_MAX                       = 4
};


// Enum ShadowTrackerExtra.ETaskType
enum class ETaskType : uint8_t
{
	ETT_Common                     = 0,
	ETT_PureCollection             = 1,
	ETT_MAX                        = 2
};


// Enum ShadowTrackerExtra.ECustomTickRoleType
enum class ECustomTickRoleType : uint8_t
{
	ECustomTickRoleType__ECTR_All  = 0,
	ECustomTickRoleType__ECTR_Simulated = 1,
	ECustomTickRoleType__ECTR_Autonomous = 2,
	ECustomTickRoleType__ECTR_Authority = 3,
	ECustomTickRoleType__ECTR_SimulatedAndAutonomous = 4,
	ECustomTickRoleType__ECTR_SimulatedAndAuthority = 5,
	ECustomTickRoleType__ECTR_AutonomousAndAuthority = 6,
	ECustomTickRoleType__ECTR_MAX  = 7
};


// Enum ShadowTrackerExtra.ECustomTickType
enum class ECustomTickType : uint8_t
{
	ECustomTickType__ComponentTick = 0,
	ECustomTickType__OwnerTick     = 1,
	ECustomTickType__ECustomTickType_MAX = 2
};


// Enum ShadowTrackerExtra.ETimeLineCheckResult
enum class ETimeLineCheckResult : uint8_t
{
	TLCR_NoCheck                   = 0,
	TLCR_OK                        = 1,
	TLCR_ERR_UP                    = 2,
	TLCR_ERR_DN                    = 3,
	TLCR_MAX                       = 4
};


// Enum ShadowTrackerExtra.ETimeLineSyncState
enum class ETimeLineSyncState : uint8_t
{
	TLSS_None                      = 0,
	TLSS_Reliable                  = 1,
	TLSS_UnReliable                = 2,
	TLSS_MAX                       = 3
};


// Enum ShadowTrackerExtra.ETrailMarkType
enum class ETrailMarkType : uint8_t
{
	ETrailMarkType__Normal         = 0,
	ETrailMarkType__Slipping       = 1,
	ETrailMarkType__Broken         = 2,
	ETrailMarkType__ETrailMarkType_MAX = 3
};


// Enum ShadowTrackerExtra.ESpawnItemFunction
enum class ESpawnItemFunction : uint8_t
{
	ESpawnItemFunction_GenerateMonster = 0,
	ESpawnItemFunction_GeneratePickup = 1,
	ESpawnItemFunction_MAX         = 2
};


// Enum ShadowTrackerExtra.EExpressType
enum class EExpressType : uint8_t
{
	EExpressType_Invalid           = 0,
	EExpressType_Werewolf          = 1,
	EExpressType_Drone             = 2,
	EExpressType_MAX               = 3
};


// Enum ShadowTrackerExtra.EDrivingCheckPointState
enum class EDrivingCheckPointState : uint8_t
{
	DCPS_Invalid                   = 0,
	DCPS_Unpass                    = 1,
	DCPS_Pass                      = 2,
	DCPS_MAX                       = 3
};


// Enum ShadowTrackerExtra.ETagVolumeWorkableNetRole
enum class ETagVolumeWorkableNetRole : uint8_t
{
	ETagVolumeWorkableNetRole__NR_DSOnly = 0,
	ETagVolumeWorkableNetRole__NR_ClientOnly = 1,
	ETagVolumeWorkableNetRole__NR_Both = 2,
	ETagVolumeWorkableNetRole__NR_MAX = 3
};


// Enum ShadowTrackerExtra.ETagVolumeSubType
enum class ETagVolumeSubType : uint8_t
{
	ETagVolumeSubType__ST_City     = 0,
	ETagVolumeSubType__ST_Unknown  = 1,
	ETagVolumeSubType__ST_Invalid  = 2,
	ETagVolumeSubType__ST_MAX      = 3
};


// Enum ShadowTrackerExtra.EInfectionJumpPhase
enum class EInfectionJumpPhase : uint8_t
{
	EEInfectionJumpPhase_PreJump   = 0,
	EEInfectionJumpPhase_FallLoop  = 1,
	EEInfectionJumpPhase_Land      = 2,
	EEInfectionJumpPhase_LandHard  = 3,
	EEInfectionJumpPhase_Max       = 4
};


// Enum ShadowTrackerExtra.EInfectionJumpType
enum class EInfectionJumpType : uint8_t
{
	EInfectionJump_InPlace         = 0,
	EInfectionJump_Forward         = 1,
	EInfectionJump_Max             = 2
};


// Enum ShadowTrackerExtra.EInfectionAnimType
enum class EInfectionAnimType : uint8_t
{
	EInfectionAnim_Move            = 0,
	EInfectionAnim_Melee           = 1,
	EInfectionAnim_Hurt            = 2,
	EInfectionAnim_Dead            = 3,
	EInfectionAnim_Turn_L          = 4,
	EInfectionAnim_Turn_R          = 5,
	EInfectionAnim_OpenDoor        = 6,
	EInfectionAnim_ToCrouch        = 7,
	EInfectionAnim_ToStand         = 8,
	EInfectionAnim_Max             = 9
};


// Enum ShadowTrackerExtra.EInfectionPoseType
enum class EInfectionPoseType : uint8_t
{
	EInfectionPose_Stand           = 0,
	EInfectionPose_Crouch          = 1,
	EInfectionPose_Max             = 2
};


// Enum ShadowTrackerExtra.EInfectionAnimListType
enum class EInfectionAnimListType : uint8_t
{
	EInfectionAnimList_TPP         = 0,
	EInfectionAnimList_FPP         = 1,
	EInfectionAnimList_Max         = 2
};


// Enum ShadowTrackerExtra.EVehicleWeaponBoardDataType
enum class EVehicleWeaponBoardDataType : uint8_t
{
	EVehicleWeaponBoardDataType__EVehicleWeaponBoardDataType_None = 0,
	EVehicleWeaponBoardDataType__EVehicleWeaponBoardDataType_MuzzlePos = 1,
	EVehicleWeaponBoardDataType__EVehicleWeaponBoardDataType_MAX = 2
};


// Enum ShadowTrackerExtra.ECarryBackDirection
enum class ECarryBackDirection : uint8_t
{
	ECarryBackDirection__ECarryBackDirection_NONE = 0,
	ECarryBackDirection__ECarryBackDirection_Front = 1,
	ECarryBackDirection__ECarryBackDirection_Back = 2,
	ECarryBackDirection__ECarryBackDirection_Left = 3,
	ECarryBackDirection__ECarryBackDirection_Right = 4,
	ECarryBackDirection__ECarryBackDirection_MAX = 5
};


// Enum ShadowTrackerExtra.ECarryBackSkillActionType
enum class ECarryBackSkillActionType : uint8_t
{
	ECarryBackSkillActionType__ECBSAT_START = 0,
	ECarryBackSkillActionType__ECBSAT_CARRYBACK = 1,
	ECarryBackSkillActionType__ECBSAT_END = 2,
	ECarryBackSkillActionType__ECBSAT_FAILED = 3,
	ECarryBackSkillActionType__ECBSAT_NONE = 4,
	ECarryBackSkillActionType__ECBSAT_MAX = 5
};


// Enum ShadowTrackerExtra.EBSSkillActionType
enum class EBSSkillActionType : uint8_t
{
	EBSSAT_START                   = 0,
	EBSSAT_PLACE                   = 1,
	EBSSAT_END                     = 2,
	EBSSAT_NONE                    = 3,
	EBSSAT_MAX                     = 4
};


// Enum ShadowTrackerExtra.ESkillActionFireType
enum class ESkillActionFireType : uint8_t
{
	AFT_STOP                       = 0,
	AFT_START                      = 1,
	AFT_MAX                        = 2
};


// Enum ShadowTrackerExtra.EPVEProjectileInitLocationType
enum class EPVEProjectileInitLocationType : uint8_t
{
	EPVEProjectileInitLocationType__UseOwnerLocation = 0,
	EPVEProjectileInitLocationType__UseTargetLocation = 1,
	EPVEProjectileInitLocationType__UseSocketLocation = 2,
	EPVEProjectileInitLocationType__EPVEProjectileInitLocationType_MAX = 3
};


// Enum ShadowTrackerExtra.ELockPPType
enum class ELockPPType : uint8_t
{
	ELPPT_FPP                      = 0,
	ELPPT_TPP                      = 1,
	ELPPT_MAX                      = 2
};


// Enum ShadowTrackerExtra.EPutDownDirection
enum class EPutDownDirection : uint8_t
{
	EPutDownDirection__EPutDownDirection_NONE = 0,
	EPutDownDirection__EPutDownDirection_Front = 1,
	EPutDownDirection__EPutDownDirection_Back = 2,
	EPutDownDirection__EPutDownDirection_MAX = 3
};


// Enum ShadowTrackerExtra.EPutDownSkillActionType
enum class EPutDownSkillActionType : uint8_t
{
	EPutDownSkillActionType__EPDSAT_START = 0,
	EPutDownSkillActionType__EPDSAT_PUTDOWN = 1,
	EPutDownSkillActionType__EPDSAT_END = 2,
	EPutDownSkillActionType__EPDSAT_FAILED = 3,
	EPutDownSkillActionType__EPDSAT_NONE = 4,
	EPutDownSkillActionType__EPDSAT_MAX = 5
};


// Enum ShadowTrackerExtra.EBeamEffectDataFromType
enum class EBeamEffectDataFromType : uint8_t
{
	EBeamEffectDataFromType__FixedPoint = 0,
	EBeamEffectDataFromType__BlackBoard = 1,
	EBeamEffectDataFromType__AttachPoint = 2,
	EBeamEffectDataFromType__EBeamEffectDataFromType_MAX = 3
};


// Enum ShadowTrackerExtra.EUAESkillCondition_BlackboardValueComparison
enum class EUAESkillCondition_BlackboardValueComparison : uint8_t
{
	EUAESkillCondition_BlackboardValueComparison__Equal = 0,
	EUAESkillCondition_BlackboardValueComparison__NotEqual = 1,
	EUAESkillCondition_BlackboardValueComparison__Less = 2,
	EUAESkillCondition_BlackboardValueComparison__Greater = 3,
	EUAESkillCondition_BlackboardValueComparison__LessEqual = 4,
	EUAESkillCondition_BlackboardValueComparison__GreaterEqual = 5,
	EUAESkillCondition_BlackboardValueComparison__EUAESkillCondition_MAX = 6
};


// Enum ShadowTrackerExtra.ESkillConditionIsInHouseCheckType
enum class ESkillConditionIsInHouseCheckType : uint8_t
{
	ESkillConditionIsInHouseCheckType__In = 0,
	ESkillConditionIsInHouseCheckType__NotIn = 1,
	ESkillConditionIsInHouseCheckType__ESkillConditionIsInHouseCheckType_MAX = 2
};


// Enum ShadowTrackerExtra.ESkillConditionIsInHouseCheckTarget
enum class ESkillConditionIsInHouseCheckTarget : uint8_t
{
	ESkillConditionIsInHouseCheckTarget__Self = 0,
	ESkillConditionIsInHouseCheckTarget__SelfForward = 1,
	ESkillConditionIsInHouseCheckTarget__ESkillConditionIsInHouseCheckTarget_MAX = 2
};


// Enum ShadowTrackerExtra.EAxisType
enum class EAxisType : uint8_t
{
	EAxis_X                        = 0,
	EAxis_Y                        = 1,
	EAxis_Z                        = 2,
	EAxis_MAX                      = 3
};


// Enum ShadowTrackerExtra.ESettingConfigType
enum class ESettingConfigType : uint8_t
{
	SCT_Int                        = 0,
	SCT_UInt                       = 1,
	SCT_Float                      = 2,
	SCT_Bool                       = 3,
	SCT_String                     = 4,
	SCT_MAX                        = 5
};


// Enum ShadowTrackerExtra.EPickerFromBlackboard_DataType
enum class EPickerFromBlackboard_DataType : uint8_t
{
	EPickerFromBlackboard_DataType__Actor = 0,
	EPickerFromBlackboard_DataType__Circle = 1,
	EPickerFromBlackboard_DataType__EPickerFromBlackboard_MAX = 2
};


// Enum ShadowTrackerExtra.EMovementDirection
enum class EMovementDirection : uint8_t
{
	EMovementDirection__EForward   = 0,
	EMovementDirection__EBackward  = 1,
	EMovementDirection__ELeft      = 2,
	EMovementDirection__ERight     = 3,
	EMovementDirection__EMovementDirection_MAX = 4
};


// Enum ShadowTrackerExtra.EVelocityChangeType
enum class EVelocityChangeType : uint8_t
{
	EVelocityChangeType__ESpeed_Up = 0,
	EVelocityChangeType__ESpeed_Down = 1,
	EVelocityChangeType__ESpeed_Both = 2,
	EVelocityChangeType__ESpeed_MAX = 3
};


// Enum ShadowTrackerExtra.ESkillConditionCheckType
enum class ESkillConditionCheckType : uint8_t
{
	ESkillConditionCheckType__ECheck_Once = 0,
	ESkillConditionCheckType__ECheck_Continuous = 1,
	ESkillConditionCheckType__ECheck_MAX = 2
};


// Enum ShadowTrackerExtra.ERecoveryType
enum class ERecoveryType : uint8_t
{
	ERecovery_AddDirectly          = 0,
	ERecovery_AddTo                = 1,
	ERecovery_MAX                  = 2
};


// Enum ShadowTrackerExtra.EValueType
enum class EValueType : uint8_t
{
	EValueType_Percentage          = 0,
	EValueType_Absolute            = 1,
	EValueType_MAX                 = 2
};


// Enum ShadowTrackerExtra.EOperatorType
enum class EOperatorType : uint8_t
{
	EOperator_Equal                = 0,
	EOperator_Greater              = 1,
	EOperator_Less                 = 2,
	EOperator_GreaterEqual         = 3,
	EOperator_LessEqual            = 4,
	EOperator_NotEqual             = 5,
	EOperator_MAX                  = 6
};


// Enum ShadowTrackerExtra.EUAVStaySubState
enum class EUAVStaySubState : uint8_t
{
	EUAVStaySubState__UAVStaySubType_Stay = 0,
	EUAVStaySubState__UAVStaySubType_Move = 1,
	EUAVStaySubState__UAVStaySubType_MAX = 2
};


// Enum ShadowTrackerExtra.EUAVFlyType
enum class EUAVFlyType : uint8_t
{
	EUAVFlyType__UAVFly_KeepRelativeLocAndRot = 0,
	EUAVFlyType__UAVFly_RelativeBaseLoc = 1,
	EUAVFlyType__UAVFly_WorldLocAndRot = 2,
	EUAVFlyType__UAVFly_MAX        = 3
};


// Enum ShadowTrackerExtra.EUAVStateType
enum class EUAVStateType : uint8_t
{
	EUAVStateType__UAVState_Initial = 0,
	EUAVStateType__UAVState_BornFly = 1,
	EUAVStateType__UAVState_MoveIn = 2,
	EUAVStateType__UAVState_Stay   = 3,
	EUAVStateType__UAVState_MoveAway = 4,
	EUAVStateType__UAVState_Finish = 5,
	EUAVStateType__UAVState_MAX    = 6
};


// Enum ShadowTrackerExtra.EUAVAirDropCallType
enum class EUAVAirDropCallType : uint8_t
{
	EUAVAirDropCallType__BT_Normal = 0,
	EUAVAirDropCallType__BT_EventCall = 1,
	EUAVAirDropCallType__BT_MAX    = 2
};


// Enum ShadowTrackerExtra.EUAVCharacterFlyingPhase
enum class EUAVCharacterFlyingPhase : uint8_t
{
	EUAVCharacterFlyingPhase__FlyingDescending = 0,
	EUAVCharacterFlyingPhase__FlyingHorizontal = 1,
	EUAVCharacterFlyingPhase__AirDropping = 2,
	EUAVCharacterFlyingPhase__FlyingDisappear = 3,
	EUAVCharacterFlyingPhase__Finished = 4,
	EUAVCharacterFlyingPhase__EUAVCharacterFlyingPhase_MAX = 5
};


// Enum ShadowTrackerExtra.EAnimHurtingTarget
enum class EAnimHurtingTarget : uint8_t
{
	EAnimHurtingTarget__PlayerCharacter = 0,
	EAnimHurtingTarget__SimpleCharacter = 1,
	EAnimHurtingTarget__AllCharacter = 2,
	EAnimHurtingTarget__EAnimHurtingTarget_MAX = 3
};


// Enum ShadowTrackerExtra.EHurtApperanceRotateType
enum class EHurtApperanceRotateType : uint8_t
{
	EHurtApperanceRotateType__ERotateToCaster = 0,
	EHurtApperanceRotateType__EHurtApperanceRotateType_MAX = 1
};


// Enum ShadowTrackerExtra.UTSkill_SoundCue_ListenType
enum class EUTSkill_SoundCue_ListenType : uint8_t
{
	UTSkill_SoundCue_ListenType__Listen_SelfOnly = 0,
	UTSkill_SoundCue_ListenType__Listen_Teammate = 1,
	UTSkill_SoundCue_ListenType__Listen_Target = 2,
	UTSkill_SoundCue_ListenType__Listen_AllTarget = 3,
	UTSkill_SoundCue_ListenType__Listen_All = 4,
	UTSkill_SoundCue_ListenType__Listen_MAX = 5
};


// Enum ShadowTrackerExtra.EIconState
enum class EIconState : uint8_t
{
	EIconState__None               = 0,
	EIconState__IconReady          = 1,
	EIconState__IconGrey           = 2,
	EIconState__EIconState_MAX     = 3
};


// Enum ShadowTrackerExtra.ESLP_CrossHair_TraceType
enum class ESLP_CrossHair_TraceType : uint8_t
{
	ESLP_CrossHair_Line            = 0,
	ESLP_CrossHair_Sphere          = 1,
	ESLP_CrossHair_Box             = 2,
	ESLP_CrossHair_Capsule         = 3,
	ESLP_CrossHair_Fan             = 4,
	ESLP_CrossHair_MAX             = 5
};


// Enum ShadowTrackerExtra.ECustomDamageEventReactionType
enum class ECustomDamageEventReactionType : uint8_t
{
	ECustomDamageEventReactionType__SpawnActor = 0,
	ECustomDamageEventReactionType__ActiveParticles = 1,
	ECustomDamageEventReactionType__DetactiveParticles = 2,
	ECustomDamageEventReactionType__HideMesh = 3,
	ECustomDamageEventReactionType__HideMeshInstance = 4,
	ECustomDamageEventReactionType__HideBone = 5,
	ECustomDamageEventReactionType__ApplyPhysicalAnimationProfile = 6,
	ECustomDamageEventReactionType__SetCollisionEnabled = 7,
	ECustomDamageEventReactionType__ECustomDamageEventReactionType_MAX = 8
};


// Enum ShadowTrackerExtra.ECustomDamageEventTriggerType
enum class ECustomDamageEventTriggerType : uint8_t
{
	ECustomDamageEventTriggerType__OnPassedDamageThreshold = 0,
	ECustomDamageEventTriggerType__OnAnyDamage = 1,
	ECustomDamageEventTriggerType__ECustomDamageEventTriggerType_MAX = 2
};


// Enum ShadowTrackerExtra.SpringArmState
enum class ESpringArmState : uint8_t
{
	SpringArmState__SASDefault     = 0,
	SpringArmState__SASLeave       = 1,
	SpringArmState__SASStay        = 2,
	SpringArmState__SASApproach    = 3,
	SpringArmState__SpringArmState_MAX = 4
};


// Enum ShadowTrackerExtra.ESTExtraVehicleStates
enum class ESTExtraVehicleStates : uint8_t
{
	ESTExtraVehicleStates__EVS_NONE = 0,
	ESTExtraVehicleStates__EVS_SPEED = 1,
	ESTExtraVehicleStates__EVS_ELECTRONIC_FAILURE = 2,
	ESTExtraVehicleStates__EVS_MAX = 3
};


// Enum ShadowTrackerExtra.TrackState
enum class ETrackState : uint8_t
{
	TrackState__TSNone             = 0,
	TrackState__TSLeave            = 1,
	TrackState__TSStay             = 2,
	TrackState__TSApproach         = 3,
	TrackState__TrackState_MAX     = 4
};


// Enum ShadowTrackerExtra.EViewMaskType
enum class EViewMaskType : uint8_t
{
	EViewMaskType__EAuto           = 0,
	EViewMaskType__EEachPlayer     = 1,
	EViewMaskType__EEachTeam       = 2,
	EViewMaskType__EViewMaskType_MAX = 3
};


// Enum ShadowTrackerExtra.EShowVoiceDistanceType
enum class EShowVoiceDistanceType : uint8_t
{
	EShowVoiceDistanceType__ESD_Walk = 0,
	EShowVoiceDistanceType__ESD_Shot = 1,
	EShowVoiceDistanceType__ESD_Vehicle = 2,
	EShowVoiceDistanceType__ESD_MAX = 3
};


// Enum ShadowTrackerExtra.FFixedDropOffLocationType
enum class EFFixedDropOffLocationType : uint8_t
{
	FFixedDropOffLocationType__World = 0,
	FFixedDropOffLocationType__Relative = 1,
	FFixedDropOffLocationType__FFixedDropOffLocationType_MAX = 2
};


// Enum ShadowTrackerExtra.FDropOffLocationType
enum class EFDropOffLocationType : uint8_t
{
	FDropOffLocationType__World    = 0,
	FDropOffLocationType__Relative = 1,
	FDropOffLocationType__FDropOffLocationType_MAX = 2
};


// Enum ShadowTrackerExtra.EFlameEmitterType
enum class EFlameEmitterType : uint8_t
{
	EFlameEmitterType__ESingleShot = 0,
	EFlameEmitterType__EContinuous = 1,
	EFlameEmitterType__EFlameEmitterType_MAX = 2
};


// Enum ShadowTrackerExtra.EWonderfulPlayType
enum class EWonderfulPlayType : uint8_t
{
	EWonderfulPlayType__EWonderfulPlayType_None = 0,
	EWonderfulPlayType__EWonderfulPlayType_FromLobby = 1,
	EWonderfulPlayType__EWonderfulPlayType_FromBattle = 2,
	EWonderfulPlayType__EWonderfulPlayType_MAX = 3
};


// Enum ShadowTrackerExtra.EWonderfulPlayState
enum class EWonderfulPlayState : uint8_t
{
	EWonderfulPlayState__EWonderfulPlayState_Initial = 0,
	EWonderfulPlayState__EWonderfulPlayState_WaitJumpTimeDone = 1,
	EWonderfulPlayState__EWonderfulPlayState_Playing = 2,
	EWonderfulPlayState__EWonderfulPlayState_Finished = 3,
	EWonderfulPlayState__EWonderfulPlayState_MAX = 4
};


// Enum ShadowTrackerExtra.EWonderfulCutOutputType
enum class EWonderfulCutOutputType : uint8_t
{
	WonderfulCutOutputType_None    = 0,
	WonderfulCutOutputType_ChickenDinner = 1,
	WonderfulCutOutputType_ShootKill = 2,
	WonderfulCutOutputType_ShootLastBreath = 3,
	WonderfulCutOutputType_ShootDamage = 4,
	WonderfulCutOutputType_MeleeKill = 5,
	WonderfulCutOutputType_MeleeLastBreath = 6,
	WonderfulCutOutputType_GrenadeKill = 7,
	WonderfulCutOutputType_GrenadeLastBreath = 8,
	WonderfulCutOutputType_VehicleKill = 9,
	WonderfulCutOutputType_VehicleLastBreath = 10,
	WonderfulCutOutputType_MAX     = 11
};


// Enum ShadowTrackerExtra.EWonderfulCutShootDamageType
enum class EWonderfulCutShootDamageType : uint8_t
{
	WonderfulCutHurtType_None      = 0,
	WonderfulCutHurtType_Kill      = 1,
	WonderfulCutHurtType_LastBreath = 2,
	WonderfulCutHurtType_Hurt      = 3,
	WonderfulCutHurtType_MAX       = 4
};


// Enum ShadowTrackerExtra.EWonderfulCutCaptureType
enum class EWonderfulCutCaptureType : uint8_t
{
	WonderfulCutCaptureType_None   = 0,
	WonderfulCutCaptureType_ChickenDinner = 1,
	WonderfulCutCaptureType_Circle = 2,
	WonderfulCutCaptureType_Vehicle = 3,
	WonderfulCutCaptureType_Grenade = 4,
	WonderfulCutCaptureType_Melee  = 5,
	WonderfulCutCaptureType_ShootDamage = 6,
	WonderfulCutCaptureType_MAX    = 7
};


// Enum ShadowTrackerExtra.EWeatherPhaseIndex
enum class EWeatherPhaseIndex : uint8_t
{
	EWeatherPhaseIndex__FirstDay   = 0,
	EWeatherPhaseIndex__FirstDusk  = 1,
	EWeatherPhaseIndex__FirstNight = 2,
	EWeatherPhaseIndex__SecondDay  = 3,
	EWeatherPhaseIndex__SecondDusk = 4,
	EWeatherPhaseIndex__SecondNight = 5,
	EWeatherPhaseIndex__ThirdDay   = 6,
	EWeatherPhaseIndex__EWeatherPhaseIndex_MAX = 7
};



//---------------------------------------------------------------------------
//Script Structs
//---------------------------------------------------------------------------

// ScriptStruct ShadowTrackerExtra.SequencePlayerInfo
// 0x0008
struct FSequencePlayerInfo
{
	class ASTExtraBaseCharacter*                       PlayerPawn;                                               // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentPlayingTime;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SequenceBindingInfo
// 0x001C
struct FSequenceBindingInfo
{
	struct FMovieSceneObjectBindingID                  Binding;                                                  // 0x0000(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class AActor*                                      Actor;                                                    // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SequenceInfo
// 0x0040
struct FSequenceInfo
{
	struct FTransform                                  TransfromOrigin;                                          // 0x0000(0x0030) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class AActor*                                      TransfromOriginActor;                                     // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0034(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActivityParticleAsset
// 0x0070
struct FActivityParticleAsset
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ActivityParticleAsset.ParticleSystem
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleSysParam>                   InstanceParameters;                                       // 0x0060(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bLimitCount;                                              // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // 0x006D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActivityParticleGroup
// 0x0024
struct FActivityParticleGroup
{
	TArray<class UParticleSystem*>                     ParticleSystemList;                                       // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UParticleSystemComponent*>            ParticleCompList;                                         // 0x000C(0x000C) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FActivityParticleAsset>              ParticleAssetList;                                        // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ActivitySoundAsset
// 0x0038
struct FActivitySoundAsset
{
	struct FString                                     BankName;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x000C(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ActivitySoundAsset.AudioEvent
};

// ScriptStruct ShadowTrackerExtra.ActivitySoundGroup
// 0x0018
struct FActivitySoundGroup
{
	TArray<class UAkAudioEvent*>                       AudioEventList;                                           // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FActivitySoundAsset>                 SoundAssetList;                                           // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIActingCandidateData
// 0x0024
struct FAIActingCandidateData
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
	class AFakePlayerAIController*                     FakePlayerAIController;                                   // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIEquipSpawnItem
// 0x0018
struct FAIEquipSpawnItem
{
	EAIEquipSpawnItemType                              itemType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ItemSpecificID;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ExtraConfigValue;                                         // 0x0010(0x0008) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIActingItem
// 0x0024
struct FAIActingItem
{
	float                                              StartSeconds;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndSeconds;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeadPercent;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlayerNumScale;                                           // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsFinished;                                               // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	TArray<int>                                        WeaponIdList;                                             // 0x0014(0x000C) (Edit, ZeroConstructor)
	int                                                FinalRestBotNum;                                          // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIBeginAttackEachOther
// 0x0008
struct FAIBeginAttackEachOther
{
	float                                              BeginAttackEachOtherTime;                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightRatingSection;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeliveryRatingConfig
// 0x0008
struct FDeliveryRatingConfig
{
	float                                              DeliveryInterval;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightRatingSection;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIDeliveryAreaLimit
// 0x0018
struct FAIDeliveryAreaLimit
{
	struct FVector                                     TopLeftVec;                                               // 0x0000(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BottomRightVec;                                           // 0x000C(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeliveryCondition
// 0x0004
struct FDeliveryCondition
{
	class UDeliveryConditionCheck*                     CheckCnd;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpecialAINumConfig
// 0x0008
struct FSpecialAINumConfig
{
	float                                              NumScale;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HotValueAttenuation
// 0x000C
struct FHotValueAttenuation
{
	float                                              Corner;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Center;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpDown;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HotValueScale
// 0x000C
struct FHotValueScale
{
	float                                              Corner;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Center;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpDown;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpecialAIDeliveryNum
// 0x0008
struct FSpecialAIDeliveryNum
{
	int                                                DeliveryNum;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpecialAIDeliveryNumContainer
// 0x0010
struct FSpecialAIDeliveryNumContainer
{
	int                                                TeammateNum;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSpecialAIDeliveryNum>               DeliverNumCfg;                                            // 0x0004(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIRatingDamage
// 0x0018
struct FAIRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpecialRatingDamageScale;                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpecialFiringAccuracyRadius;                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AIFeedLimit;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttackAIRatingDamage
// 0x000C
struct FAIAttackAIRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeliveryItem
// 0x0008
struct FDeliveryItem
{
	int                                                percent;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DeliveryNum;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeliveryPlayerConfig
// 0x0010
struct FDeliveryPlayerConfig
{
	TArray<struct FDeliveryItem>                       DeliveryItem;                                             // 0x0000(0x000C) (Edit, ZeroConstructor)
	float                                              RightRatingSection;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttackAnimalRatingDamage
// 0x000C
struct FAIAttackAnimalRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIEquipSpawnGroup
// 0x000C
struct FAIEquipSpawnGroup
{
	TArray<struct FAIEquipSpawnItem>                   Item;                                                     // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIEquipSpawnGroupDataBase
// 0x001C
struct FAIEquipSpawnGroupDataBase
{
	float                                              RightTime;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAIEquipSpawnGroup>                  AIEquipSpawnGroupList;                                    // 0x0004(0x000C) (Edit, ZeroConstructor)
	TArray<struct FAIEquipSpawnItem>                   AIMustPickUpItemList;                                     // 0x0010(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WayPointLink
// 0x0008
struct FWayPointLink
{
	int                                                NextPointID;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TeamWayPointLink
// 0x0010
struct FTeamWayPointLink
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FWayPointLink>                       Links;                                                    // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WayPointEvent
// 0x0018
struct FWayPointEvent
{
	struct FName                                       EventId;                                                  // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAIWayPointEventBase*                        EventInfo;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<enum EAIWayPointEventType>             EventType;                                                // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                Weight;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WayPointRandomEvent
// 0x000C
struct FWayPointRandomEvent
{
	TArray<struct FWayPointEvent>                      RandomEvents;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WayPointEvents
// 0x000C
struct FWayPointEvents
{
	TArray<struct FWayPointRandomEvent>                EventsList;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AnimalGroupRespawnNumProbability
// 0x0008
struct FAnimalGroupRespawnNumProbability
{
	uint32_t                                           AnimalNum;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimalGroupRespawnConfig
// 0x0060
struct FAnimalGroupRespawnConfig
{
	EAnimalType                                        AnimalType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FAnimalGroupRespawnNumProbability>   AnimalGroupRespawnNumProbability;                         // 0x0004(0x000C) (Edit, ZeroConstructor)
	float                                              NoBlueCircleRadius;                                       // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CheckPlayerRadius;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndRespawnTime;                                           // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TryFindSpawnLocNum;                                       // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ValidTraceActorIncludeName;                               // 0x0020(0x000C) (Edit, ZeroConstructor)
	struct FVector                                     AnimalGenerateOffset;                                     // 0x002C(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0038(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.AnimalGroupRespawnConfig.AnimalCharacterClass
};

// ScriptStruct ShadowTrackerExtra.RegisterTimer
// 0x0018
struct FRegisterTimer
{
	int                                                waveindex;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<float>                                      Times;                                                    // 0x0004(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirAttackCfg
// 0x0018
struct FAirAttackCfg
{
	float                                              EscapeTime;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackLastingTime;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackAreaRadius;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TotalBombs;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BombsRadius;                                              // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropResource
// 0x00B0
struct FAirDropResource
{
	class UStaticMesh*                                 AirdropBoxMesh;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 AirDropParachuteMesh;                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             AirdropSmoke;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             AirdropFlash;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AirDropResource.SoftAirdropBoxMesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AirDropResource.SoftAirdropParachuteMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AirDropResource.SoftAirdropSmoke
	unsigned char                                      UnknownData03[0x28];                                      // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AirDropResource.SoftAirdropFlash
};

// ScriptStruct ShadowTrackerExtra.AirDropBoxGenerateWrapperItemData
// 0x0008
struct FAirDropBoxGenerateWrapperItemData
{
	class UClass*                                      WrapperClass;                                             // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropPlaneParams
// 0x001C
struct FAirDropPlaneParams
{
	float                                              FlyingHeight;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlyingSpeed;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirDropFallingSpeed;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsUseDebugLocation;                                      // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FVector                                     DebugDroppingLocation;                                    // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BackupEnterAirDropPlaneParams
// 0x0034
struct FBackupEnterAirDropPlaneParams
{
	float                                              FlyingHeight;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlyingSpeed;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirDropFallingSpeed;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DroppingLocationOffset;                                   // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FVector>                             PlaneSpawnOffset;                                         // 0x0018(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      DropTimeOffset;                                           // 0x0024(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                MaxPlaneNum;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ExtraAirDropRandomParams
// 0x0008
struct FExtraAirDropRandomParams
{
	int                                                TotalDropCount;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TermWeight;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropConfig
// 0x0058
struct FAirDropConfig
{
	float                                              AirDropTime;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomDroppingRange;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DoubleCircleRandomDroppingRange;                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DropStuffChance;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NoLandscapeDelayTime;                                     // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanMakeExtraAirdrop;                                     // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	TArray<struct FExtraAirDropRandomParams>           ExtraAirDropRandParamsArray;                              // 0x0018(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              ExtraAirDropRandLowerLimit;                               // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtraAirDropRandUpperLimit;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ExtraAirDropUseEvenlyDistributed;                         // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanMakeContinuousAirdrop;                                // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	float                                              ContinuousAirDropInterval;                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0034(0x000C) UNKNOWN PROPERTY: ArrayProperty ShadowTrackerExtra.AirDropConfig.AirDropBoxBlueprintList
	bool                                               bIsDrawAirDropFlightPath;                                 // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              AirdropWhiteCircleProportionMin;                          // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirdropWhiteCircleProportionMax;                          // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirdropIntervalProportionMin;                             // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirdropIntervalProportionMax;                             // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomStrategy;                                       // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FlareGunAirDropRandomParams
// 0x000C
struct FFlareGunAirDropRandomParams
{
	float                                              SuperAirDropRandomRadius;                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SuperAirDropRouteRandomRadiusMin;                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SuperAirDropRouteRandomRadiusMax;                         // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SuperAirDropBoxDataItem
// 0x0008
struct FSuperAirDropBoxDataItem
{
	float                                              GenerateRate;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  Table;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropBoxParams
// 0x0010
struct FAirDropBoxParams
{
	struct FVector                                     AirdropBoxFallingPosition;                                // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class UClass*                                      AirdropBoxClass;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropOrder
// 0x0078
struct FAirDropOrder
{
	struct FVector                                     AirDropPlaneSpawnPosition;                                // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     AirDropPlaneFlyingDirection;                              // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              AirDropPlaneFlyingSpeed;                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AirDropStuffFallingPosition;                              // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FVector>                             BoxFallingPositionArray;                                  // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                AirDropIndex;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDrawAirDropFlightPath;                                 // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FVector                                     AirDropPlaneEndPosition;                                  // 0x003C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FAirDropBoxParams>                   AirDropBoxParamsArray;                                    // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      AirdropBoxClass;                                          // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AirDropStuffFallingSpeed;                                 // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSpecialAirdrop;                                        // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                DropType;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           AirDropSummoner;                                          // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ZombieID;                                                 // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FlowId;                                                   // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsEmptyAirdrop;                                          // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                DropID;                                                   // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DropGroundEffectInfo
// 0x0080
struct FDropGroundEffectInfo
{
	float                                              GroundEffectLifeSpan;                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  EffectTransform;                                          // 0x0010(0x0030) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.DropGroundEffectInfo.GroundEffect
	struct FString                                     EffectPath;                                               // 0x0068(0x000C) (ZeroConstructor)
	bool                                               bShowGroundEffect;                                        // 0x0074(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUsePickUpSelfEffect;                                     // 0x0075(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEffectActive;                                            // 0x0076(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x9];                                       // 0x0077(0x0009) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PickUpItemData
// 0x0030
struct FPickUpItemData
{
	struct FItemDefineID                               ID;                                                       // 0x0000(0x0018) (Edit, BlueprintVisible)
	int                                                Count;                                                    // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FBattleItemAdditionalData>           AdditionalDataList;                                       // 0x001C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                InstanceID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FlyingParam
// 0x0014
struct FFlyingParam
{
	float                                              FlyingSpeed;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FlyingDirection;                                          // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              AirPlaneSpawnServerTime;                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropUAVSpawnGroupInfo
// 0x0020
struct FAirDropUAVSpawnGroupInfo
{
	TArray<struct FTransform>                          SpawnLocRandomArray;                                      // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                SpawnCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowUAVMapMarker;                                        // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	struct FVector                                     UAVMapMarkerLoc;                                          // 0x0014(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropUAVSpawnInfo
// 0x0038
struct FAirDropUAVSpawnInfo
{
	TArray<int>                                        SpawnGroupIndexRandomArray;                               // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                SpawnGroupCount;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnTime;                                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowNoticeTips;                                          // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	struct FString                                     NoticeTipsFunctionName;                                   // 0x0018(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                NoticeTipsID;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoticeCenterLoc;                                          // 0x0028(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              NoticeRadius;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STAirAttackRadialDamageEvent
// 0x0000 (0x0034 - 0x0034)
struct FSTAirAttackRadialDamageEvent : public FRadialDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.RotateToWayPointRotationCache
// 0x0008
struct FRotateToWayPointRotationCache
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActorPointWithWeight
// 0x0008
struct FActorPointWithWeight
{
	class AActor*                                      ActorPoint;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIWayPointPathInfo
// 0x0040
struct FAIWayPointPathInfo
{
	bool                                               bEnable;                                                  // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class AAIWayPointActor*                            StartWayPointActor;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               LevelsToBeLoaded;                                         // 0x0008(0x000C) (Edit, ZeroConstructor)
	TArray<struct FTransform>                          ApexCampInfos;                                            // 0x0014(0x000C) (Edit, ZeroConstructor)
	class UClass*                                      ApexCampActorClass;                                       // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTransform>                          BalloonInfos;                                             // 0x0024(0x000C) (Edit, ZeroConstructor)
	class UClass*                                      BalloonActorClass;                                        // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FActorPointWithWeight>               PathOutlinePoints;                                        // 0x0034(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SoundConfig
// 0x0014
struct FSoundConfig
{
	float                                              TransDist;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSetBlackboardValue;                                      // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FName>                               BlackboardNameList;                                       // 0x0008(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIFeatureInfo
// 0x0084
struct FAIFeatureInfo
{
	float                                              HP;                                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageScale;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TakeDamageScale;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DropID;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      HitRates;                                                 // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<float, float>                                 EnemyHpHitRateMap;                                        // 0x001C(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bNeedNearDeath;                                           // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasDeadBox;                                              // 0x0059(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	struct FVector2D                                   MissOnPurposeTimeRange;                                   // 0x005C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   OutViewMissOnPurposeTimeRange;                            // 0x0064(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              MissOnPurposeCD;                                          // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MissOnPurposeResetTime;                                   // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MissOnPurposeHitRate;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NearDeathTargetStopFireTime;                              // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NearDeathTargetFixedHitRate;                              // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDoMissOnPurposeWhenNearDeathToNormal;                    // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AITargetInViewOffset
// 0x002C
struct FAITargetInViewOffset
{
	TArray<struct FVector>                             Offset;                                                   // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                             CrouchOffset;                                             // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                     TargetLoc;                                                // 0x0018(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                CurrentOffsetIndex;                                       // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTargetInViewDueToOffset;                                 // 0x0028(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPawnState                                         TargetPawnState;                                          // 0x0029(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AIShootingPoseOffsetDetailInfo
// 0x0010
struct FAIShootingPoseOffsetDetailInfo
{
	EAIShootingPose                                    shootingPose;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     offsetInfo;                                               // 0x0004(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIShootingPoseOffsetInfo
// 0x0054
struct FAIShootingPoseOffsetInfo
{
	TArray<struct FAIShootingPoseOffsetDetailInfo>     ShootingPoseShootPointOffsetArray;                        // 0x0000(0x000C) (Edit, ZeroConstructor)
	float                                              CrouchToStandHeightOffset;                                // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProneToStandHeightOffset;                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TMap<EAIShootingPose, struct FVector>              ShootingPoseShootPointOffsetMap;                          // 0x0018(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AnimDataPair
// 0x0030
struct FAnimDataPair
{
	int                                                PoseTypeID;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AnimDataPair.AnimSoftPtr
};

// ScriptStruct ShadowTrackerExtra.AsyncLoadAnimParams
// 0x0014
struct FAsyncLoadAnimParams
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AnimalAnimData
// 0x0030
struct FAnimalAnimData
{
	EAnimalAnimListType                                PoseType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0000(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AnimalAnimData.AnimSoftPtr
};

// ScriptStruct ShadowTrackerExtra.AnimalMoveAnimSpeed
// 0x0008
struct FAnimalMoveAnimSpeed
{
	EAnimalAnimListType                                PoseType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0000(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	float                                              Speed;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimalDeliverRatingConfig
// 0x005C
struct FAnimalDeliverRatingConfig
{
	float                                              RightRatingSection;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           DeliverGroupNumPerWave;                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeliverBeginTime;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeliveryWaveInterval;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeliverEndTime;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           FullFeedLimit;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeliverFreqInterval;                                      // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DeliverNumEachFreq;                                       // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<int, int>                                     DeliverCountByPlayerNum;                                  // 0x0020(0x0050) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AnimalDeliverAreaLimit
// 0x0018
struct FAnimalDeliverAreaLimit
{
	struct FVector                                     TopLeft;                                                  // 0x0000(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BottomRight;                                              // 0x000C(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimationCurveData
// 0x000C
struct FAnimationCurveData
{
	struct FString                                     CurveName;                                                // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AnimationFloatCurveData
// 0x0004 (0x0010 - 0x000C)
struct FAnimationFloatCurveData : public FAnimationCurveData
{
	class UCurveFloat*                                 FloatCurve;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PoolPreloadObjectItem
// 0x0030
struct FPoolPreloadObjectItem
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PoolPreloadObjectItem.Object
	bool                                               IsSpawnToPool;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                PreloadNum;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PoolPreloadClassItem
// 0x0030
struct FPoolPreloadClassItem
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.PoolPreloadClassItem.Object
	bool                                               IsSpawnToPool;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                PreloadNum;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PoolPreloadTableConfigItem
// 0x0010
struct FPoolPreloadTableConfigItem
{
	int                                                LoadPriority;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     CSVFilePath;                                              // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.PoolPreloadAysncLoadParams
// 0x0001
struct FPoolPreloadAysncLoadParams
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ArmsRaceWeaponGroupWeightConfig
// 0x0008
struct FArmsRaceWeaponGroupWeightConfig
{
	int                                                GroupID;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RangeCheckRetParam
// 0x0090
struct FRangeCheckRetParam
{
	struct FHitResult                                  HitResult;                                                // 0x0000(0x0088) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IsBlockedBySomething;                                     // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PropSkillNoiseRangeParam
// 0x0024
struct FPropSkillNoiseRangeParam
{
	float                                              GenProbility;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillLevel;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RangeLifeSpan;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MarkerLifeSpan;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RangeRadius;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HumanBuffID;                                              // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZombieBuffID;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZombieWeakSpeakBuffID;                                    // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MarkerIconID;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PropSkillSmokeDamageParam
// 0x0034
struct FPropSkillSmokeDamageParam
{
	float                                              GenProbility;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillLevel;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerInnerDamageHealth;                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerOuterDamageHealth;                                  // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZombieInnerDamageHealth;                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZombieOuterDamageHealth;                                  // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallWeakenDamageRatio;                                    // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InnerDamageRadius;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OuterDamageRadius;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SomkeLifeSpan;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheckPeriod;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HumanBuffID;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZombieBuffID;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PawnStateDisable
// 0x0002
struct FPawnStateDisable
{
	EPawnState                                         PawnState;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             Disabled;                                                 // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UnmannedVehicleSyncData
// 0x0008
struct FUnmannedVehicleSyncData
{
	EUAVUseType                                        EUAVUseType;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class ASTExtraVehicleBase*                         CurrentUnmannedVehicle;                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterBodyOffset
// 0x0030
struct FCharacterBodyOffset
{
	struct FVector                                     HeadOffset;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     PitchOffset;                                              // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     FootOffset;                                               // 0x0018(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     TPPSpringArmOffset;                                       // 0x0024(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ActivitySyncData
// 0x001C
struct FActivitySyncData
{
	bool                                               bIsDuringActivity;                                        // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsAttachedToActor;                                       // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsMovementDisabled;                                      // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	struct FVector                                     AttachedOffsetLocation;                                   // 0x0004(0x000C) (IsPlainOldData)
	struct FRotator                                    AttachedOffsetRotation;                                   // 0x0010(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AutoAimInfo
// 0x0038
struct FAutoAimInfo
{
	class UClass*                                      AimClass;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AimOffset;                                                // 0x0004(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAimDistance;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAimScreenDis;                                          // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   ScreenAimRect;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0020(0x0004) MISSED OFFSET
	float                                              DefaultLockDelay;                                         // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LockSocketName;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DotValue;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialAsset
// 0x0060
struct FMaterialAsset
{
	struct FName                                       SlotName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialAsset.MatInst
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialAsset.MatBase
	class UMaterialInterface*                          MatBaseObject;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDynamicMat;                                              // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ParticleAsset
// 0x0080
struct FParticleAsset
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ParticleAsset.ParticleSystem
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ComponentTag;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleSysParam>                   InstanceParameters;                                       // 0x0068(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bLimitCount;                                              // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // 0x0075(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xA];                                       // 0x0076(0x000A) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CustomMatScalar
// 0x0018
struct FCustomMatScalar
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tips;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Scalar;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CustomMatColor
// 0x0020
struct FCustomMatColor
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tips;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0010(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomMatTextrue
// 0x0048
struct FCustomMatTextrue
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tips;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.CustomMatTextrue.Textrue
	struct FString                                     TextruePath;                                              // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CustomMatConfig
// 0x0030
struct FCustomMatConfig
{
	struct FName                                       SlotName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCustomMatScalar>                    ScalarConfig;                                             // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCustomMatColor>                     ColorConfig;                                              // 0x0014(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCustomMatTextrue>                   TextrueConfig;                                            // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialGroup
// 0x0024
struct FMaterialGroup
{
	TArray<struct FMaterialAsset>                      MatList;                                                  // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UMaterialInterface*>                  NewMatObjectList;                                         // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UMaterialInterface*>                  OriMatObjectList;                                         // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ParticleGroup
// 0x0024
struct FParticleGroup
{
	TArray<class UParticleSystem*>                     ParticleSystemList;                                       // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UParticleSystemComponent*>            ParticleCompList;                                         // 0x000C(0x000C) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FParticleAsset>                      ParticleAssetList;                                        // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MeshAsset
// 0x00C0
struct FMeshAsset
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshAsset.SkeletalMesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshAsset.StaticMesh
	struct FName                                       AttachSocket;                                             // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EMeshAssetType                                     meshType;                                                 // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepRelative;                                            // 0x0089(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x008A(0x0002) MISSED OFFSET
	class UClass*                                      animBP;                                                   // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.MeshAsset.animBPClass
	bool                                               bAnimInit;                                                // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateTransform;                                         // 0x00B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x00BA(0x0006) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MeshGroup
// 0x0024
struct FMeshGroup
{
	TArray<struct FMeshAsset>                          MeshAssetList;                                            // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UObject*>                             MeshObjectList;                                           // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UMeshComponent*>                      MeshCompList;                                             // 0x0018(0x000C) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.LoadMeshAssetRequest
// 0x0048
struct FLoadMeshAssetRequest
{
	TArray<struct FMeshAsset>                          MeshAsset;                                                // 0x0000(0x000C) (ZeroConstructor)
	struct FMeshGroup                                  MeshGroup;                                                // 0x000C(0x0024)
	class UMeshComponent*                              Outer;                                                    // 0x0030(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FScriptDelegate                             Callback;                                                 // 0x0038(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.LoadParticleAssetRequest
// 0x0048
struct FLoadParticleAssetRequest
{
	TArray<struct FParticleAsset>                      ParticleAsset;                                            // 0x0000(0x000C) (ZeroConstructor)
	struct FParticleGroup                              ParticleGroup;                                            // 0x000C(0x0024)
	class UMeshComponent*                              Outer;                                                    // 0x0030(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FScriptDelegate                             Callback;                                                 // 0x0038(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.WeaponAnimAsset
// 0x0080
struct FWeaponAnimAsset
{
	struct FName                                       WeaponName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponAnimAsset.AnimPose
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponAnimAsset.AnimAdd
	unsigned char                                      UnknownData02[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponAnimAsset.WeaponAnimBP
};

// ScriptStruct ShadowTrackerExtra.WeaponSystemDataOnSimulateClient
// 0x0038
struct FWeaponSystemDataOnSimulateClient
{
	class ASTExtraWeapon*                              TargetWeapon;                                             // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       LogicSocket;                                              // 0x0008(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoUse;                                                 // 0x0010(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FItemDefineID                               ID;                                                       // 0x0018(0x0018) (BlueprintVisible)
	int                                                OperationIndex;                                           // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BagLevel;                                                 // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarActionBase
// 0x0018
struct FAvatarActionBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplacedSlotInfo
// 0x0008
struct FReplacedSlotInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HideBoneData
// 0x0020
struct FHideBoneData
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MeshData
// 0x0060
struct FMeshData
{
	class UStaticMesh*                                 stMesh;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMesh*                               skMesh;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstance*                           matIns;                                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialInstance*>                   additionalMats;                                           // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient)
	EMeshType                                          meshType;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	TArray<int>                                        hiddenSlots;                                              // 0x001C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient)
	TArray<struct FReplacedSlotInfo>                   replacedSlots;                                            // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient)
	TArray<struct FHideBoneData>                       hideBoneSlots;                                            // 0x0034(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Transient)
	struct FItemDefineID                               definedID;                                                // 0x0040(0x0018) (Edit, BlueprintVisible, Transient)
	bool                                               functionValid;                                            // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DIYData
// 0x004C
struct FDIYData
{
	class UTexture2D*                                  Texture;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0004(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   Scale;                                                    // 0x0014(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   Offset;                                                   // 0x001C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Rotation;                                                 // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EDIYProjectDirection                               Direction;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FLinearColor                                UVClip;                                                   // 0x002C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                UVInfo;                                                   // 0x003C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DIYMatParam
// 0x001C
struct FDIYMatParam
{
	struct FString                                     MatTexPath;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FLinearColor                                MatTexColor;                                              // 0x000C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DIYUVInfo
// 0x0010
struct FDIYUVInfo
{
	float                                              UVCorrdX;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UVCorrdY;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UVSizeX;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UVSizeY;                                                  // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarCustom
// 0x0014
struct FAvatarCustom
{
	EAvatarCustomType                                  CustomType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ColorID;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PatternID;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumID;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ParticleID;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarSlotDesc
// 0x0078
struct FAvatarSlotDesc
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubSlotID;                                                // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FItemDefineID                               ItemDefineID;                                             // 0x0008(0x0018) (BlueprintVisible, BlueprintReadOnly)
	struct FItemDefineID                               RealShowItemDefineID;                                     // 0x0020(0x0018) (BlueprintVisible, BlueprintReadOnly)
	int                                                gender;                                                   // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HideState;                                                // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplaceState;                                             // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsExist;                                                  // 0x0044(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FAvatarCustom                               CustomInfo;                                               // 0x0048(0x0014) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bForceHideState;                                          // 0x005C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	ESlotDescDiff                                      SlotDescDiff;                                             // 0x005D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	struct FItemDefineID                               OldItemDefineID;                                          // 0x0060(0x0018)
};

// ScriptStruct ShadowTrackerExtra.ModTableByMode
// 0x003C
struct FModTableByMode
{
	struct FString                                     UpWeaponTableName;                                        // 0x0000(0x000C) (Edit, ZeroConstructor)
	struct FString                                     UpWeaponAttachmentTableName;                              // 0x000C(0x000C) (Edit, ZeroConstructor)
	struct FString                                     UpBulletTableName;                                        // 0x0018(0x000C) (Edit, ZeroConstructor)
	struct FString                                     ChipTableName;                                            // 0x0024(0x000C) (Edit, ZeroConstructor)
	struct FString                                     ChipSupportTableName;                                     // 0x0030(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponAvatarAttrRow
// 0x0064
struct FWeaponAvatarAttrRow
{
	unsigned char                                      UnknownData00[0x64];                                      // 0x0000(0x0064) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachmentsDataRow
// 0x005C
struct FWeaponAttachmentsDataRow
{
	int                                                WeaponId;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BulletID;                                                 // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ProposeBulletNum;                                         // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AIMinAttackDist;                                          // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AIMaxAttackDist;                                          // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MuzzleIDList;                                             // 0x0014(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        UpperIDList;                                              // 0x0020(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        StockIDList;                                              // 0x002C(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        MagazineIDList;                                           // 0x0038(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        LowerIDList;                                              // 0x0044(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        UpperSideIDList;                                          // 0x0050(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.UpBulletTableDataRow
// 0x0028
struct FUpBulletTableDataRow
{
	int                                                MiltiBulletID;                                            // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParentBulletID;                                           // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BulletImpactDamagePerc;                                   // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BulletImpactDamageAddVal;                                 // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BulletMomentumPerc;                                       // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BulletMomentumAddVal;                                     // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DefaultPriority;                                          // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        BulletHitBuffIdList;                                      // 0x001C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AttrModifyData
// 0x0014
struct FAttrModifyData
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ChipDataRow
// 0x0010
struct FChipDataRow
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FAttrModifyData>                     AttrModifyList;                                           // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ChipSupportDataRow
// 0x0014
struct FChipSupportDataRow
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SupportChipSupTypeList;                                   // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SupportChipNum;                                           // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarTableData
// 0x007C
struct FAvatarTableData
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SubSlotID;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        HideFlags;                                                // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        ReplaceFlags;                                             // 0x0014(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        RecoverHideFlagsWhenSelfHidden;                           // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        RecoverReplaceFlagsWhenSelfHidden;                        // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        RecoverHideFlagsWhenSelfReplaced;                         // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        RecoverReplaceFlagsWhenSelfReplaced;                      // 0x0044(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        ConflictConfig;                                           // 0x0050(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        ConflictConfigWhenSelfReplaced;                           // 0x005C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                HideBoneSlotID;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HideBoneType;                                             // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               HideBoneNames;                                            // 0x0070(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SupportUpBullet
// 0x0008
struct FSupportUpBullet
{
	int                                                UpBulletID;                                               // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DefaultPriority;                                          // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CreateAvatarHandleAsyncRequest
// 0x0038
struct FCreateAvatarHandleAsyncRequest
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018)
	class UObject*                                     Outer;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Path;                                                     // 0x001C(0x000C) (ZeroConstructor)
	struct FScriptDelegate                             Callback;                                                 // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.CreateAvatarHandleListAsyncRequest
// 0x0030
struct FCreateAvatarHandleListAsyncRequest
{
	TArray<struct FItemDefineID>                       DefineIDList;                                             // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FString>                             PathList;                                                 // 0x000C(0x000C) (ZeroConstructor)
	class UObject*                                     Outer;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FScriptDelegate                             Callback;                                                 // 0x0020(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.UpWeaponDataRow
// 0x0018
struct FUpWeaponDataRow
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.UpWeaponAttachmentDataRow
// 0x0014
struct FUpWeaponAttachmentDataRow
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SupportUpBullets
// 0x000C
struct FSupportUpBullets
{
	TArray<struct FSupportUpBullet>                    SupportUpBulletList;                                      // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ChipSupportItem
// 0x0040
struct FChipSupportItem
{
	int                                                ChipSubType;                                              // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<int, bool>                                    SupportItemDic;                                           // 0x0004(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AssetPackage
// 0x0004
struct FAssetPackage
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialSet
// 0x0058
struct FMaterialSet
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialSet.targetMat
	EAvatarSlotType                                    targetSlot;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0029(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialSet.targetBaseMat
};

// ScriptStruct ShadowTrackerExtra.AvatarEffectData
// 0x0080
struct FAvatarEffectData
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarEffectData.ParticleSystem
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ComponentTag;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EEffectValidTarget                                 ValidMethod;                                              // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EEffectValidDevice                                 ValidDevice;                                              // 0x0069(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x006A(0x0002) MISSED OFFSET
	TArray<struct FParticleSysParam>                   InstanceParameters;                                       // 0x006C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0078(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAttachMeshData
// 0x00FC (0x0100 - 0x0004)
struct FAvatarAttachMeshData : public FAssetPackage
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FName                                       AttachSocket;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SlotName;                                                 // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarAttachMeshData.StaticMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarAttachMeshData.SkeletalMesh
	unsigned char                                      UnknownData03[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarAttachMeshData.LODSkeletalMesh
	unsigned char                                      UnknownData04[0x28];                                      // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarAttachMeshData.MatInstance
	class UClass*                                      AttachAnimBP;                                             // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScreenFactorOptimizeAnimRate;                         // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xB];                                       // 0x00F5(0x000B) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MeshPackage
// 0x028C (0x0290 - 0x0004)
struct FMeshPackage : public FAssetPackage
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleStMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleStMesh
	unsigned char                                      UnknownData03[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleLODStMesh
	unsigned char                                      UnknownData04[0x28];                                      // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleLODStMesh
	unsigned char                                      UnknownData05[0x28];                                      // 0x00A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleSkMesh
	unsigned char                                      UnknownData06[0x28];                                      // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleSkMesh
	unsigned char                                      UnknownData07[0x28];                                      // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleLODSkMesh
	unsigned char                                      UnknownData08[0x28];                                      // 0x0120(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleLODSkMesh
	unsigned char                                      UnknownData09[0x28];                                      // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleMat
	unsigned char                                      UnknownData10[0x28];                                      // 0x0170(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleMat
	TArray<struct FMaterialSet>                        additionalMaleMats;                                       // 0x0198(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FMaterialSet>                        additionalFemaleMats;                                     // 0x01A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	class UMaterialInterface*                          baseMat;                                                  // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      animBP;                                                   // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x28];                                      // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.LobbyIdleAnim
	bool                                               IsEffectOnly;                                             // 0x01E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EEffectCreateType                                  EffectCreateType;                                         // 0x01E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x01E2(0x0002) MISSED OFFSET
	TArray<struct FAvatarEffectData>                   EffectDataList;                                           // 0x01E4(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FAvatarAttachMeshData>               AttachMeshDataList;                                       // 0x01F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData13[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData14[0x28];                                      // 0x01FC(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.MeshPackage.animBPClass
	unsigned char                                      UnknownData15[0x28];                                      // 0x0228(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.maleUpgradeMat
	unsigned char                                      UnknownData16[0x28];                                      // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MeshPackage.femaleUpgradeMat
	class UMaterialInterface*                          upgradeBaseMat;                                           // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x14];                                      // 0x027C(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarPostOperation
// 0x0003
struct FAvatarPostOperation
{
	EAvatarSlotType                                    SlotID;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPostOperationType                                 operationWhenReplaced;                                    // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPostOperationType                                 operationWhenHidden;                                      // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BodyAttachmentAttrModify
// 0x0014
struct FBodyAttachmentAttrModify
{
	struct FString                                     ModifyAttr;                                               // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	EAttrOperator                                      Op;                                                       // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              ModifyValue;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BodyAttachmentConfig
// 0x0024
struct FBodyAttachmentConfig
{
	struct FText                                       AttachmentID;                                             // 0x0000(0x000C) (Edit, DisableEditOnInstance)
	TArray<struct FBodyAttachmentAttrModify>           BodyAttachmentAttrModifiers;                              // 0x000C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     BodyDurabilityIndexName;                                  // 0x0018(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AvatarPendantConfig_SpecialParam
// 0x0040
struct FAvatarPendantConfig_SpecialParam
{
	struct FName                                       SpecialUseExplanation;                                    // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FTransform                                  AdditionalTransform2SocketRelativeTransform;              // 0x0010(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarPendantConfig
// 0x0060
struct FAvatarPendantConfig
{
	struct FString                                     ConfigName;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FTransform                                  SocketRelativeTransform;                                  // 0x0010(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AngularLimitsMin;                                         // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AngularLimitsMax;                                         // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAnimOverrideData
// 0x000C
struct FAvatarAnimOverrideData
{
	TEnumAsByte<enum EAnimLayerType>                   Layer;                                                    // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UClass*                                      AnimListCompClass;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UUAECharAnimListCompBase*                    AnimListCompInstance;                                     // 0x0008(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SlotToMatColor
// 0x0040
struct FSlotToMatColor
{
	EAvatarSlotType                                    SlotID;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FLinearColor>                        MaskColor;                                                // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              GrayScale;                                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0014(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SlotToMatColor.MaskGrayTexture
};

// ScriptStruct ShadowTrackerExtra.SlotToMatPattern
// 0x0078
struct FSlotToMatPattern
{
	EAvatarSlotType                                    SlotID;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SlotToMatPattern.PatternTexture_2
	float                                              IconScale_2;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x0034(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SlotToMatPattern.PatternTexture_3
	float                                              IconScale_3;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconOffset;                                               // 0x0064(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemAvatarData
// 0x0058
struct FItemAvatarData
{
	struct FName                                       SlotID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ItemAvatarData.MatInstance
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ItemAvatarData.LobbyMatInstance
};

// ScriptStruct ShadowTrackerExtra.LobbyGenderAnimData
// 0x0050
struct FLobbyGenderAnimData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.LobbyGenderAnimData.BoyAnim
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.LobbyGenderAnimData.GirlAnim
};

// ScriptStruct ShadowTrackerExtra.EmoteAnimCharacterConfig
// 0x0060
struct FEmoteAnimCharacterConfig
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.EmoteAnimCharacterConfig.Character
	unsigned char                                      UnknownData01[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0030(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.EmoteAnimConfig
// 0x00D0
struct FEmoteAnimConfig
{
	struct FName                                       GenderStr;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.EmoteAnimConfig.MainCharacter
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.EmoteAnimConfig.MainCharacterAnimAsset
	bool                                               CanRotateMainCharacter;                                   // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FTransform                                  MainCharacterTransform;                                   // 0x0060(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               RotateBackToZero;                                         // 0x0090(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	class ULevelSequence*                              EmoteLevelSequence;                                       // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FEmoteAnimCharacterConfig>           MultiFollowerCharacters;                                  // 0x0098(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData05[0x28];                                      // 0x00A4(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.EmoteAnimConfig.FollowerCharacter
};

// ScriptStruct ShadowTrackerExtra.GrenadeParticleSystemAsset
// 0x0040
struct FGrenadeParticleSystemAsset
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.GrenadeParticleSystemAsset.GrenadeParticleSystem
	struct FName                                       Name;                                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.GrenadeSoundAsset
// 0x0040
struct FGrenadeSoundAsset
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.GrenadeSoundAsset.GrenadeSound
	struct FName                                       Name;                                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PlaneAvatarData
// 0x0030
struct FPlaneAvatarData
{
	struct FName                                       SlotID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PlaneAvatarData.MatInstance
};

// ScriptStruct ShadowTrackerExtra.PlaneEffectData
// 0x0070
struct FPlaneEffectData
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PlaneEffectData.ParticleSystem
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleSysParam>                   InstanceParameters;                                       // 0x0060(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PickupItemDataSortingInfo
// 0x0038
struct FPickupItemDataSortingInfo
{
	struct FPickUpItemData                             Data;                                                     // 0x0000(0x0030) (BlueprintVisible)
	bool                                               bHighPriority;                                            // 0x0030(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemDefineSortingInfo
// 0x0028
struct FItemDefineSortingInfo
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018) (BlueprintVisible)
	bool                                               bUsed;                                                    // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMainHand;                                                // 0x0019(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                Count;                                                    // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0020(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SearchedPickUpItemResult
// 0x0038
struct FSearchedPickUpItemResult
{
	class APickUpWrapperActor*                         Wrapper;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FPickUpItemData                             MainItemData;                                             // 0x0008(0x0030) (BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.BattleSearchItemSortingInfo
// 0x0048
struct FBattleSearchItemSortingInfo
{
	struct FSearchedPickUpItemResult                   SearchItemResult;                                         // 0x0000(0x0038) (BlueprintVisible)
	bool                                               bHighPriority;                                            // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                pickCount;                                                // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BattleSearchBoxSortingInfo
// 0x0048
struct FBattleSearchBoxSortingInfo
{
	struct FSearchedPickUpItemResult                   pickUpItemResult;                                         // 0x0000(0x0038) (BlueprintVisible)
	bool                                               bHighPriority;                                            // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                pickCount;                                                // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BattleItemSortingInfo
// 0x0020
struct FBattleItemSortingInfo
{
	struct FItemDefineID                               ItemDefineID;                                             // 0x0000(0x0018) (BlueprintVisible)
	bool                                               bHighPriority;                                            // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SearchedTombBoxAndWrapperListResult
// 0x0010
struct FSearchedTombBoxAndWrapperListResult
{
	class APlayerTombBox*                              Box;                                                      // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSearchedPickUpItemResult>           SearchedPickUpItemResultList;                             // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachItemUnit
// 0x0020
struct FWeaponAttachItemUnit
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018)
	EWeaponAttachmentSocketType                        socket;                                                   // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.JudgePickupUsefulItem
// 0x0038
struct FJudgePickupUsefulItem
{
	struct FPickUpItemData                             MainItemData;                                             // 0x0000(0x0030) (Edit, BlueprintVisible)
	int                                                NetGUIDOffsetValue;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DropedByPlayer;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BattleWeaponItemDisplayData
// 0x0018
struct FBattleWeaponItemDisplayData
{
	struct FString                                     ItemName;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     WhiteIconPath;                                            // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.PickUpWrapperItem
// 0x0040
struct FPickUpWrapperItem
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018) (BlueprintVisible)
	int                                                Count;                                                    // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FBattleItemAdditionalData>           AdditionalData;                                           // 0x001C(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                ParentIndex;                                              // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ParentSideAssociationName;                                // 0x0030(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemInstanceID;                                           // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CreateBattleItemHandleAsyncRequest
// 0x0038
struct FCreateBattleItemHandleAsyncRequest
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018)
	class UObject*                                     Outer;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Path;                                                     // 0x001C(0x000C) (ZeroConstructor)
	struct FScriptDelegate                             Callback;                                                 // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.CreateBattleItemHandleListAsyncRequest
// 0x0030
struct FCreateBattleItemHandleListAsyncRequest
{
	TArray<struct FItemDefineID>                       DefineIDList;                                             // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FString>                             PathList;                                                 // 0x000C(0x000C) (ZeroConstructor)
	class UObject*                                     Outer;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FScriptDelegate                             Callback;                                                 // 0x0020(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.ItemBeOverrideRecordData
// 0x003C
struct FItemBeOverrideRecordData
{
	TMap<int, struct FItemRecordData>                  BeOverrideMapItemRecord;                                  // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ActivityItemData
// 0x0030
struct FActivityItemData
{
	struct FItemDefineID                               PumpkinLanternItem;                                       // 0x0000(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FItemDefineID                               PumpkinEnergyItem;                                        // 0x0018(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.ActivityConfigData
// 0x003C
struct FActivityConfigData
{
	TMap<int, int>                                     Lv2EnergyCount;                                           // 0x0000(0x0050) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SpecialItemData
// 0x0001
struct FSpecialItemData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.EquipmentBrief
// 0x000C
struct FEquipmentBrief
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BPID;                                                     // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticleSoftWrapper
// 0x0060
struct FParticleSoftWrapper
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ParticleSoftWrapper.Template
	struct FVector                                     Location;                                                 // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FName                                       AttachSocketName;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoLoad;                                                // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                ValidDeviceLevel;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticleSoftWrapperArray
// 0x000C
struct FParticleSoftWrapperArray
{
	TArray<struct FParticleSoftWrapper>                WrapperArray;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehCharAnimDataWrapper
// 0x0018
struct FVehCharAnimDataWrapper
{
	struct FName                                       AnimCompTag;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVehCharAnimData>                    VehCharAnimDataList;                                      // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WheelHubSetup
// 0x0020
struct FWheelHubSetup
{
	class UClass*                                      WheelClass;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       TireBoneName;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               AssociationBoneName;                                      // 0x0010(0x000C) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleWheelHP
// 0x0020
struct FSTExtraVehicleWheelHP
{
	float                                              HPMax;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DontDamageWheels;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FName                                       BoneName;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               AssociationBoneName;                                      // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleAvatarProperty
// 0x00A0
struct FVehicleAvatarProperty
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleAvatarProperty.TPPMesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleAvatarProperty.FPPMesh
	TArray<struct FWheelSetup>                         WheelSetups;                                              // 0x0050(0x000C) (Edit, ZeroConstructor)
	TArray<struct FWheelHubSetup>                      WheelHubSetups;                                           // 0x005C(0x000C) (Edit, ZeroConstructor)
	TArray<struct FSTExtraVehicleWheelHP>              WheelsHP;                                                 // 0x0068(0x000C) (Edit, ZeroConstructor)
	struct FVehicleTransmissionData                    GearSetup;                                                // 0x0074(0x0028) (Edit)
	unsigned char                                      UnknownData02[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachmentAttrModify
// 0x0040
struct FWeaponAttachmentAttrModify
{
	struct FString                                     ModifyAttr;                                               // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	EAttrOperator                                      Op;                                                       // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bModifyResource;                                          // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	float                                              ModifyValue;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0014(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponAttachmentAttrModify.ModifyResValue
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachmentDesc
// 0x0018
struct FWeaponAttachmentDesc
{
	struct FText                                       Desc;                                                     // 0x0000(0x000C) (Edit, DisableEditOnInstance)
	struct FText                                       DescValue;                                                // 0x000C(0x000C) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.ParticleRes
// 0x0010
struct FParticleRes
{
	class UParticleSystem*                             ParticleRes;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       AttachSocket;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UIWidgetRes
// 0x0050
struct FUIWidgetRes
{
	class UClass*                                      UserWidget;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       AttachSocket;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  Trans;                                                    // 0x0010(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DrawSize;                                                 // 0x0040(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowDefault;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseScreenSpace;                                          // 0x0049(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponMeshCfg
// 0x0148
struct FWeaponMeshCfg
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.stMesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.skMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.stMeshLod
	unsigned char                                      UnknownData03[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.skMeshLod
	unsigned char                                      UnknownData04[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.MeshMat
	struct FName                                       MeshMatSlotName;                                          // 0x00C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x28];                                      // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.OverrideMatByGameMode
	class UMaterialInterface*                          baseMat;                                                  // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData07[0x28];                                      // 0x00FC(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.WeaponMeshCfg.baseMatClass
	TArray<struct FParticleRes>                        ParticleEffects;                                          // 0x0128(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FUIWidgetRes>                        WidgetList;                                               // 0x0134(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	EMeshType                                          meshType;                                                 // 0x0140(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplacedAttament
// 0x0168
struct FReplacedAttament
{
	TArray<struct FItemDefineID>                       targetWeaponIDList;                                       // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FWeaponMeshCfg                              replacedAttachmentCfg;                                    // 0x0010(0x0148) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FWeaponMeshCfg>                      ExtReplacedAttachmentCfgList;                             // 0x0158(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                replacedAttachmentMatIndex;                               // 0x0164(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachmentConfig
// 0x01F0
struct FWeaponAttachmentConfig
{
	struct FText                                       AttachmentName;                                           // 0x0000(0x000C) (Edit, DisableEditOnInstance)
	EWeaponAttachmentSocketType                        AttachmentSocketType;                                     // 0x000C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponSubSlotType                                 SubSlot;                                                  // 0x000D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EOpticalSightType                                  SightType;                                                // 0x000E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsExtendMaxBulletNumInOneClip;                            // 0x000F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsSilencer;                                               // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsFireSuppressor;                                         // 0x0011(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsCompensator;                                            // 0x0012(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0013(0x0001) MISSED OFFSET
	TArray<struct FWeaponAttachmentAttrModify>         WeaponAttachmentAttrModifys;                              // 0x0014(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FWeaponAttachmentDesc>               WeaponAttachmentDescs;                                    // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<int, struct FName>                            socketTypeToName;                                         // 0x002C(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FWeaponMeshCfg                              MeshPackage;                                              // 0x0068(0x0148) (Edit, DisableEditOnInstance)
	TArray<struct FWeaponMeshCfg>                      ExtMeshList;                                              // 0x01B0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FReplacedAttament>                   replacementWeapon;                                        // 0x01BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UAnimationAsset*>                     AttachmentAnimList;                                       // 0x01C8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	struct FItemDefineID                               ParentID;                                                 // 0x01D8(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.WeaponPendantSocket
// 0x0070
struct FWeaponPendantSocket
{
	EWeaponPendantSocketType                           PendantSocketType;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                PendantIndex;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsOpenConstraint;                                         // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FAvatarPendantConfig                        AnimConstraint;                                           // 0x0010(0x0060) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.WeaponPendantMap
// 0x0010
struct FWeaponPendantMap
{
	int                                                WeaponId;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FWeaponPendantSocket>                PendantInfoList;                                          // 0x0004(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.WeaponKillEffectCfg
// 0x0004
struct FWeaponKillEffectCfg
{
	class UClass*                                      DeadInventoryBoxTemplate;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIControllerCachedData
// 0x0028
struct FAIControllerCachedData
{
	class ASTExtraBaseCharacter*                       ControlledPawn;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x0004(0x0024) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AIShootMissInfo
// 0x0018
struct FAIShootMissInfo
{
	float                                              MissMaxRangeTime;                                         // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MissMinRangeTime;                                         // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MissCDTime;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MissResetTime;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MissResetConfig;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanMissShoot;                                            // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvengerItem
// 0x0008
struct FAvengerItem
{
	int                                                ItemTableID;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ScopeZoomConfig
// 0x000C
struct FScopeZoomConfig
{
	int                                                DisplayMaxScale;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DisplayMinScale;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 FovCurve;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DollyZoomParam
// 0x000C
struct FDollyZoomParam
{
	float                                              FOV;                                                      // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Offset;                                                   // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DynamicCompConfig
// 0x0008
struct FDynamicCompConfig
{
	bool                                               bIsServerOnly;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UClass*                                      DynamicCompClass;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SubSystemConfig
// 0x0018
struct FSubSystemConfig
{
	ESubSystemType                                     SubSystemId;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnable;                                                  // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EConstructType                                     ConstructType;                                            // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	class UClass*                                      SubSystemClass;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDynamicCompConfig                          DCC_PlayerController;                                     // 0x0008(0x0008) (Edit)
	struct FDynamicCompConfig                          DCC_PlayerPawn;                                           // 0x0010(0x0008) (Edit)
};

// ScriptStruct ShadowTrackerExtra.GameModeParms
// 0x00D8
struct FGameModeParms
{
	struct FSubSystemConfig                            SSC_DeferredExitGame;                                     // 0x0000(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_RecallTeammate;                                       // 0x0018(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_RescueHelicopter;                                     // 0x0030(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_HeavyWeapon;                                          // 0x0048(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_TDMHardPoint;                                         // 0x0060(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_VisualField;                                          // 0x0078(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_WorldActorFlag;                                       // 0x0090(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_SuperCold;                                            // 0x00A8(0x0018) (Edit)
	struct FSubSystemConfig                            SSC_ARWeaponManager;                                      // 0x00C0(0x0018) (Edit)
};

// ScriptStruct ShadowTrackerExtra.BornPlayerStartData
// 0x0010
struct FBornPlayerStartData
{
	int                                                BornPointID;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class ASTExtraPlayerStart*>                 PlayerStarts;                                             // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GameModeParam
// 0x004C
struct FGameModeParam
{
	float                                              Radius0;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius1;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius3;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUsingPolygon;                                            // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              Radius2;                                                  // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector2D>                           PolygonPoints;                                            // 0x0014(0x000C) (Edit, ZeroConstructor)
	float                                              BlueCircleRadius;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MapCenter;                                                // 0x0024(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              PlaneSpeed;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlaneHeight;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CanOpenParachuteHeight;                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ForceOpenParachuteHeight;                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CloseParachuteHeight;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCrossCenter;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              FixedJumpPointRate;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlaneTypes
// 0x0010
struct FPlaneTypes
{
	int                                                SeasonIdx;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlaneClassFullPath;                                       // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BulletImpactFXTargetCullingByQualityLeveConfigItem
// 0x001C
struct FBulletImpactFXTargetCullingByQualityLeveConfigItem
{
	TEnumAsByte<enum ERenderQuality>                   QualityLevel;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData01[0xC];                                       // 0x0001(0x000C) UNKNOWN PROPERTY: ArrayProperty ShadowTrackerExtra.BulletImpactFXTargetCullingByQualityLeveConfigItem.TargetClassConfigList
	TArray<class UClass*>                              CachedClassList;                                          // 0x0010(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ClientSettingBaseOnGameMode
// 0x0038
struct FClientSettingBaseOnGameMode
{
	bool                                               bEnableBulletImpactFXTargetCullingByQualityLevel;         // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FBulletImpactFXTargetCullingByQualityLeveConfigItem> BulletImpactFXTargetCullingByQualityLeveConfigList;       // 0x0004(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bBulletImpactFXAttachToTarget;                            // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSimulateClientEnableOBBulletTrackEffect;                 // 0x0011(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAutonomousClientEnableOBBulletTrackEffect;               // 0x0012(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0013(0x0001) MISSED OFFSET
	TArray<int>                                        DisableBulletTrackDeviceQualityLevelConfigList;           // 0x0014(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        DisableSimulateClientBulletImpactFXDeviceQualityLevelConfigList;// 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        DisableSimulateClientMuzzleFXDeviceQualityLevelConfigList;// 0x002C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AddItemInfo
// 0x000C
struct FAddItemInfo
{
	int                                                AddItemID;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AddItemNum;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               TotalNumLimit;                                            // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemAttach
// 0x0010
struct FItemAttach
{
	int                                                BaseItemID;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAddItemInfo>                        AttachItemList;                                           // 0x0004(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RespawnItemConfigInst
// 0x0008
struct FRespawnItemConfigInst
{
	int                                                RandomWeight;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RespawnItemConfigClass;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DSTickRateOptimize
// 0x0010
struct FDSTickRateOptimize
{
	float                                              TickFrequency;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetConsiderFrequency;                                     // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetUpdateFrequency;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinNetUpdateFrequency;                                    // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GroupPlayers
// 0x000C
struct FGroupPlayers
{
	TArray<uint32_t>                                   Players;                                                  // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GameModeCVarConfigItem
// 0x0018
struct FGameModeCVarConfigItem
{
	struct FString                                     Key;                                                      // 0x0000(0x000C) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIControllerList
// 0x000C
struct FAIControllerList
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AIPawnPoolItem
// 0x0008
struct FAIPawnPoolItem
{
	class ASTExtraBaseCharacter*                       PlayerPawn;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirDropPathData3D
// 0x003C
struct FAirDropPathData3D
{
	int                                                AirDropIndex;                                             // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartLoc3D;                                               // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     TargetLoc3D;                                              // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TArray<struct FVector>                             AirDropLocs3D;                                            // 0x001C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bIsDrawAirDropFlightPath;                                 // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FVector                                     MapCenter;                                                // 0x002C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              Radius;                                                   // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirAttackOrder
// 0x0030
struct FAirAttackOrder
{
	int                                                waveindex;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlightHeight;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SeaLevelHeight;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int16_t>                                    bombsInterval;                                            // 0x000C(0x000C) (ZeroConstructor)
	TArray<struct FVector2D>                           bombsPosition2D;                                          // 0x0018(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0024(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VisualFieldFeatureParam
// 0x0030
struct FVisualFieldFeatureParam
{
	float                                              VisualFieldUpdateInterval;                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVisualFieldDistanceSquared;                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               VisualCheckBoneList;                                      // 0x0008(0x000C) (Edit, ZeroConstructor)
	float                                              DefaultFOVAngle;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<enum ECollisionChannel>>        VisualCheckChanelList;                                    // 0x0018(0x000C) (Edit, ZeroConstructor)
	TArray<class UClass*>                              ExcludeCheckCharacterClass;                               // 0x0024(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GameModeFeatureSetData
// 0x0004
struct FGameModeFeatureSetData
{
	uint32_t                                           GameModeFeatureSet_A;                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherChangeEvent
// 0x0002
struct FWeatherChangeEvent
{
	EWeatherStatusType                                 WeaterType;                                               // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EWeatherChangeEvent                                WeaterChangeEvent;                                        // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomMarkEventData
// 0x001C
struct FCustomMarkEventData
{
	float                                              CreateTime;                                               // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CustomState;                                              // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     CustomString;                                             // 0x0008(0x000C) (BlueprintVisible, ZeroConstructor)
	EAddMarkFlag                                       InWhichMap;                                               // 0x0014(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                CustomCanvasTag;                                          // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MarkSyncData
// 0x0058
struct FMarkSyncData
{
	EMarkStatus                                        Status;                                                   // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                TypeId;                                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0008(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0014(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                InstanceID;                                               // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCustomMarkEventData                        CustomMarkEvent;                                          // 0x0024(0x001C) (BlueprintVisible)
	EAddMarkFlag                                       MapAdded;                                                 // 0x0040(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ActorUniqueID;                                            // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLocalData;                                               // 0x0048(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	TArray<TWeakObjectPtr<class UProperty>>            DeltaProperties;                                          // 0x004C(0x000C) (ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
};

// ScriptStruct ShadowTrackerExtra.ActorExtraComponents
// 0x000C
struct FActorExtraComponents
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) UNKNOWN PROPERTY: ArrayProperty ShadowTrackerExtra.ActorExtraComponents.BPComponents
};

// ScriptStruct ShadowTrackerExtra.ReConnectGameStateInfo
// 0x0068
struct FReConnectGameStateInfo
{
	bool                                               bIsLessning;                                              // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CircleStateStartServerWorldSecond;                        // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CircleStatusLastTime;                                     // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CircleStatusElapsedTime;                                  // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECircleInfo>                      CircleStatus;                                             // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	struct FVector                                     BlueCircle;                                               // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     OriginalBlueCircle;                                       // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     WhiteCircle;                                              // 0x002C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bActiveScreenSize;                                        // 0x0038(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              ScreenSizeFactor;                                         // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtraRadius;                                              // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EAirAttackInfo>                   AirAttackStatus;                                          // 0x0044(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FVector                                     AirAttackArea;                                            // 0x0048(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                AirAttackWave;                                            // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossCountDown;                                            // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BossBornPos;                                              // 0x005C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GetCircleInfo
// 0x0048
struct FGetCircleInfo
{
	bool                                               bIsLessning;                                              // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CircleStateStartServerWorldSecond;                        // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CircleStatusLastTime;                                     // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CircleStatusElapsedTime;                                  // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECircleInfo>                      CircleStatus;                                             // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	struct FVector                                     BlueCircle;                                               // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     OriginalBlueCircle;                                       // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     WhiteCircle;                                              // 0x002C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bActiveScreenSize;                                        // 0x0038(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              ScreenSizeFactor;                                         // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtraRadius;                                              // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurrentCircleIndex;                                       // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CorpsBaseInfo
// 0x0018
struct FCorpsBaseInfo
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     CorpsName;                                                // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                CorpsHeadIconID;                                          // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CorpsGrad;                                                // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CorpsDetailInfo
// 0x0034
struct FCorpsDetailInfo
{
	struct FCorpsBaseInfo                              CorpBaseInfo;                                             // 0x0000(0x0018) (BlueprintVisible, BlueprintReadOnly)
	int                                                CorpsLiveNumber;                                          // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CorpsTotalNumber;                                         // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TotalKillNumber;                                          // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OnOutGameRealTimeRank;                                    // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSurvivalTime;                                          // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TotalDamage;                                              // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsOutGame;                                               // 0x0030(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CorpsToPlayerKeyInfo
// 0x0008
struct FCorpsToPlayerKeyInfo
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CorpsID;                                                  // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerStartObjets
// 0x0028
struct FPlayerStartObjets
{
	class UClass*                                      Objects;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnLoc;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    SpawnRot;                                                 // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterAutoFollowStruct
// 0x0008
struct FCharacterAutoFollowStruct
{
	bool                                               IsFollowing;                                              // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class ASTExtraBaseCharacter*                       Target;                                                   // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterLocAndRot
// 0x0018
struct FCharacterLocAndRot
{
	struct FVector                                     Loc;                                                      // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    Rot;                                                      // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VisualFieldMetaInfo
// 0x0010
struct FVisualFieldMetaInfo
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                LayerID;                                                  // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VisualFieldInfo
// 0x0010
struct FVisualFieldInfo
{
	int                                                ViewerLayerID;                                            // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVisualFieldMetaInfo>                VisualFieldMetaInfoList;                                  // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DriveCarNotify
// 0x000C
struct FDriveCarNotify
{
	TEnumAsByte<enum EDriveCar>                        DriveCar;                                                 // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class ASTExtraBaseCharacter*                       Character;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	class ASTExtraWheeledVehicle*                      Vehicle;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GameModePlayerAliasShowInfo
// 0x0044
struct FGameModePlayerAliasShowInfo
{
	struct FGameModePlayerAliasInfo                    AliasInfo;                                                // 0x0000(0x0034) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FString                                     PlayerName;                                               // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class ASTExtraBaseCharacter*                       Character;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterBuffRecord
// 0x0014
struct FCharacterBuffRecord
{
	int                                                BuffID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CauseSkillID;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LayerCount;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       Causer;                                                   // 0x000C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BattleSceneAvatarDisplayInfo
// 0x0038
struct FBattleSceneAvatarDisplayInfo
{
	struct FString                                     PlayerName;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     PlayerUIDStr;                                             // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                PlayerGender;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMVP;                                                   // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	TArray<int>                                        EquipedAvatarList;                                        // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        EquipedWeaponList;                                        // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ProjectileBulletLaunchParams
// 0x0050
struct FProjectileBulletLaunchParams
{
	float                                              Speed;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  Trans;                                                    // 0x0010(0x0030) (BlueprintVisible, IsPlainOldData)
	class AActor*                                      OwningWeapon;                                             // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Instigator;                                               // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ShootID;                                                  // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ApplyRadialDamageParams
// 0x0078
struct FApplyRadialDamageParams
{
	float                                              BaseDamage;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumDamage;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseMomentumMag;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Origin;                                                   // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              DamageInnerRadius;                                        // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageOuterRadius;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTraceComplex;                                            // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0025(0x000B) MISSED OFFSET
	bool                                               CanPenetrationdamage;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	class UClass*                                      DamageTypeClass;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AActor*>                              IgnoreActors;                                             // 0x0038(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              IgnoreClasses;                                            // 0x0044(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class AActor*                                      DamageCauser;                                             // 0x0050(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AController*                                 InstigatedBy;                                             // 0x0054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CollisionFreeRadius;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum ECollisionChannel>                DamageChannel;                                            // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              AddtionalDamage;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum EDamageType>                      DamageEventType;                                          // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              HorizontalCoverRatio;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalCoverRatio;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDrawVisibilityTraceLine;                                 // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExplosionTestOnly;                                       // 0x0071(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayHurtAnim;                                            // 0x0072(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0073(0x0001) MISSED OFFSET
	float                                              SphereOverlapRadius;                                      // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ScanTargetRepInfo
// 0x002C
struct FScanTargetRepInfo
{
	TWeakObjectPtr<class ASTExtraPlayerState>          TargetState;                                              // 0x0000(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                MarkInstID;                                               // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MarkCircleCenter;                                         // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              MarkCircleRadius;                                         // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationAngle;                                            // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerKey;                                                // 0x0020(0x000C) (BlueprintVisible, ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
};

// ScriptStruct ShadowTrackerExtra.ScanOwnerInfo
// 0x0014
struct FScanOwnerInfo
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              ScanRadius;                                               // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TimeLeft;                                                 // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HomeBaseRegion
// 0x0024
struct FHomeBaseRegion
{
	int                                                RegionID;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   P1;                                                       // 0x0004(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   P2;                                                       // 0x000C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   P3;                                                       // 0x0014(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   P4;                                                       // 0x001C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HomeMapBaseRegion
// 0x0048
struct FHomeMapBaseRegion
{
	struct FHomeBaseRegion                             BaseRegionLeft;                                           // 0x0000(0x0024) (Edit, BlueprintVisible)
	struct FHomeBaseRegion                             BaseRegionRight;                                          // 0x0024(0x0024) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchPlayerStartSelectConfig
// 0x000C
struct FDeathMatchPlayerStartSelectConfig
{
	bool                                               bIsEnabled;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              NoEnemyRangeRadius;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExistTeammateRanageRadius;                                // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HardPointStopJoinConfig
// 0x000C
struct FHardPointStopJoinConfig
{
	bool                                               bIsEnabled;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                HardPointIndex;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActivatedTime;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchPlayerInfo
// 0x0048
struct FDeathMatchPlayerInfo
{
	uint64_t                                           UId;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     UIDString;                                                // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     iconUrl;                                                  // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      gender;                                                   // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PlatformGender;                                           // 0x002D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                PlayerLevel;                                              // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SegmentLevel;                                             // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvatarBoxId;                                              // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAchievementPrize                           EquippedAchievementPrize;                                 // 0x003C(0x000C) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchPlayerStateData
// 0x0070
struct FDeathMatchPlayerStateData
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FDeathMatchPlayerInfo                       DeathMatchPlayerInfo;                                     // 0x0008(0x0048) (BlueprintVisible, BlueprintReadOnly)
	int                                                TeamID;                                                   // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Rank;                                                     // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Kills;                                                    // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Assists;                                                  // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Deaths;                                                   // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ContinuouKills;                                           // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAIPlayer;                                               // 0x006C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DeathMatchTeamScoreData
// 0x0024
struct FDeathMatchTeamScoreData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Result;                                                   // 0x0004(0x000C) (ZeroConstructor)
	int                                                TeamRank;                                                 // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeamScore;                                                // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FDeathMatchPlayerStateData>          PlayerStateDatas;                                         // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ActivatedHardPointDataRecord
// 0x0058
struct FActivatedHardPointDataRecord
{
	class AHardPointActor*                             HardPointActor;                                           // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinTeamID;                                                // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0008(0x0050) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HardPoint_PlayerScoreData
// 0x0008
struct FHardPoint_PlayerScoreData
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                OccupyScore;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HardPoint_TeamScoreData
// 0x0014
struct FHardPoint_TeamScoreData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                OccupyScore;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FHardPoint_PlayerScoreData>          PlayerScoreDataList;                                      // 0x0008(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchDamageCauserRecordData
// 0x000C
struct FDeathMatchDamageCauserRecordData
{
	int                                                DamageType;                                               // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MurderWeaponID;                                           // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Damage;                                                   // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchDamageRecordData
// 0x0018
struct FDeathMatchDamageRecordData
{
	struct FString                                     VictimName;                                               // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Damage;                                                   // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDeathMatchDamageResult                            DamageResult;                                             // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              LastTime;                                                 // 0x0014(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeathMatchPlayerDieData
// 0x0098
struct FDeathMatchPlayerDieData
{
	TArray<struct FDeathMatchDamageCauserRecordData>   KillerCauserRecords;                                      // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FDeathMatchPlayerStateData                  KillerStateData;                                          // 0x0010(0x0070) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FDeathMatchPlayerStateData>          AssisterStateDatas;                                       // 0x0080(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FDeathMatchDamageRecordData>         VictimDamageRecords;                                      // 0x008C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIAttrObserver
// 0x0008
struct FAIAttrObserver
{
	EAITriggerAttrType                                 AttrType;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAIAttrCompareType                                 CompareType;                                              // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                ComparePercentValue;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DifficultyShootingConfig
// 0x0010
struct FDifficultyShootingConfig
{
	EAIWeaponShootType                                 WeaponShotType;                                           // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              DeviationScale;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RandomShootFreqRange;                                     // 0x0008(0x0008) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ShootingAimConfig
// 0x0014
struct FShootingAimConfig
{
	EAIWeaponShootType                                 WeaponShotType;                                           // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              AimDeviationScale;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinAimDeviationScale;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RandomShootFreqRange;                                     // 0x000C(0x0008) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ShootingAimConfigContainer
// 0x003C
struct FShootingAimConfigContainer
{
	TMap<float, struct FShootingAimConfig>             AimConfig;                                                // 0x0000(0x0050) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponType2Range
// 0x000C
struct FWeaponType2Range
{
	TEnumAsByte<enum EWeaponTypeNew>                   WeaponType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Range;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NightRange;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponTypeToRange
// 0x0008
struct FWeaponTypeToRange
{
	TEnumAsByte<enum EWeaponTypeNew>                   WeaponType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Range;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherToRange
// 0x000C
struct FWeatherToRange
{
	TArray<struct FWeaponTypeToRange>                  Ranges;                                                   // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ShapeRangeParam
// 0x000C
struct FShapeRangeParam
{
	float                                              CircleR;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectorR;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectorDegree;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponTypeToRangeWithPawnState
// 0x0040
struct FWeaponTypeToRangeWithPawnState
{
	TEnumAsByte<enum EWeaponTypeNew>                   WeaponType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TMap<EPawnState, struct FShapeRangeParam>          StateRange;                                               // 0x0004(0x0050) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.UpdateItemInterval
// 0x0008
struct FUpdateItemInterval
{
	int                                                Distance;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              interval;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.EnemyInfo
// 0x0048
struct FEnemyInfo
{
	TEnumAsByte<enum EEnemyType>                       EnemyType;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Tag;                                                      // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MemoryTime;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int16_t                                            RevengeValue_Sight;                                       // 0x0014(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	int16_t                                            RevengeValue_Memory;                                      // 0x0016(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	int16_t                                            RevengeValue_NearDeath;                                   // 0x0018(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	float                                              RevengeValue_PerMetre;                                    // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceStartOffset;                                         // 0x0020(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     TraceEndOffset;                                           // 0x002C(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      Belonging;                                                // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              HitProtectTime;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsBlockTrace;                                             // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SightFanInfo
// 0x0008
struct FSightFanInfo
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InTroubleTeleportConfig
// 0x0010
struct FInTroubleTeleportConfig
{
	float                                              SrcCheckRadius;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DstCheckRadius;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           TryFindDstLocNum;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyTeleportToLand;                                       // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DeliverControlRatingConfig
// 0x0010
struct FDeliverControlRatingConfig
{
	int                                                Rating;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius1;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius2;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIDistantJudgeNoftify
// 0x0028
struct FAIDistantJudgeNoftify
{
	float                                              RightValue;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SetBBValue;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FBlackboardKeySelector                      NotifyBlackBoardKey;                                      // 0x0008(0x0020) (Edit)
};

// ScriptStruct ShadowTrackerExtra.BPAISenseGrenadeDistanceConfig
// 0x0008
struct FBPAISenseGrenadeDistanceConfig
{
	EAISenseGrenadeType                                GrenadeType;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              GrenadeSenseDistance;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AISenseGrenadeClassConfig
// 0x000C
struct FAISenseGrenadeClassConfig
{
	TArray<class UClass*>                              IncludeClassArray;                                        // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AISenseGrenadeBBKeyInfo
// 0x0028
struct FAISenseGrenadeBBKeyInfo
{
	EAISenseGrenadeType                                GrenadeType;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FBlackboardKeySelector                      BBKeyGrenadeActor;                                        // 0x0008(0x0020) (Edit)
};

// ScriptStruct ShadowTrackerExtra.AvoidanceBoxTraceSettings
// 0x0028
struct FAvoidanceBoxTraceSettings
{
	float                                              TraceForwardOffset;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceLength;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceHalfSize;                                            // 0x0008(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    TraceOrientation;                                         // 0x0014(0x000C) (Edit, IsPlainOldData)
	float                                              TopSpeedTraceSizeMultiplier;                              // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TopSpeed;                                                 // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ObjectTypeAvoidanceWeights
// 0x004C
struct FObjectTypeAvoidanceWeights
{
	int                                                DefaultAvoidanceResponseWeight;                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, int>                           ActorFilterResponseMap;                                   // 0x0004(0x0050) (Edit, ZeroConstructor)
	TArray<class UClass*>                              IgnoreActorFilterList;                                    // 0x0040(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TaskAddItem
// 0x0008
struct FTaskAddItem
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DifficultyTimeConfig
// 0x0008
struct FDifficultyTimeConfig
{
	float                                              WaitTime;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomDeviation;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GeneralRandLocationRetryRule
// 0x000C
struct FGeneralRandLocationRetryRule
{
	float                                              AngleRangeMin;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleRangeMax;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScanStep;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MobRandLocationRetryRule
// 0x000C
struct FMobRandLocationRetryRule
{
	float                                              AngleRangeMin;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleRangeMax;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RetryTimes;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AITaskNodeThrowGrenadeTargetLocRandomableConfig
// 0x0008
struct FAITaskNodeThrowGrenadeTargetLocRandomableConfig
{
	float                                              RandomRange;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RandomTimes;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FindBuildingRatingConfig
// 0x0008
struct FFindBuildingRatingConfig
{
	int                                                Rating;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SearchRadius;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BulletHitInfoUploadData
// 0x00F0
struct FBulletHitInfoUploadData
{
	struct FVector                                     ImpactPoint;                                              // 0x0000(0x000C) (IsPlainOldData)
	struct FVector_NetQuantize                         RelativeImpactPoint;                                      // 0x000C(0x000C)
	struct FVector_NetQuantizeNormal                   ImpactNormal;                                             // 0x0018(0x000C)
	struct FVector                                     VictimLocation;                                           // 0x0024(0x000C) (IsPlainOldData)
	struct FVector                                     BulletPos;                                                // 0x0030(0x000C) (IsPlainOldData)
	struct FVector                                     ShootMomentMuzzlePos;                                     // 0x003C(0x000C) (IsPlainOldData)
	struct FVector2D                                   ShootDir2D;                                               // 0x0048(0x0008) (IsPlainOldData)
	unsigned char                                      SurfaceType;                                              // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	uint32_t                                           ShootID;                                                  // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BulletTypeSpecialID;                                      // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           CompensationTime;                                         // 0x005C(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          Component;                                                // 0x0068(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                TimeStamp;                                                // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ClientShootTime;                                          // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitBodyType;                                              // 0x0078(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	uint32_t                                           CharacterImpactOffsetSquared;                             // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MuzzleFloorHeight;                                        // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponOwnerHeadPos;                                       // 0x0084(0x000C) (IsPlainOldData)
	float                                              DamageRate;                                               // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsFirstImpact;                                           // 0x0094(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	struct FVector                                     GunTailPos;                                               // 0x0098(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	struct FName                                       BoneName;                                                 // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTransform                                  BoneTrans;                                                // 0x00B0(0x0030) (IsPlainOldData)
	unsigned char                                      ImpactEffectMask;                                         // 0x00E0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xF];                                       // 0x00E1(0x000F) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LocalShootHitData
// 0x0078
struct FLocalShootHitData
{
	uint32_t                                           ShootID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         ShootingDeviation;                                        // 0x0004(0x000C)
	struct FVector_NetQuantize                         BulletsBornPosition;                                      // 0x0010(0x000C)
	int                                                BulletFlyDistance;                                        // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BulletDown;                                               // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int8_t                                             CurBullet;                                                // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                ShootInterval;                                            // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BulletFlyTime;                                            // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BulletShootTime;                                          // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BulletHitTime;                                            // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AimFov;                                                   // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bulletDamageReduceRatio;                                  // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FVector_NetQuantize                         ShootingRecoil;                                           // 0x0040(0x000C)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            ClientStartTime;                                          // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MrpcsFlow;                                                // 0x0058(0x000C) (ZeroConstructor)
	int                                                AutoAimSpeed;                                             // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AutoAimSpeedRateMax;                                      // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AutoAimRangeMax;                                          // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AutoAimRangeRateMax;                                      // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BoardPos
// 0x0008
struct FBoardPos
{
	int                                                X;                                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BoardSideBlurry
// 0x0020
struct FBoardSideBlurry
{
	float                                              Up;                                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Down;                                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Left;                                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Right;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftUp;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftDown;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightUp;                                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightDown;                                                // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.IdeaDecalInfo
// 0x0080
struct FIdeaDecalInfo
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x1D];                                      // 0x0040(0x001D) MISSED OFFSET
	EIdeaDecalParentType                               ParentType;                                               // 0x005D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UPrimitiveComponent>          Parent;                                                   // 0x0060(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0068(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SRecoilInfo
// 0x0064
struct FSRecoilInfo
{
	float                                              VerticalRecoilMin;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilMax;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoilVariation;                                  // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryModifier;                                 // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryClamp;                                    // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalRecoveryMax;                                      // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LeftMax;                                                  // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RightMax;                                                 // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HorizontalTendency;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                RecoilCurve;                                              // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BulletPerSwitch;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimePerSwitch;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               SwitchOnTime;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              RecoilSpeedVertical;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilSpeedHorizontal;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecovertySpeedVertical;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValueClimb;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilValueFail;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifierStand;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifierCrouch;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilModifierProne;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RecoilHorizontalMinScalar;                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BurstEmptyDelay;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ShootSightReturn;                                         // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              ShootSightReturnSpeed;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SDeviation
// 0x0044
struct FSDeviation
{
	float                                              DeviationBase;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationBaseAim;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationBaseADS;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGain;                                      // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainAim;                                   // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationRecoilGainADS;                                   // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMax;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMinMove;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMaxMove;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMultiplier;                                  // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMinRefrence;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationMoveMaxRefrence;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceStand;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceCrouch;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceProne;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationStanceJump;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeviationShoulderMultiplier;                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CameraSettings
// 0x0014
struct FCameraSettings
{
	float                                              TargetArmLength;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LagSpeed;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SocketOffset;                                             // 0x0008(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionPawnClassConfig
// 0x0008
struct FInfectionPawnClassConfig
{
	ECharacterSubType                                  InfectionType;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UClass*                                      InfectionPawn;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AvatarSyncData
// 0x0038
struct FAvatarSyncData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AdditionalItemID;                                         // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SlotID;                                                   // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                SubSlotID;                                                // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                HideState;                                                // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                ReplaceState;                                             // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                FakeItemID;                                               // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	ESlotDescDiff                                      ForceDescDiff;                                            // 0x001C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESyncOperation                                     OperationType;                                            // 0x001D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
	struct FAvatarCustom                               CustomInfo;                                               // 0x0020(0x0014) (BlueprintVisible)
	EForceHideState                                    ForceHideState;                                           // 0x0034(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NetAvatarSyncData
// 0x0018
struct FNetAvatarSyncData
{
	TArray<struct FAvatarSyncData>                     SlotSyncData;                                             // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                gender;                                                   // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BaseID;                                                   // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpdateFlag;                                               // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ForceEquipSlotInfo
// 0x000C
struct FForceEquipSlotInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SlotMeshDesc
// 0x0030
struct FSlotMeshDesc
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UMeshComponent>               MeshComp;                                                 // 0x0004(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FParticleGroup                              ParticleGroup;                                            // 0x000C(0x0024)
};

// ScriptStruct ShadowTrackerExtra.SlotHandleDesc
// 0x0030
struct FSlotHandleDesc
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UItemHandleBase>              EquipHandle;                                              // 0x0004(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UAvatarCustomBase*>                   CustomHandles;                                            // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FSoftObjectPath                             EquipMeshAssetPath;                                       // 0x0018(0x0018)
};

// ScriptStruct ShadowTrackerExtra.AvatarSlotNameConfig
// 0x0078
struct FAvatarSlotNameConfig
{
	TMap<EAvatarSlotType, struct FString>              MaleSlotName;                                             // 0x0000(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<EAvatarSlotType, struct FString>              FemaleSlotName;                                           // 0x003C(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AvatarHideBonesDesc
// 0x000C
struct FAvatarHideBonesDesc
{
	TArray<struct FHideBoneData>                       hideBoneSlots;                                            // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AvatarEffectGroup
// 0x0018
struct FAvatarEffectGroup
{
	TArray<class UParticleSystemComponent*>            ParticleCompList;                                         // 0x0000(0x000C) (ExportObject, ZeroConstructor)
	TArray<struct FAvatarEffectData>                   EffectDataList;                                           // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AvatarAttachMeshGroup
// 0x0018
struct FAvatarAttachMeshGroup
{
	TArray<class UMeshComponent*>                      AttachMeshCompList;                                       // 0x0000(0x000C) (ExportObject, ZeroConstructor)
	TArray<struct FAvatarAttachMeshData>               AttachMeshDataList;                                       // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AvatarAttachMeshFrameSkipMap
// 0x0008
struct FAvatarAttachMeshFrameSkipMap
{
	int                                                LODLevel;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SkipFrame;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AdditonalAvatarStruct
// 0x0010
struct FAdditonalAvatarStruct
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SlotIDList;                                               // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.FakeHeadInfo
// 0x0038
struct FFakeHeadInfo
{
	bool                                               bEnableFakeHead;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.FakeHeadInfo.SoftFakeHeadMesh
	class UClass*                                      FakeHeadAnimBPClass;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ThrowableConfig
// 0x0068
struct FThrowableConfig
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ProjectileClass;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bShowTrajectory : 1;                                      // 0x0008(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0009(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.ThrowableConfig.Ring
	struct FName                                       RingAttachSocket;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionDelayOverride;                                   // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 SpeedCurve;                                               // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 PitchCurve;                                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireDelay;                                                // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProjectileSpawnDelay;                                     // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThrowCooldownDuration;                                    // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PawnMotionContributionMultiplier;                         // 0x0058(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ThrowableAnim
// 0x0008
struct FThrowableAnim
{
	class UAnimMontage*                                Prepare;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                Release;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterThrowData
// 0x0050
struct FCharacterThrowData
{
	struct FVector                                     RelativeLocation_Stand;                                   // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     RelativeLocation_Crouch;                                  // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     RelativeLocation_Prone;                                   // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     RelativeLocation_Vehicle;                                 // 0x0024(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FThrowableAnim                              StandAnim;                                                // 0x0030(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              CrouchAnim;                                               // 0x0038(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              ProneAnim;                                                // 0x0040(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FThrowableAnim                              VehicleAnim;                                              // 0x0048(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ThrowReplaceCharAnimData
// 0x001C
struct FThrowReplaceCharAnimData
{
	TEnumAsByte<enum ECharacterAnimType>               CharacterAnimType;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<class UAnimationAsset*>                     PoseAnimList;                                             // 0x0004(0x000C) (Edit, ZeroConstructor)
	TArray<class UAnimationAsset*>                     FPPPoseAnimList;                                          // 0x0010(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponCreateInstance
// 0x0020
struct FWeaponCreateInstance
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018)
	int                                                SyncTicket;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SpawnAndBackpackWeaponReplicatedData
// 0x0058
struct FSpawnAndBackpackWeaponReplicatedData
{
	class ASTExtraWeapon*                              TargetWeapon;                                             // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       LogicSocket;                                              // 0x0008(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoUse;                                                 // 0x0010(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedSwitch;                                              // 0x0011(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
	struct FItemDefineID                               ID;                                                       // 0x0018(0x0018) (BlueprintVisible)
	bool                                               bResetBulletNum;                                          // 0x0030(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ClientResetBulletNum;                                     // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                OperationIndex;                                           // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      WeaponOwnerActor;                                         // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     OwnerCharacterName;                                       // 0x0040(0x000C) (BlueprintVisible, ZeroConstructor)
	bool                                               bIsValid;                                                 // 0x004C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                SyncTicket;                                               // 0x0050(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AutoTriggerWeaponEventParam
// 0x0030
struct FAutoTriggerWeaponEventParam
{
	int                                                TargetOwnerRole;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EWeaponTriggerEvent                                TargetEvent;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FItemDefineID                               TargetWeaponID;                                           // 0x0008(0x0018) (Edit, BlueprintVisible)
	bool                                               bIgnoreItemIDInstance;                                    // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	TArray<EPawnState>                                 ForceExitPawnStateList;                                   // 0x0024(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MainWeaponTableStruct
// 0x0010
struct FMainWeaponTableStruct
{
	int                                                KeyID;                                                    // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SkillIDList;                                              // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BulletInWeapon
// 0x0008
struct FBulletInWeapon
{
	int                                                BulletID;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BulletInClip
// 0x0010
struct FBulletInClip
{
	int                                                CurBulletNumInClip;                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FBulletInWeapon>                     CurBulletIDList;                                          // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponReconnectReplicateData
// 0x0068
struct FWeaponReconnectReplicateData
{
	class ASTExtraPlayerController*                    OwnerPlayerController;                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      WeaponOwner;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               UseNewReconnect;                                          // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FString                                     OwnerPlayerName;                                          // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FName                                       WeaponInventoryLogicSocket;                               // 0x0018(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FBulletInClip                               WeaponBulletInClip;                                       // 0x0020(0x0010) (BlueprintVisible)
	uint32_t                                           WeaponShootID;                                            // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           WeaponClipID;                                             // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EFreshWeaponStateType>            CurWeaponState;                                           // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ESTEWeaponShootType>              CurShootType;                                             // 0x0039(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                CurShootTotalType;                                        // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FItemDefineID                               DefineID;                                                 // 0x0040(0x0018) (BlueprintVisible)
	int                                                BackpackPistolListIndex;                                  // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCurrentWeapon;                                         // 0x005C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                OperationIndex;                                           // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponReconnectReplicateDataWrapper
// 0x0070
struct FWeaponReconnectReplicateDataWrapper
{
	struct FWeaponReconnectReplicateData               WeaponReconnectReplicateData;                             // 0x0000(0x0068)
	class ASTExtraWeapon*                              Weapon;                                                   // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.QuickChatIDAndAudio
// 0x000C
struct FQuickChatIDAndAudio
{
	int                                                chatTextID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RealTextID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AlternateTextID;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.QuickChatOption
// 0x0008
struct FQuickChatOption
{
	int                                                chatTextID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               audioEvent1;                                              // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.IngameFriendChatMsg
// 0x0024
struct FIngameFriendChatMsg
{
	struct FString                                     Name;                                                     // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Content;                                                  // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsSelf;                                                   // 0x0018(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                MsgType;                                                  // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bReply;                                                   // 0x0020(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.IngameFriendChat
// 0x000C
struct FIngameFriendChat
{
	TArray<struct FIngameFriendChatMsg>                ChatList;                                                 // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.QuickChatFlag
// 0x0020
struct FQuickChatFlag
{
	EChatFlagType                                      Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<int>                                        chatIDList;                                               // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                AlternateChatID;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FlagIndex;                                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                traceDist;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              minDist;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.QuickGroundFlag
// 0x0014
struct FQuickGroundFlag
{
	int                                                Index;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                flagID;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     hitPosition;                                              // 0x0008(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InGameFilterChatMsg
// 0x0010
struct FInGameFilterChatMsg
{
	struct FString                                     PlayerName;                                               // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               isMe;                                                     // 0x000C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InGameChatMsg
// 0x0048
struct FInGameChatMsg
{
	struct FString                                     PlayerName;                                               // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	uint32_t                                           playerIdentifier;                                         // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     msgContent;                                               // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                MsgID;                                                    // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                audioID;                                                  // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemId;                                                   // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerKeyString;                                          // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	bool                                               hitValid;                                                 // 0x0034(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FVector                                     hitPosition;                                              // 0x0038(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                itemIDOnGround;                                           // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.OverlapCullingData
// 0x0008
struct FOverlapCullingData
{
	float                                              UpperCullPlane;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DownerCullPlane;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SyncPlatformMovement
// 0x000C
struct FSyncPlatformMovement
{
	struct FVector                                     Velocity;                                                 // 0x0000(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TempleItemCollisionData
// 0x0003
struct FTempleItemCollisionData
{
	TEnumAsByte<enum ECollisionEnabled>                CollisionType;                                            // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnable;                                                  // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpecialItemToClose;                                      // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CirCleCfg
// 0x0084
struct FCirCleCfg
{
	int                                                CircleID;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DelayTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadiusWhenDestoryMap;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SafeZoneAppeartime;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      BlueCirclePreWarning;                                     // 0x0010(0x000C) (Edit, ZeroConstructor)
	float                                              LastTime;                                                 // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Pain;                                                     // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomBluePoint;                                      // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FVector2D                                   bluepoint;                                                // 0x0028(0x0008) (Edit, IsPlainOldData)
	float                                              blueradius;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomWhitePoint;                                     // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomWhiteStrategy;                                  // 0x0035(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	TArray<struct FVector>                             Whitepoints;                                              // 0x0038(0x000C) (Edit, ZeroConstructor)
	float                                              whiteradius;                                              // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseContainActor;                                         // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              DestinyChance;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActiveScreenSize;                                        // 0x0054(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              ScreenSizeFactor;                                         // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExtraRadius;                                              // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDamageMagnifier;                                   // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              DamageMagnifierRange;                                     // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageMagnifier;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DamageMagnifierCurve;                                     // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             AvoidPoints;                                              // 0x0070(0x000C) (Edit, ZeroConstructor)
	float                                              EdgeDistance;                                             // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseAvoidPoints;                                          // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.KillInfoRecordData
// 0x0048
struct FKillInfoRecordData
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
	struct FString                                     SafeLabel;                                                // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                SafeParam1;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SafeParam2;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecordTimestamp;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeathReplayHitInfo
// 0x001C
struct FDeathReplayHitInfo
{
	float                                              Damage;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HitCount;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HeadShoot;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LimbsShoot;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BodyShoot;                                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HandShoot;                                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FootShoot;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeathReplayData
// 0x00C8
struct FDeathReplayData
{
	bool                                               IsValidDeathReplay;                                       // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsForCE;                                                  // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FString                                     SelfName;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	uint64_t                                           PlayerUID;                                                // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                DamageType;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SubType;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     CauseName;                                                // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     CauseActionName;                                          // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               IsBot;                                                    // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsSuicide;                                                // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                AliasID;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     AliasTitle;                                               // 0x0050(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     AliasNation;                                              // 0x005C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                AliasRank;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     AliasPartnerName;                                         // 0x006C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AliasPartnerRelation;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AliasRankID;                                              // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SegmentLevel;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              KDNum;                                                    // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GameCount;                                                // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FDeathReplayHitInfo                         OtherHitInfo;                                             // 0x0090(0x001C) (Edit, BlueprintVisible)
	struct FDeathReplayHitInfo                         SelfHitInfo;                                              // 0x00AC(0x001C) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.WonderfulTypeInfo
// 0x0010
struct FWonderfulTypeInfo
{
	EWonderfulType                                     WondefulType;                                             // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<float>                                      AdditionalData;                                           // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WonderfulPeriodInfo
// 0x001C
struct FWonderfulPeriodInfo
{
	float                                              WonderfulStartTime;                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WonderfulEndTime;                                         // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WonderfulPeriodIndex;                                     // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FWonderfulTypeInfo                          WondefulTypeInfo;                                         // 0x000C(0x0010) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.BattleWonderfulInfo
// 0x0038
struct FBattleWonderfulInfo
{
	uint64_t                                           UId;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	uint64_t                                           GameID;                                                   // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0010(0x000C) (ZeroConstructor)
	struct FString                                     OpenID;                                                   // 0x001C(0x000C) (ZeroConstructor)
	TArray<struct FWonderfulPeriodInfo>                WonderfulPeriodInfoArray;                                 // 0x0028(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LobbyWonderfulInfo
// 0x0058
struct FLobbyWonderfulInfo
{
	uint64_t                                           UId;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	uint64_t                                           GameID;                                                   // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	uint64_t                                           SaveTimestamp;                                            // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ModeID;                                                   // 0x0018(0x000C) (ZeroConstructor)
	int                                                SegmentLevel;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TotalTime;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWonderfulTypeInfo>                  TypeInfoArray;                                            // 0x002C(0x000C) (ZeroConstructor)
	struct FString                                     AppVersion;                                               // 0x0038(0x000C) (ZeroConstructor)
	struct FString                                     SrcVersion;                                               // 0x0044(0x000C) (ZeroConstructor)
	EWonderfulErrorCode                                ErrorCode;                                                // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ParticleSysColor
// 0x003C
struct FParticleSysColor
{
	TMap<struct FString, struct FLinearColor>          colorMap;                                                 // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ImageOriginal
// 0x001C
struct FImageOriginal
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FLinearColor                                OriginalColir;                                            // 0x0008(0x0010) (IsPlainOldData)
	int                                                Type;                                                     // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HandleMesh
// 0x000C
struct FHandleMesh
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	int                                                Type;                                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HandleParticleSystem
// 0x000C
struct FHandleParticleSystem
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	int                                                Type;                                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ItemTombParticle
// 0x0070
struct FItemTombParticle
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ItemTombParticle.SoftPS
	class UParticleSystemComponent*                    PS;                                                       // 0x0028(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x002C(0x003C) UNKNOWN PROPERTY: SetProperty ShadowTrackerExtra.ItemTombParticle.ItemSpecificIDArray
	unsigned char                                      UnknownData02[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ConveyorCarryData
// 0x0030
struct FConveyorCarryData
{
	class AActor*                                      Actor;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                StartStep;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FQuat                                       RelativeQuat;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CanvasIcon2D
// 0x0014
struct FCanvasIcon2D
{
	class UTexture2D*                                  Texture;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UL;                                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VL;                                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponCrossHairIconData
// 0x003C
struct FWeaponCrossHairIconData
{
	struct FCanvasIcon2D                               Icon;                                                     // 0x0000(0x0014) (Edit, DisableEditOnInstance)
	float                                              Offset;                                                   // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   IconOffset;                                               // 0x0018(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Scale;                                                    // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IconRotate;                                               // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LogicRotate;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsSpreadEnable;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              BlendInOutRatePerSec;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0038(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponCrossHairPerformData
// 0x0010
struct FWeaponCrossHairPerformData
{
	TArray<struct FWeaponCrossHairIconData>            Crosshair;                                                // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	ECrossHairSpreadType                               SpreadType;                                               // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CustomCndWrappperIns
// 0x0008
struct FCustomCndWrappperIns
{
	class UCustomCndWrapper*                           Wrapper;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                CndWrapperId;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomCndIns
// 0x0004
struct FCustomCndIns
{
	class UCustomCondition*                            Cnd;                                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CheckGroundSlopData
// 0x000C
struct FCheckGroundSlopData
{
	float                                              MaxSlopAngle;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSlopAngleLastFrames;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurUpHeavySlopFrames;                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ChildPendingActiveWidget
// 0x0078
struct FChildPendingActiveWidget
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.ChildPendingActiveWidget.ChildWidgetClass
	struct FString                                     WidgetTreeNameToAssign;                                   // 0x0028(0x000C) (Edit, ZeroConstructor)
	struct FAnchorData                                 Anchor;                                                   // 0x0034(0x0028) (Edit)
	bool                                               bAutoSize;                                                // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                ZOrder;                                                   // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ModeUIList;                                               // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bDefaultCreate;                                           // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CameraOffsetData
// 0x001C
struct FCameraOffsetData
{
	struct FVector                                     SocketOffset;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TargetOffset;                                             // 0x000C(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringArmLength;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DDMCData
// 0x0018
struct FDDMCData
{
	TArray<struct FSoftObjectPath>                     Stuffs;                                                   // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                HPPercentageRangeMin;                                     // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HPPercentageRangeMax;                                     // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseRPC;                                                  // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HUDRenderObject
// 0x0030
struct FHUDRenderObject
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	bool                                               bHidden;                                                  // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              RenderPriority;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Position;                                                 // 0x000C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0014(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // 0x001C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              RenderOpacity;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TextureUVs
// 0x0010
struct FTextureUVs
{
	float                                              U;                                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UL;                                                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VL;                                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HUDRenderObject_Texture
// 0x003C (0x006C - 0x0030)
struct FHUDRenderObject_Texture : public FHUDRenderObject
{
	class UTexture*                                    Atlas;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTextureUVs                                 UVs;                                                      // 0x0034(0x0010) (Edit, BlueprintVisible)
	bool                                               bUseTeamColors;                                           // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	TArray<struct FLinearColor>                        TeamColorOverrides;                                       // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bIsBorderElement;                                         // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSlateElement;                                          // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
	struct FVector2D                                   RenderOffset;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Rotation;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RotPivot;                                                 // 0x0064(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HUDRenderObject_Text
// 0x0050 (0x0080 - 0x0030)
struct FHUDRenderObject_Text : public FHUDRenderObject
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FText                                       Text;                                                     // 0x0038(0x000C) (Edit, BlueprintVisible)
	class UFont*                                       Font;                                                     // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TextScale;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawShadow;                                              // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	struct FVector2D                                   ShadowDirection;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                ShadowColor;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bDrawOutline;                                             // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	struct FLinearColor                                OutlineColor;                                             // 0x006C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<enum ETextHorzPos>                     HorzPosition;                                             // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ETextVertPos>                     VertPosition;                                             // 0x007D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x007E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DamageNumber
// 0x0094
struct FDamageNumber
{
	unsigned char                                      UnknownData00[0x94];                                      // 0x0000(0x0094) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DamageNumberConfig
// 0x0078
struct FDamageNumberConfig
{
	float                                              UpScaleFactor;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScaleRandom;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleRandOffset;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                HeadDrawColor;                                            // 0x000C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                HeadDrawOutlineColor;                                     // 0x001C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                HeadOutlineSize;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HeadSizeScale;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BodyDrawColor;                                            // 0x0034(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                BodyDrawOutlineColor;                                     // 0x0044(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                BodyOutlineSize;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BodySizeScale;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DefalutOringialPosition;                                  // 0x005C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   OringialPositionEnemy;                                    // 0x0064(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                OringialPosRandom;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                SpeedCurve;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeLife;                                                 // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FireEventConfig
// 0x0010
struct FFireEventConfig
{
	int                                                EventId;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomOccur;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomTimeRange;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EventParam;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PVEFireEventConfig
// 0x0010
struct FPVEFireEventConfig
{
	int                                                EventId;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomOccur;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomTimeRange;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EventParam;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WWIEBankContainer
// 0x0008
struct FWWIEBankContainer
{
	class UAkAudioEvent*                               MaleBank;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               FemaleBank;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DecalBakingRTCache
// 0x0020
struct FDecalBakingRTCache
{
	EDIYDecalBakingType                                DecalBakingType;                                          // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     PlayerUID;                                                // 0x0004(0x000C) (ZeroConstructor)
	int                                                WeaponAvatarID;                                           // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	class UTextureRenderTarget2D*                      TextureRenderTarget;                                      // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastActiveTime;                                           // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bMainRoleRT;                                              // 0x001C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STPointDamageEvent
// 0x0008 (0x00A8 - 0x00A0)
struct FSTPointDamageEvent : public FPointDamageEvent
{
	int                                                ItemId;                                                   // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ShootWeaponDamageEvent
// 0x0020 (0x00C8 - 0x00A8)
struct FShootWeaponDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      AvatarDamagePosition;                                     // 0x00A5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1A];                                      // 0x00A6(0x001A) MISSED OFFSET
	float                                              DamageImpulse;                                            // 0x00C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DesertStormMiniMapData
// 0x0060
struct FDesertStormMiniMapData
{
	unsigned char                                      UnknownData00[0x58];                                      // 0x0000(0x0058) MISSED OFFSET
	int                                                NormalIconID;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GrayIconID;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ScreenAppearanceCfg
// 0x0020
struct FScreenAppearanceCfg
{
	bool                                               UseScreenAppearance;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     ScreenAppearanceName;                                     // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TEnumAsByte<enum EScreenParticleEffectType>        ParticleType;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              ScreenAppearanceConcentration;                            // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ShaderName;                                               // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BuildingSearchPathLink
// 0x0010
struct FBuildingSearchPathLink
{
	TArray<struct FVector>                             WayPointList;                                             // 0x0000(0x000C) (ZeroConstructor)
	int                                                targetSpotIndex;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BuildingSearchPath
// 0x0010
struct FBuildingSearchPath
{
	TArray<struct FBuildingSearchPathLink>             itemPosLinkList;                                          // 0x0000(0x000C) (ZeroConstructor)
	int8_t                                             buildingPartIndext;                                       // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DragonBreathRepMovement
// 0x0028
struct FDragonBreathRepMovement
{
	struct FVector                                     LinearVelocity;                                           // 0x0000(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x000C(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0018(0x000C) (Transient, IsPlainOldData)
	EVectorQuantization                                LocationQuantizationLevel;                                // 0x0024(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                VelocityQuantizationLevel;                                // 0x0025(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERotatorQuantization                               RotationQuantizationLevel;                                // 0x0026(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemCurveAnim
// 0x0050
struct FItemCurveAnim
{
	EItemCurveAnimState                                CurState;                                                 // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               ShowGroundEffect;                                         // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              DropDuration;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentTime;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DropStartSpeed;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DelayDestroyParticleTime;                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DelayStartTime;                                           // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DelayDestroyGroundParticleTime;                           // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartPos;                                                 // 0x001C(0x000C) (IsPlainOldData)
	struct FVector                                     EndPos;                                                   // 0x0028(0x000C) (IsPlainOldData)
	TWeakObjectPtr<class AActor>                       TargetActor;                                              // 0x0034(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    TailParticleComponent;                                    // 0x003C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    GroundParticleComponent;                                  // 0x0040(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0044(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DropGroupContainer
// 0x0014
struct FDropGroupContainer
{
	int                                                GroupIndex;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GroupTime;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FItemCurveAnim>                      List;                                                     // 0x0008(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DynamicBatchActorMap
// 0x003C
struct FDynamicBatchActorMap
{
	TMap<class UClass*, class ADynamicBatchActor*>     Value;                                                    // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.UIWidgetConfig
// 0x0078
struct FUIWidgetConfig
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.UIWidgetConfig.WidgetClassPath
	int                                                ZOrder;                                                   // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     MarginData;                                               // 0x002C(0x0010) (Edit, IsPlainOldData)
	struct FAnchors                                    AnchorsData;                                              // 0x003C(0x0010) (Edit)
	struct FVector2D                                   Position;                                                 // 0x004C(0x0008) (Edit, IsPlainOldData)
	struct FString                                     MountName;                                                // 0x0054(0x000C) (Edit, ZeroConstructor)
	struct FString                                     MountOuterName;                                           // 0x0060(0x000C) (Edit, ZeroConstructor)
	bool                                               bMountUIRoot;                                             // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	class UClass*                                      UIWidgetClass;                                            // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeatherControllerRepData
// 0x001C
struct FWeatherControllerRepData
{
	EWeatherStatusType                                 WeatherType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStarted;                                                 // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              ElapsedTime;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SaturateTime;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeMultiplier;                                           // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BlendInStarted;                                           // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BlendSaturated;                                           // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BlendOutStarted;                                          // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BlendOutEnded;                                            // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherObject
// 0x0068
struct FWeatherObject
{
	float                                              MainLight_Density;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MainLight_Color;                                          // 0x0004(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              MainLight_Temperature;                                    // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MainLight_Rotation;                                       // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SkyLight_Density;                                         // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SkyLight_Color;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              CustomFogLow_DensityCoefficient;                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                CustomFogLow_Color;                                       // 0x003C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              CustomFogHigh_DensityCoefficient;                         // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                CustomFogHigh_Color;                                      // 0x0050(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              HeightFallOff;                                            // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDistance;                                            // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherDetailStatus
// 0x000C
struct FWeatherDetailStatus
{
	EWeatherStatusType                                 CurrentWeather;                                           // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CurrentElapsedTime;                                       // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TotalTime;                                                // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LevelCopyInfo
// 0x0098
struct FLevelCopyInfo
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) UNKNOWN PROPERTY: SetProperty ShadowTrackerExtra.LevelCopyInfo.PackageNames
	class UClass*                                      LevelStreamingClass;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LayoutGridSize;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                LayoutRowNum;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartLocOfLevel;                                          // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     StartLocOfStreamVolume;                                   // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     StartLocOfPlayerStart;                                    // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     StartLocOfMinMapPoint;                                    // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FString                                     StreamVolumeName;                                         // 0x007C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerStartName;                                          // 0x0088(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AActor*                                      MiniMapStandardPoint;                                     // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherChangeWeight
// 0x0008
struct FWeatherChangeWeight
{
	EWeatherStatusType                                 NewWeatherStatus;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Weight;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherChangeSequenceItem
// 0x000C
struct FWeatherChangeSequenceItem
{
	EWeatherStatusType                                 WeatherStatus;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalDurationTime;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherChangeConfig
// 0x0044
struct FWeatherChangeConfig
{
	float                                              StartTimeMin;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartTimeMax;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DurationTimeMin;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DurationTimeMax;                                          // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EWeatherStatusType                                 LastWeatherStatus;                                        // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              LastWeatherAppearTime;                                    // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseFixWeatherChangeSequence;                             // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	TArray<struct FWeatherChangeWeight>                WeatherChangeWeights;                                     // 0x0024(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FWeatherChangeSequenceItem>          WeatherChangeSequence;                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              TimeMultiplier;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseReadyGameStateEnetrAsOriginalTime;                    // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableReadyGameStateWeatherTick;                        // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeatherChangeControl
// 0x001C
struct FWeatherChangeControl
{
	bool                                               WeatherChangeStarted;                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               WeatherChangeFinished;                                    // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              WeatherChangeStartTime;                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ElapsedTime;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	EWeatherStatusType                                 NextWeather;                                              // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              NextDuration;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeatherTotalWeight;                                       // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimelineOffset;                                           // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherDstFog
// 0x0014
struct FWeatherDstFog
{
	bool                                               UseStartDistance;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              StartDistance;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseDensityCoefficient;                                    // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              CustomFogLow_DensityCoefficient;                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomFogHigh_DensityCoefficient;                         // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherSrcFog
// 0x000C
struct FWeatherSrcFog
{
	float                                              StartDistance;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomFogLow_DensityCoefficient;                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CustomFogHigh_DensityCoefficient;                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherFogCfg
// 0x0044
struct FWeatherFogCfg
{
	TArray<EWeatherStatusType>                         WeatherTypeList;                                          // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	class AExponentialHeightFog*                       Fog;                                                      // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FWeatherDstFog                              DstWeatherFog;                                            // 0x0010(0x0014) (Edit, BlueprintVisible)
	struct FWeatherSrcFog                              SrcWeatherFog;                                            // 0x0024(0x000C) (Edit, BlueprintVisible)
	float                                              blendTime;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<class UDynamicWeatherController*>           WeatherControllerList;                                    // 0x0038(0x000C) (ExportObject, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.PlayerKeyDstWeather
// 0x0004
struct FPlayerKeyDstWeather
{
	class ASTExtraPlayerController*                    PC;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ProjectileHealthSetting
// 0x0008
struct FProjectileHealthSetting
{
	float                                              Health;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageScale;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ProjectileEvent
// 0x0028
struct FProjectileEvent
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      EventFlag;                                                // 0x0018(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EProjectileEventType                               EventType;                                                // 0x0019(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	TArray<EProjectileEventType>                       ReplicatedEvents;                                         // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.ProjectileRepMovement
// 0x0028
struct FProjectileRepMovement
{
	struct FVector                                     LinearVelocity;                                           // 0x0000(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x000C(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0018(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      bReplicateRotation : 1;                                   // 0x0024(0x0001) (Edit, DisableEditOnInstance)
	EVectorQuantization                                LocationQuantizationLevel;                                // 0x0025(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                VelocityQuantizationLevel;                                // 0x0026(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERotatorQuantization                               RotationQuantizationLevel;                                // 0x0027(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ConditionAndRestriction
// 0x0001
struct FConditionAndRestriction
{
	unsigned char                                      bEnable : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSatisfied : 1;                                           // 0x0000(0x0001) (BlueprintVisible)
	unsigned char                                      bRestriction : 1;                                         // 0x0000(0x0001) (BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.EliteProjectile_MeleeHurtEffect
// 0x0038
struct FEliteProjectile_MeleeHurtEffect
{
	class UParticleSystem*                             Template_Effect;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       HurtRotationSocketName;                                   // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0028(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SegmentPoint
// 0x0018
struct FSegmentPoint
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x000C(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleCollisionEvent
// 0x000C
struct FSimpleCollisionEvent
{
	class UObject*                                     Target;                                                   // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0004(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffApplierFunction
// 0x0028
struct FBuffApplierFunction
{
	struct FName                                       BuffName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 DurationCurve;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bRemoveBuffFromExpiredTargets : 1;                        // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRefreshBuff : 1;                                         // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bClearBuffsOnDisabled : 1;                                // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	TArray<class AActor*>                              LastTimeTargets;                                          // 0x0010(0x000C) (ZeroConstructor, Transient)
	class AActor*                                      Causer;                                                   // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class AController*                                 Instigator;                                               // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ExplosionCameraShakeFunction
// 0x0018
struct FExplosionCameraShakeFunction
{
	class UClass*                                      FrontShake;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      BackShake;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      RightShake;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      LeftShake;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ShakeIntensityCurve;                                      // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum ECameraAnimPlaySpace>             CameraAnimPlaySpace;                                      // 0x0014(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ProjectileVoiceCheckEvent
// 0x0008
struct FProjectileVoiceCheckEvent
{
	float                                              VoiceCheckRadius;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayDuration;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ProjectileExplosionNoise
// 0x0024
struct FProjectileExplosionNoise
{
	float                                              NoiseRadius;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     RTPC_ExplosionDistance_2;                                 // 0x0008(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RTPC_ExplosionDistance_3;                                 // 0x0014(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              RTPCValue_3;                                              // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DamageApplyFunction
// 0x000C
struct FDamageApplyFunction
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	class UClass*                                      DamageTypeClass;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemId;                                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RadialDamageApplyFunction
// 0x0008 (0x0014 - 0x000C)
struct FRadialDamageApplyFunction : public FDamageApplyFunction
{
	class UCurveFloat*                                 DamageCurve;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseMomentum;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ActorLocationMarker
// 0x0010
struct FActorLocationMarker
{
	class UClass*                                      LocationMarkerClass;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  MarkerTex;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PointDamageApplyFunction
// 0x0004 (0x0010 - 0x000C)
struct FPointDamageApplyFunction : public FDamageApplyFunction
{
	float                                              Damage;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HorizontalVerticalRadialDamageFunction
// 0x0004 (0x0018 - 0x0014)
struct FHorizontalVerticalRadialDamageFunction : public FRadialDamageApplyFunction
{
	class UCurveFloat*                                 DistanceCurveVertical;                                    // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MatScalarBlendEffect
// 0x0088
struct FMatScalarBlendEffect
{
	struct FRuntimeFloatCurve                          BlendCurve;                                               // 0x0000(0x0058) (Edit, BlueprintVisible)
	struct FName                                       ParamName;                                                // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              BlendMeshComponent;                                       // 0x0060(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          OriMatInstance;                                           // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MatDynamic;                                               // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x006C(0x001C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.EnhancerSpotPlayerSkill
// 0x0008
struct FEnhancerSpotPlayerSkill
{
	ECharacterSubType                                  PawnSubType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                SkillID;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.NeedActiveEnhanceSpotSruct
// 0x000C
struct FNeedActiveEnhanceSpotSruct
{
	TArray<class AEnhancerSpot*>                       TempNeedActiveSpotList;                                   // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AirDropPathData
// 0x0038
struct FAirDropPathData
{
	int                                                AirDropIndex;                                             // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   StartLoc;                                                 // 0x0004(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   TargetLoc;                                                // 0x000C(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              RouteWidgetRotateAngle;                                   // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RouteLengthInMap;                                         // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector2D>                           AirDropLocs;                                              // 0x001C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVector>                             AirDropLocs3D;                                            // 0x0028(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bIsDrawAirDropFlightPath;                                 // 0x0034(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirplaneRouteData
// 0x0064
struct FAirplaneRouteData
{
	float                                              PlaneFlyingProcess;                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CanJumpLocInMap;                                          // 0x0004(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ForceJumpLocInMap;                                        // 0x000C(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              RouteWidgetRotateAngle;                                   // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RouteLengthInMap;                                         // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PlaneLocInMap;                                            // 0x001C(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              PlaneRotation;                                            // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FAirDropPathData>                    AirDropPaths;                                             // 0x0028(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FVector2D                                   CanJumpLocInMapForCamp;                                   // 0x0034(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ForceJumpLocInMapForCamp;                                 // 0x003C(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              CampRouteLengthInMap;                                     // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CampRouteWidgetRotateAngle;                               // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LastValidCanJumpLocInMap;                                 // 0x004C(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   LastValidForceJumpLocInMap;                               // 0x0054(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              LastValidRouteWidgetRotateAngle;                          // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastValidRouteLengthInMap;                                // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MapRealTimeInfo
// 0x00F0
struct FMapRealTimeInfo
{
	struct FVector2D                                   MapCenterToPlayer;                                        // 0x0000(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     MapCenterToBlueCircle;                                    // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     MapCenterToWhiteCircle;                                   // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   PlayerCoord;                                              // 0x0020(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   SpectatedPlayerCoord;                                     // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   WhiteCircleCoord;                                         // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BlueCircleCoord;                                          // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              WhiteCircleRadius;                                        // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BlueCircleRadius;                                         // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LastDriveVehicleCoord;                                    // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bCanPlayerSeeLastVehicle;                                 // 0x0050(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	struct FAirplaneRouteData                          PlaneRouteData;                                           // 0x0054(0x0064) (BlueprintVisible, BlueprintReadOnly)
	struct FAirDropPathData                            AirDropPathData;                                          // 0x00B8(0x0038) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.ShootVerifyConfig
// 0x0010
struct FShootVerifyConfig
{
	float                                              ClientMuzzleHeightMax;                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClientPureMuzzleHeightMax;                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWeaponClientMuzzleHeightMax;                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VehicleWeaponClientPureMuzzleHeightMax;                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkyLightData
// 0x0014
struct FSkyLightData
{
	float                                              Intensity;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightColor;                                               // 0x0004(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DirectionalLightData
// 0x0014
struct FDirectionalLightData
{
	float                                              Intensity;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightColor;                                               // 0x0004(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HeightFogData
// 0x0024
struct FHeightFogData
{
	float                                              FogDensity;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogInscatteringColor;                                     // 0x0004(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              FogHeightFalloff;                                         // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogMaxOpacity;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDistance;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogCutoffDistance;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UEnvParamData
// 0x0058
struct FUEnvParamData
{
	struct FString                                     Desc;                                                     // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FSkyLightData                               SkyLight;                                                 // 0x000C(0x0014) (Edit, BlueprintVisible)
	struct FDirectionalLightData                       DirectionalLight;                                         // 0x0020(0x0014) (Edit, BlueprintVisible)
	struct FHeightFogData                              HeightFog;                                                // 0x0034(0x0024) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.ExFootIKInfo
// 0x0050
struct FExFootIKInfo
{
	struct FName                                       IKBoneOrSocketName;                                       // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       FixedBoneOrSocketName;                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IKBoneOrSocketOffset;                                     // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     IKEffectorOffset;                                         // 0x001C(0x000C) (Edit, EditConst, IsPlainOldData)
	struct FRotator                                    IKEffectorRotation;                                       // 0x0028(0x000C) (Edit, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0034(0x001C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActorFilterParams
// 0x0020
struct FActorFilterParams
{
	class AActor*                                      Causer;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AController*                                 Instigator;                                               // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Origin;                                                   // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     Direction;                                                // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FakePlayerCustomRow
// 0x003C
struct FFakePlayerCustomRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ControllerPath;                                           // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Name;                                                     // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                gender;                                                   // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ItemStr;                                                  // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGameModePlayerItem>                 PlayerItems;                                              // 0x002C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                IsUseRandomName;                                          // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FakePlayerParams
// 0x0010
struct FFakePlayerParams
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ParamsID;                                                 // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CampID;                                                   // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUsePool;                                                 // 0x000C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToAIActingManager;                                    // 0x000D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FakePlayerSpeciesParams
// 0x0018
struct FFakePlayerSpeciesParams
{
	int                                                ID;                                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamID;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SingleId;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ParamsID;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CampID;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToAIActingManager;                                    // 0x0014(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FeatureConfigItem
// 0x0070
struct FFeatureConfigItem
{
	struct FString                                     TargetClassName;                                          // 0x0000(0x000C) (ZeroConstructor)
	int                                                bUseFeatureSet;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ExcludeComponentsList_DS;                                 // 0x0010(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_Autonomous;                         // 0x001C(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_Team;                               // 0x0028(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_NonTeam;                            // 0x0034(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_DSAI;                               // 0x0040(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_ClientAI;                           // 0x004C(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_Standalone;                         // 0x0058(0x000C) (ZeroConstructor)
	TArray<struct FString>                             ExcludeComponentsList_StandaloneAI;                       // 0x0064(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.FeatureSetItem
// 0x0030
struct FFeatureSetItem
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DeliveryFood
// 0x0010
struct FDeliveryFood
{
	int                                                AreaID;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        DeliveryFoodIDList;                                       // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TempleSpawnConfig
// 0x0018
struct FTempleSpawnConfig
{
	struct FVector                                     SpawnLocation;                                            // 0x0000(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x000C(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ShowTextWidgetData
// 0x0020
struct FShowTextWidgetData
{
	class UUserWidget*                                 FloatingTextWidget;                                       // 0x0000(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              RecycleTime;                                              // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShowWorldPos;                                             // 0x0008(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     RandomOffset;                                             // 0x0014(0x000C) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FloatingTextData
// 0x0014
struct FFloatingTextData
{
	float                                              BaseDamage;                                               // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadShot;                                               // 0x0004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FVector_NetQuantize                         ImpactPoint;                                              // 0x0008(0x000C) (BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.RepFlyingMovement
// 0x0010
struct FRepFlyingMovement
{
	float                                              FlySpeed;                                                 // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FVector_NetQuantize100>              FlyingNavigationPath;                                     // 0x0004(0x000C) (ZeroConstructor, Transient)
};

// ScriptStruct ShadowTrackerExtra.PlayerStartGroup
// 0x0018
struct FPlayerStartGroup
{
	int                                                GroupID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class ASTExtraPlayerStart*>                 PlayerStarts;                                             // 0x0004(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FramingTickConfig
// 0x0050
struct FFramingTickConfig
{
	bool                                               Enable;                                                   // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LOD0_ScreenSize;                                          // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           LOD0_FrameIntervel;                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LOD1_ScreenSize;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           LOD1_FrameIntervel;                                       // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LOD2_ScreenSize;                                          // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           LOD2_FrameIntervel;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LOD3_ScreenSize;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           LOD3_FrameIntervel;                                       // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LOD4_ScreenSize;                                          // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           LOD4_FrameIntervel;                                       // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           ClassID;                                                  // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0030(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PVECircleDeploymentConfig
// 0x0014
struct FPVECircleDeploymentConfig
{
	int                                                CircleID;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Location;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveTime;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Pain;                                                     // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SingleLevelObjArray
// 0x000C
struct FSingleLevelObjArray
{
	TArray<class AActor*>                              LevelObjs;                                                // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AliveMonsterNum
// 0x0008
struct FAliveMonsterNum
{
	int                                                Num;                                                      // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EMonsterSpawnSourceType>          SourceType;                                               // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RelifePointInfo
// 0x0050
struct FRelifePointInfo
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  RelifeTrans;                                              // 0x0010(0x0030) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               IsActivePoint;                                            // 0x0040(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0041(0x000F) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LevelRelifePointInfo
// 0x0020
struct FLevelRelifePointInfo
{
	struct FGameLevelDesc                              LevelDesc;                                                // 0x0000(0x0014) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FRelifePointInfo>                    RelifePointList;                                          // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterParams
// 0x0050
struct FMonsterParams
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.XTaskExtraSyncData
// 0x0020
struct FXTaskExtraSyncData
{
	int                                                TaskId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EXTaskType                                         TaskType;                                                 // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               TimerEnabled;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              CurAccumTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalTime;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ServerStartTime;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0014(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.XTaskSaveData
// 0x0014
struct FXTaskSaveData
{
	int                                                TaskId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurProgress;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AimProgress;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FobidShow;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFXTaskStateType                                   State;                                                    // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EXTaskType                                         TaskType;                                                 // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RemainItemData
// 0x0018
struct FRemainItemData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBattleItemAdditionalData>           AdditionalDataList;                                       // 0x0008(0x000C) (ZeroConstructor)
	int                                                SlotID;                                                   // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LastGameRemainItemData
// 0x0030
struct FLastGameRemainItemData
{
	struct FName                                       TombName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DropGroundPoint;                                          // 0x0008(0x000C) (IsPlainOldData)
	struct FString                                     TargetPlayerUID;                                          // 0x0014(0x000C) (ZeroConstructor)
	TArray<struct FRemainItemData>                     RemainItemDataList;                                       // 0x0020(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ClientFatalDamageRecordData
// 0x00B4
struct FClientFatalDamageRecordData
{
	struct FString                                     Causer;                                                   // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CauserNation;                                             // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimNation;                                             // 0x0024(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     FuzzyCauserName;                                          // 0x0030(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     FuzzyVictimName;                                          // 0x003C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                DamageType;                                               // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AdditionalParam;                                          // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CauserWeaponAvatarID;                                     // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CauserClothAvatarID;                                      // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadShot;                                               // 0x0058(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                ResultHealthStatus;                                       // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EFatalDamageRelationShip>         RecordRelationShip;                                       // 0x0060(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                PreviousHealthStatus;                                     // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                causerAnchorPlatformResID;                                // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                causerAnchorPlatformColorID;                              // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                realKillerAnchorPlatformResID;                            // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                realKillerAnchorPlatformColorID;                          // 0x0074(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                victimAnchorPlatformResID;                                // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                victimAnchorPlatformColorID;                              // 0x007C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     CauserPicURL;                                             // 0x0080(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimPicURL;                                             // 0x008C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RealKillerName;                                           // 0x0098(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RealKillNum;                                              // 0x00A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EFatalDamageCharacterType>        CauserType;                                               // 0x00A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EFatalDamageCharacterType>        VictimType;                                               // 0x00A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	int                                                CauserTeamID;                                             // 0x00AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VictimTeamID;                                             // 0x00B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SensibilityMode
// 0x0028
struct FSensibilityMode
{
	float                                              NoAim;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight1X;                                                  // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight2X;                                                  // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight3X;                                                  // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight4X;                                                  // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight6X;                                                  // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Sight8X;                                                  // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FPPNoAim;                                                 // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Shoulder;                                                 // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShoulderFPP;                                              // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SightMaterialConfig
// 0x0008
struct FSightMaterialConfig
{
	int                                                Color;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Type;                                                     // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SensibilityConfig
// 0x00EC
struct FSensibilityConfig
{
	struct FSensibilityMode                            NormalMode;                                               // 0x0000(0x0028) (BlueprintVisible)
	struct FSensibilityMode                            FireMode;                                                 // 0x0028(0x0028) (BlueprintVisible)
	struct FSensibilityMode                            MotionMode;                                               // 0x0050(0x0028) (BlueprintVisible)
	struct FSensibilityMode                            MotionFireMode;                                           // 0x0078(0x0028) (BlueprintVisible)
	float                                              VehicleEye;                                               // 0x00A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ParachuteEye;                                             // 0x00A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FPPEye;                                                   // 0x00A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SideMirrorModeC;                                          // 0x00AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<int, struct FSightMaterialConfig>             MaterialConfigs;                                          // 0x00B0(0x0050) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.KillOrPutDownMessage
// 0x0044
struct FKillOrPutDownMessage
{
	TEnumAsByte<enum EKillOrPutDownMessageType>        MsgType;                                                  // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     AttackActionName;                                         // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     AttackName;                                               // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bIsHeadshot;                                              // 0x001C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                KillNum;                                                  // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowKillNum;                                             // 0x0024(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FString                                     FullMsg;                                                  // 0x0028(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                victimAnchorPlatformResID;                                // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     VictimPlayerName;                                         // 0x0038(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.CameraData
// 0x0014
struct FCameraData
{
	float                                              CameraFOV;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpringArmSocketOffset;                                    // 0x0004(0x000C) (Edit, IsPlainOldData)
	float                                              SpringArmLength;                                          // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SwitchCameraData
// 0x0010 (0x0024 - 0x0014)
struct FSwitchCameraData : public FCameraData
{
	float                                              StartCameraSwitchDelayTimeFrom_Normal;                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartCameraSwitchDelayTimeFrom_Near;                      // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartCameraSwitchDelayTimeFrom_Aim;                       // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraSwitchTime;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CommonCameraModeData
// 0x0024
struct FCommonCameraModeData
{
	struct FSwitchCameraData                           SwitchCameraData;                                         // 0x0000(0x0024) (Edit)
};

// ScriptStruct ShadowTrackerExtra.AimCameraModeData
// 0x0024
struct FAimCameraModeData
{
	struct FSwitchCameraData                           SwitchCameraData;                                         // 0x0000(0x0024) (Edit)
};

// ScriptStruct ShadowTrackerExtra.CameraViewPitchLimitData
// 0x0008
struct FCameraViewPitchLimitData
{
	float                                              ViewPitchMin;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ViewPitchMax;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ServerHitEnemyReplicatedData
// 0x0008
struct FServerHitEnemyReplicatedData
{
	class ASTExtraBaseCharacter*                       HitTargetPawn;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           EventId;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponSystemReconnectReplicateData
// 0x0028
struct FWeaponSystemReconnectReplicateData
{
	struct FName                                       LastUseNoneGrenadeLogicSlot;                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LastUseLogicSlot;                                         // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               GrenadeLogicSlotList;                                     // 0x0010(0x000C) (ZeroConstructor)
	TArray<struct FItemDefineID>                       GrenadeDefineIDList;                                      // 0x001C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TeamMateStateInfo
// 0x0020
struct FTeamMateStateInfo
{
	class ASTExtraPlayerState*                         PlayerState;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0004(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TeamateStateUAVChangedCompressData
// 0x0014
struct FTeamateStateUAVChangedCompressData
{
	struct FVector_NetQuantize100                      Location;                                                 // 0x0000(0x000C)
	uint32_t                                           View;                                                     // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Roll;                                                     // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      uavType;                                                  // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ObservedData
// 0x0048
struct FObservedData
{
	struct FString                                     PlayerName;                                               // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     PicUrl;                                                   // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	bool                                               ShowPicUrl;                                               // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                TeamID;                                                   // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	uint64_t                                           UId;                                                      // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             PosList;                                                  // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0034(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.OwnerClientCreateWeaponCache
// 0x0014
struct FOwnerClientCreateWeaponCache
{
	TArray<struct FItemDefineID>                       IDList;                                                   // 0x0000(0x000C) (ZeroConstructor)
	uint32_t                                           CharacterGUID;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SyncTicket;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponMgrInfo
// 0x0010
struct FWeaponMgrInfo
{
	TArray<struct FItemDefineID>                       ItemList;                                                 // 0x0000(0x000C) (ZeroConstructor)
	class UWeaponManagerComponent*                     WeaponMgr;                                                // 0x000C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ImpactMapValueData
// 0x000C
struct FImpactMapValueData
{
	TArray<class ASTEShootWeaponBulletImpactEffect*>   ImpactEffectList;                                         // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.FootprintActorInfo
// 0x0030
struct FFootprintActorInfo
{
	EPhysicalSurfaceDescription                        PhysicalSurface;                                          // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.FootprintActorInfo.FootprintClass
};

// ScriptStruct ShadowTrackerExtra.FootprintActorBlock
// 0x0040
struct FFootprintActorBlock
{
	TMap<uint32_t, class AFootprintInstanceActor*>     TeamFootprintInstanceActorMap;                            // 0x0000(0x0050) (ZeroConstructor)
	class AFootprintInstanceActor*                     OthersFootprintInstanceActor;                             // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TrailMarkActorBlock
// 0x0018
struct FTrailMarkActorBlock
{
	TArray<class ATrailMarkActor*>                     WorkingList;                                              // 0x0000(0x000C) (ZeroConstructor)
	TArray<class ATrailMarkActor*>                     AssignableList;                                           // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ParachuteAnimAssetData
// 0x0040
struct FParachuteAnimAssetData
{
	TMap<TEnumAsByte<enum ECharacterParachuteAnimType>, class UAnimationAsset*> AnimAssetCache;                                           // 0x0000(0x0050) (ZeroConstructor)
	bool                                               IsAnimCached;                                             // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponHitDetailInfo
// 0x0010
struct FWeaponHitDetailInfo
{
	int                                                TotalShootNum;                                            // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        HitNumEveryBodys;                                         // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarStartVehiclePlayerInfo
// 0x000C
struct FVehicleWarStartVehiclePlayerInfo
{
	int                                                upassLevel;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                upassScore;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASTExtraBaseCharacter*                       BasePlayer;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarStartVehicleInfo
// 0x0034
struct FVehicleWarStartVehicleInfo
{
	struct FVector                                     Position;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class ASTExtraVehicleBase*                         Vehicle;                                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVehicleWarStartVehiclePlayerInfo           DriverInfo;                                               // 0x001C(0x000C) (Edit, BlueprintVisible)
	struct FVehicleWarStartVehiclePlayerInfo           PassengerInfo;                                            // 0x0028(0x000C) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.BattleOpenSequencerInfo
// 0x0050
struct FBattleOpenSequencerInfo
{
	struct FTransform                                  StartPosition;                                            // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<struct FVehicleWarStartVehicleInfo>         VehicleInfoList;                                          // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Time;                                                     // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ServerStartTimestamp;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0044(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ZombieWaveUIState
// 0x0014
struct FZombieWaveUIState
{
	int                                                TypeId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CountdownTime;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     ShowString;                                               // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.PlayerDecalData
// 0x0050
struct FPlayerDecalData
{
	int                                                DecalId;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FTransform                                  DecalTransform;                                           // 0x0010(0x0030) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                DecalInstanceId;                                          // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FIdeaDecalInfo>                      DecalInfos;                                               // 0x0044(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.StartFireInfo
// 0x0020
struct FStartFireInfo
{
	uint32_t                                           CurShootID;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           CurClipID;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurBulletNumInClip;                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EShootWeaponShootMode>            ShootMode;                                                // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              StartFireTime;                                            // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	double                                             StartFireSysTime;                                         // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.Vector_NetQuantizeNormalSv
// 0x0000 (0x000C - 0x000C)
struct FVector_NetQuantizeNormalSv : public FVector
{

};

// ScriptStruct ShadowTrackerExtra.ShootTimeInfo_NetQuantize
// 0x0040
struct FShootTimeInfo_NetQuantize
{
	unsigned char                                      UnknownData00[0x40];                                      // 0x0000(0x0040) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ShootTimeData
// 0x00A0
struct FShootTimeData
{
	struct FVector                                     ShootPos;                                                 // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     GunPos;                                                   // 0x000C(0x000C) (IsPlainOldData)
	struct FVector_NetQuantizeNormalSv                 MuzzleDir;                                                // 0x0018(0x000C)
	uint32_t                                           ShootID;                                                  // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	uint64_t                                           CurrentStates;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      CapsuleHalfHeight;                                        // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              SkeletonLength;                                           // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	struct FShootTimeInfo_NetQuantize                  ShootInfo;                                                // 0x0040(0x0040)
	double                                             ShootSystemTime;                                          // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShootTimeConDelta;                                        // 0x0088(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              ShootLevelTime;                                           // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     GunTailPos;                                               // 0x0090(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SACData
// 0x003C
struct FSACData
{
	TArray<struct FBulletHitInfoUploadData>            HitDataArray;                                             // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FLocalShootHitData>                  ShootHitDataArray;                                        // 0x000C(0x000C) (ZeroConstructor)
	TArray<struct FShootTimeData>                      ShootTimeDatas;                                           // 0x0018(0x000C) (ZeroConstructor)
	int                                                ShootTimes;                                               // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              TssSdkAntiData;                                           // 0x0028(0x000C) (ZeroConstructor)
	int                                                TssSdkAntiDataLen;                                        // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NetworkStatus;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeviceInfo
// 0x0060
struct FDeviceInfo
{
	struct FString                                     GPUFamily;                                                // 0x0000(0x000C) (ZeroConstructor)
	struct FString                                     GLVersion;                                                // 0x000C(0x000C) (ZeroConstructor)
	struct FString                                     OSVersion;                                                // 0x0018(0x000C) (ZeroConstructor)
	struct FString                                     DeviceMake;                                               // 0x0024(0x000C) (ZeroConstructor)
	struct FString                                     DeviceModel;                                              // 0x0030(0x000C) (ZeroConstructor)
	struct FString                                     VulkanVersion;                                            // 0x003C(0x000C) (ZeroConstructor)
	struct FString                                     MemorySizeInGB;                                           // 0x0048(0x000C) (ZeroConstructor)
	struct FString                                     OpenID;                                                   // 0x0054(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SeekAndLockRPGBulletUploadData
// 0x0008
struct FSeekAndLockRPGBulletUploadData
{
	unsigned char                                      SeekAndLockStageType;                                     // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class AActor*                                      SeekAndLockTarget;                                        // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ExplosionProjectileHitInfo
// 0x0024
struct FExplosionProjectileHitInfo
{
	struct FVector                                     ImpactPoint;                                              // 0x0000(0x000C) (IsPlainOldData)
	struct FVector                                     ImpactNormal;                                             // 0x000C(0x000C) (IsPlainOldData)
	float                                              BulletHitTime;                                            // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BulletLaunchTime;                                         // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BulletMovedDistance;                                      // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WarPlayerStateScore
// 0x0018
struct FWarPlayerStateScore
{
	int                                                Rank;                                                     // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EWarScoreChangeReason                              ScoreChangeReason;                                        // 0x0008(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                ScoreChangeCauserPlayerID;                                // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HighestScore;                                             // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FollowScore;                                              // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponHitDisanceSectionArray
// 0x0010
struct FWeaponHitDisanceSectionArray
{
	TArray<int>                                        SectionArray;                                             // 0x0000(0x000C) (ZeroConstructor)
	int                                                CaculateType;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TeamInfo
// 0x0014
struct FTeamInfo
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class ASTExtraPlayerState>>  TeamMembers;                                              // 0x0004(0x000C) (ZeroConstructor)
	int                                                TotalKills;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GPProfileMatchItem
// 0x0010
struct FGPProfileMatchItem
{
	TEnumAsByte<enum EGPSourceType>                    SourceType;                                               // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EGPCompareType>                   CompareType;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FString                                     MatchString;                                              // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GPProfileMatch
// 0x0018
struct FGPProfileMatch
{
	struct FString                                     Profile;                                                  // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FGPProfileMatchItem>                 Match;                                                    // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.NetItemAvatarData
// 0x0020
struct FNetItemAvatarData
{
	struct FItemDefineID                               ItemDefineID;                                             // 0x0000(0x0018)
	int                                                UpdateFlag;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemAvatarMatPath
// 0x0038
struct FItemAvatarMatPath
{
	struct FName                                       SlotID;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSoftObjectPath                             MatInstancePath;                                          // 0x0008(0x0018)
	struct FSoftObjectPath                             MatBasePath;                                              // 0x0020(0x0018)
};

// ScriptStruct ShadowTrackerExtra.GrenadePredictResult
// 0x0028
struct FGrenadePredictResult
{
	TArray<struct FVector>                             SplinePoints;                                             // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsHitActor;                                               // 0x000C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FVector                                     HitActorLocation;                                         // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    HitActorRotation;                                         // 0x001C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GuideInfo
// 0x001C
struct FGuideInfo
{
	class UWidget*                                     Widget;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                guildUI;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Offset;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0010(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                childData;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HardPointTeamScoreData
// 0x0008
struct FHardPointTeamScoreData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HardPointSwitchConfig
// 0x0010
struct FHardPointSwitchConfig
{
	float                                              WaitTime;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                HardPointID;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActivateTime;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                WinScore;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HardPointSwitchConfigData
// 0x000C
struct FHardPointSwitchConfigData
{
	TArray<struct FHardPointSwitchConfig>              SwitchConfigList;                                         // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DropPropData
// 0x0010
struct FDropPropData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                DropMode;                                                 // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDropOnDead;                                              // 0x000C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.IceEngravingStage
// 0x0030
struct FIceEngravingStage
{
	float                                              DamageThreshold;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.IceEngravingStage.MeshAsset
};

// ScriptStruct ShadowTrackerExtra.DecalBlock
// 0x0008
struct FDecalBlock
{
	class UMaterialInterface*                          DecalMaterial;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	class UTexture*                                    DecalTexure;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectedArea
// 0x001C
struct FInfectedArea
{
	int                                                AreaID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AreaPosition;                                             // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Radius;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsActive;                                                 // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HardLevelRange
// 0x0008
struct FHardLevelRange
{
	int                                                Min;                                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WidgetHPCheckParam
// 0x0020
struct FWidgetHPCheckParam
{
	TArray<TEnumAsByte<enum EObjectTypeQuery>>         CheckObjectTypes;                                         // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              ValidActorClass;                                          // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              SphereCheckRadius;                                        // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheckDistance;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InteractData
// 0x000C
struct FInteractData
{
	EInteractState                                     InteractState;                                            // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCoolingDown;                                           // 0x0001(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	TWeakObjectPtr<class ACharacter>                   CurActiveCharacter;                                       // 0x0004(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InterpToMovementComponent2ReplicatedData
// 0x0010
struct FInterpToMovementComponent2ReplicatedData
{
	EInterpToBehaviourType                             ReplicatedBehaviourType;                                  // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ReplicatedCurrentTime;                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedTimeMultiplier;                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedCurrentDirection;                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.Interp3ControlPoint
// 0x0018 (0x0034 - 0x001C)
struct FInterp3ControlPoint : public FInterpControlPoint
{
	struct FRotator                                    RotationControlPoint;                                     // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              RotationRadius;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EInterp3Method                                     Interp3Method;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x002D(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.IslandRoomData
// 0x0024
struct FIslandRoomData
{
	int                                                LandId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndStateTime;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PlayerNum;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class APlayerController>>    Players;                                                  // 0x000C(0x000C) (ZeroConstructor)
	bool                                               IsEnd;                                                    // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                FirstPlayerEnterTime;                                     // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bArenaOccupied;                                           // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bForceCheck;                                              // 0x0021(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0022(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WaitDropData
// 0x0030
struct FWaitDropData
{
	class ASTExtraBaseCharacter*                       KillerPawn;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     DeadPawnDesc;                                             // 0x0004(0x000C) (ZeroConstructor)
	struct FVector                                     DropGroundPoint;                                          // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class UClass*                                      DropTomb;                                                 // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        DropPlanIDList;                                           // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bDropedByPlayer;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DropIDData
// 0x000C
struct FDropIDData
{
	TArray<struct FName>                               DropRowList;                                              // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RemainItemRuleDataRow
// 0x0014
struct FRemainItemRuleDataRow
{
	int                                                KeyID;                                                    // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemId;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                itemType;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemSubType;                                              // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RemainPerc;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RandomDropData
// 0x0034
struct FRandomDropData
{
	TArray<int>                                        ItemIdList;                                               // 0x0000(0x000C) (ZeroConstructor)
	int                                                RuleID;                                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ItemCountList;                                            // 0x0010(0x000C) (ZeroConstructor)
	float                                              Weight;                                                   // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DropMode;                                                 // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinAttachment;                                            // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxAttachment;                                            // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ItemIDStyle;                                              // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDropOnDead;                                              // 0x0030(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DropToGroundData
// 0x0038
struct FDropToGroundData
{
	struct FPickUpItemData                             PickUpItemData;                                           // 0x0000(0x0030)
	int                                                ItemId;                                                   // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterSingleBulletDropIds
// 0x0018
struct FMonsterSingleBulletDropIds
{
	TArray<int>                                        BulletDropIds;                                            // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        BulletDropParams;                                         // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DropItemConfig
// 0x000C
struct FDropItemConfig
{
	int                                                ItemDropPercent;                                          // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemDropRuleID;                                           // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RandomCount;                                              // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MonsterSingleDropIds
// 0x000C
struct FMonsterSingleDropIds
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemsBoxConfigDataAssetConfigItem
// 0x0010
struct FItemsBoxConfigDataAssetConfigItem
{
	float                                              ProbabilityPercent;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CategoryFilter;                                           // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.ItemsBoxConfigDataAssetConfigGroup
// 0x0018
struct FItemsBoxConfigDataAssetConfigGroup
{
	struct FString                                     GroupName;                                                // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FItemsBoxConfigDataAssetConfigItem>  ConfigItems;                                              // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.ServerCheckBox
// 0x004C
struct FServerCheckBox
{
	TEnumAsByte<enum ESTEPoseState>                    PoseID;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     BodyBoundBoxExtent;                                       // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     HeadBoundBoxExtent;                                       // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     PitchOffset;                                              // 0x0028(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              ReferenceHSlope;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReferenceVSlope;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HMinScale;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VMinScale;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HMaxScale;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VMaxScale;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterHistoryData
// 0x0064
struct FCharacterHistoryData
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (IsPlainOldData)
	struct FBox                                        BoundBox;                                                 // 0x0018(0x001C) (IsPlainOldData)
	struct FBox                                        HeadBoundBox;                                             // 0x0034(0x001C) (IsPlainOldData)
	bool                                               IsInVehicle;                                              // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	struct FVector                                     VehicleLocation;                                          // 0x0054(0x000C) (IsPlainOldData)
	EMoveBaseSpeedType                                 MoveBaseState;                                            // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DistanceContinueHitCheck
// 0x002C
struct FDistanceContinueHitCheck
{
	float                                              CheckDisSquared;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxContinueTimes;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShootIntervalBuff;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxCheatTimes;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0010(0x001C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HeightLOD
// 0x0008
struct FHeightLOD
{
	float                                              Height;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LOD;                                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RPGBulletSeekAndLockData
// 0x0014
struct FRPGBulletSeekAndLockData
{
	float                                              DirectFlyTime;                                            // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurnDirectionRadSpeed;                                    // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FollowTargetTime;                                         // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       FollowTarget;                                             // 0x000C(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SeekAndLockRPGBulletLaunchParams
// 0x0070
struct FSeekAndLockRPGBulletLaunchParams
{
	struct FProjectileBulletLaunchParams               BaseParam;                                                // 0x0000(0x0050) (BlueprintVisible)
	struct FRPGBulletSeekAndLockData                   SeekAndLockData;                                          // 0x0050(0x0014) (BlueprintVisible)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0064(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SeekAndLockStageConfig
// 0x0008
struct FSeekAndLockStageConfig
{
	float                                              LockTotalTime;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShrinkSpeed;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LaserTraceServerSyncData
// 0x0018
struct FLaserTraceServerSyncData
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
	struct FVector                                     ClientTracePos;                                           // 0x000C(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LensFlareElement
// 0x0028
struct FLensFlareElement
{
	float                                              Position;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Size;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UV0;                                                      // 0x0008(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   UVSize;                                                   // 0x0010(0x0008) (Edit, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0018(0x0010) (Edit, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LevelArearAssetInfo
// 0x0030
struct FLevelArearAssetInfo
{
	TArray<class UTexture*>                            TextureList;                                              // 0x0000(0x000C) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UMaterialInterface*>                  MaterialList;                                             // 0x000C(0x000C) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class USkeletalMesh*>                       SkeletalMeshList;                                         // 0x0018(0x000C) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UStaticMesh*>                         StaticMeshList;                                           // 0x0024(0x000C) (Edit, ZeroConstructor, Transient, EditConst)
};

// ScriptStruct ShadowTrackerExtra.LobbyBgMatData
// 0x0008
struct FLobbyBgMatData
{
	TEnumAsByte<enum ELobbyBgMatType>                  matType;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UMaterialInstance*                           matPtr;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GenderMapping
// 0x0010
struct FGenderMapping
{
	struct FName                                       GenderStr;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ELobbyCharacterAnimType>          GenderType;                                               // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.XTaskSyncData
// 0x0010
struct FXTaskSyncData
{
	int                                                TaskId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurProgress;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AimProgress;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFXTaskStateType                                   State;                                                    // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EXTaskType                                         TaskType;                                                 // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MarkDispatchAction
// 0x0088
struct FMarkDispatchAction
{
	EMarkDispatchActionType                            ActionType;                                               // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EMarkDispatchRange                                 RangeType;                                                // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FMarkSyncData                               SyncData;                                                 // 0x0004(0x0058) (BlueprintVisible)
	float                                              DispatchDelayTime;                                        // 0x005C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RangeRad;                                                 // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class ASTExtraPlayerState>          WeakPlayerState;                                          // 0x0064(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DispatchTime;                                             // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsFromLocal;                                             // 0x0070(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FScriptDelegate                             OnMapAlertSet;                                            // 0x0078(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.MarkPathSetting
// 0x001C
struct FMarkPathSetting
{
	int                                                UIBPSrcID;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     UIBPSoftPtr;                                              // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     UIDescription;                                            // 0x0010(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.MarkActorInstInfo
// 0x0004
struct FMarkActorInstInfo
{
	int                                                UIBPInstID;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UIBPAsyncParams
// 0x0088
struct FUIBPAsyncParams
{
	unsigned char                                      UnknownData00[0x88];                                      // 0x0000(0x0088) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VisualFieldLayer
// 0x000C
struct FVisualFieldLayer
{
	float                                              LayerFloorHeight;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LayerRoofHeight;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LayerID;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VisualFieldLayerConfig
// 0x000C
struct FVisualFieldLayerConfig
{
	TArray<struct FVisualFieldLayer>                   VisualLayerList;                                          // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.NoiseInfo
// 0x0024
struct FNoiseInfo
{
	ESTAINoiseType                                     NoiseType;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Instigator;                                               // 0x0004(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // 0x000C(0x000C) (IsPlainOldData)
	float                                              LoudnessAtStart;                                          // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LoudnessHeard;                                            // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HeardTime;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.NoiseCheckResult
// 0x0008
struct FNoiseCheckResult
{
	bool                                               Result;                                                   // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	ESTAINoiseType                                     NoiseType;                                                // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              LoudnessHeard;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ModAdapterSpawnInfo
// 0x0040
struct FModAdapterSpawnInfo
{
	class AActor*                                      RelatedActor;                                             // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       LightType;                                                // 0x0008(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // 0x0010(0x0030) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MonsterAnimGroup
// 0x0014
struct FMonsterAnimGroup
{
	int                                                MonsterID;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RandomAnimID;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class ASTExtraSimpleCharacter>> MonsterGroup;                                             // 0x0008(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterDropTableRow
// 0x001C
struct FMonsterDropTableRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FMonsterSingleDropIds>               DropIds;                                                  // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<struct FMonsterSingleBulletDropIds>         BulletDropIds;                                            // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterTableRow
// 0x00BC
struct FMonsterTableRow
{
	int                                                MonsterID;                                                // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterTeamID;                                            // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     MonsterName;                                              // 0x0008(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MonsterNameID;                                            // 0x0014(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                MonsterLevel;                                             // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BPID;                                                     // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Gold;                                                     // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SuperGold;                                                // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SpecialStateID;                                           // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DropID;                                                   // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FMonsterDropTableRow                        DropData;                                                 // 0x003C(0x001C) (BlueprintVisible)
	int                                                Rarity;                                                   // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterType;                                              // 0x005C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterFuncType;                                          // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Attack;                                                   // 0x0064(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Armor;                                                    // 0x0068(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Pierce;                                                   // 0x006C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Health;                                                   // 0x0070(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AI;                                                       // 0x0074(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SkillStrength;                                            // 0x0078(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HealthBarCount;                                           // 0x007C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedScale;                                               // 0x0080(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      Resistances;                                              // 0x0084(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        PaSkillIds;                                               // 0x0090(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     BPPath;                                                   // 0x009C(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                RageTimer;                                                // 0x00A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NeedSendAttackFlow;                                       // 0x00AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAvatar;                                            // 0x00B0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	float                                              TakeDamageScale;                                          // 0x00B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageScale;                                              // 0x00B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MonsterSpecialStateTableRow
// 0x0028
struct FMonsterSpecialStateTableRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        BornSkillList;                                            // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        RageSkillIdList;                                          // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        AloneSkillIdList;                                         // 0x001C(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterFloatingTextData
// 0x0014
struct FMonsterFloatingTextData
{
	float                                              BaseDamage;                                               // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadShot;                                               // 0x0004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FVector_NetQuantize                         ImpactPoint;                                              // 0x0008(0x000C) (BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.SpawnGroupItemInfo
// 0x000C
struct FSpawnGroupItemInfo
{
	int                                                PawnGroupID;                                              // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PawnID;                                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PawnPercent;                                              // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpawnTableData
// 0x0010
struct FSpawnTableData
{
	int                                                PawnID;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     PathName;                                                 // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterSpeciesParams
// 0x0058
struct FMonsterSpeciesParams
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FMonsterParams                              Params;                                                   // 0x0004(0x0050)
	int                                                SingleId;                                                 // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RegisterDelayTime
// 0x0014
struct FRegisterDelayTime
{
	float                                              DelayTime;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        CallBackPar;                                              // 0x0004(0x000C) (ZeroConstructor)
	bool                                               IsDone;                                                   // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RegisterTimerInfo
// 0x0014
struct FRegisterTimerInfo
{
	TArray<struct FRegisterDelayTime>                  DelayTimes;                                               // 0x0000(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x000C(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterWaveRunInfo
// 0x0014
struct FMonsterWaveRunInfo
{
	int                                                CallNum;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TotalMonsterNum;                                          // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GenerateMonsterNum;                                       // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeadMonsterNum;                                           // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndNum;                                                   // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LevelMonsterWaveRun
// 0x0020
struct FLevelMonsterWaveRun
{
	struct FGameLevelDesc                              LevelDesc;                                                // 0x0000(0x0014) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FMonsterWaveRunInfo>                 WaveRunInfoList;                                          // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.LevelMonsterWaveCfg
// 0x0024
struct FLevelMonsterWaveCfg
{
	struct FGameLevelDesc                              LevelDesc;                                                // 0x0000(0x0014) (BlueprintVisible, BlueprintReadOnly)
	int                                                DiffcultPerc;                                             // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FMonsterWave>                        WaveCfgList;                                              // 0x0018(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GM_MonsterSpawnAction
// 0x0020
struct FGM_MonsterSpawnAction
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Times;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                interval;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinRandTime;                                              // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxRandTime;                                              // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxLimit;                                                 // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LimitType;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AdjustPlanID;                                             // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ItemCallMonsterLimit
// 0x000C
struct FItemCallMonsterLimit
{
	int                                                WeatherPhase;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LimitItemCallNum;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LimitTotalNum;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LevelMonsterGenerateInfo
// 0x0020
struct FLevelMonsterGenerateInfo
{
	struct FGameLevelDesc                              LevelDesc;                                                // 0x0000(0x0014) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FMonsterGenerateInfo>                DelayGenerateInfoList;                                    // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DelaySpawnActionTimerRegister
// 0x0008
struct FDelaySpawnActionTimerRegister
{
	int                                                RegisterID;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ActionType;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MonsterSpawnInfo
// 0x0058
struct FMonsterSpawnInfo
{
	int                                                FlowId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterID;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterRebornTimes;                                       // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterReBornDelay;                                       // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterWaveId;                                            // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterChapterID;                                         // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MonsterLevelID;                                           // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GenerateTime;                                             // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     pos;                                                      // 0x0020(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FRotator                                    Rot;                                                      // 0x002C(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                PosRadius;                                                // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FRoadPointInfo>                      RoadPoints;                                               // 0x003C(0x000C) (BlueprintVisible, ZeroConstructor)
	TEnumAsByte<enum EMonsterSpawnSourceType>          SourceType;                                               // 0x0048(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	class APawn*                                       CallPawn;                                                 // 0x004C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	uint32_t                                           CallPawnKey;                                              // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CallType;                                                 // 0x0054(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MonsterLimit
// 0x000C
struct FMonsterLimit
{
	int                                                WeatherPhase;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumLimit;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CurRefreshNum;                                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerMonsterSpot
// 0x0010
struct FPlayerMonsterSpot
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             SpotList;                                                 // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterSpawnPlan
// 0x0010
struct FMonsterSpawnPlan
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterSpawnPlanIDAdjust
// 0x000C
struct FMonsterSpawnPlanIDAdjust
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterSpawnAction
// 0x002C
struct FMonsterSpawnAction
{
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0000(0x002C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirInput
// 0x0010
struct FAirInput
{
	float                                              Throttle;                                                 // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AxisControls;                                             // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InputInterpSetting
// 0x0008
struct FInputInterpSetting
{
	float                                              RiseRate;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FallRate;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirInputConfig
// 0x0020
struct FAirInputConfig
{
	struct FInputInterpSetting                         RollInterpolation;                                        // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         PitchInterpolation;                                       // 0x0008(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleForwardInterpolation;                             // 0x0010(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleBackwardInterpolation;                            // 0x0018(0x0008) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.MappedData
// 0x0010
struct FMappedData
{
	struct FVector2D                                   InputMap;                                                 // 0x0000(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   OutputMap;                                                // 0x0008(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirGeneralConfig
// 0x0020
struct FAirGeneralConfig
{
	bool                                               bCheckRelativeAltitude;                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              MaxRelAltitudeDistInM;                                    // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTraceDistInM;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedForAirTick;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToAnimInputMap;                                      // 0x0010(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AirRotorConfig
// 0x0044
struct FAirRotorConfig
{
	struct FInputInterpSetting                         ThrottleInterpForward;                                    // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         ThrottleInterpReverse;                                    // 0x0008(0x0008) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RotorSpeedThrottleOffset;                                 // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 EnginePowerRotorSpeedScale;                               // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 ThrottleToRPMCurve;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOnRPMInterpSpeed;                                   // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOffRPMInterpSpeed;                                  // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastRotorOnSpeed;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastRotorOffSpeed;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirEngineConfig
// 0x0098
struct FAirEngineConfig
{
	float                                              TorqueMassScale;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                EngineCurve;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StaticCOMOffset;                                          // 0x0008(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RollInputOffsetVector;                                    // 0x0014(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 RollInputOffsetMap;                                       // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     PitchInputOffsetVector;                                   // 0x0030(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 PitchInputOffsetMap;                                      // 0x003C(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ElevationScalarSpeedMap;                                  // 0x004C(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ReverseRelativeAltMap;                                    // 0x005C(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ReverseBackSpeedMap;                                      // 0x006C(0x0010) (Edit, DisableEditOnInstance)
	float                                              MinThrottleForBackForce;                                  // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedInKmForFastOn;                                    // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRotorRpmForFastOn;                                     // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FInputInterpSetting                         FastOnInterp;                                             // 0x0088(0x0008) (Edit, DisableEditOnInstance)
	struct FInputInterpSetting                         SlowOnInterp;                                             // 0x0090(0x0008) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AirLiftConfig
// 0x00A4
struct FAirLiftConfig
{
	float                                              LiftForceMassScale;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToLiftForceMap;                                      // 0x0004(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     LiftForceStaticOffset;                                    // 0x0014(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 RollLiftOffsetMap;                                        // 0x0020(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     RollLiftOffsetVector;                                     // 0x0030(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 PitchLiftOffsetMap;                                       // 0x003C(0x0010) (Edit, DisableEditOnInstance)
	struct FVector                                     PitchLiftOffsetVector;                                    // 0x004C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundEffectMaxDistance;                                  // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundEffectMassScale;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     GroundEffectExtent;                                       // 0x0060(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 GroundEffectSpeedMap;                                     // 0x006C(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 GroundEffectPowerCurve;                                   // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 GroundEffectOffsetCurve;                                  // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     GroundEffectTraceOffset;                                  // 0x0084(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 GroundEffectAlphaOffsetMap;                               // 0x0090(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 AltitudeToLiftFactorCurve;                                // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirControlLimitConfig
// 0x000C
struct FAirControlLimitConfig
{
	float                                              MaxRoll;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPitch;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxYaw;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirControlTorqueConfig
// 0x0088
struct FAirControlTorqueConfig
{
	float                                              RollForceScale;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchForceScale;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToRollForceMap;                                      // 0x0008(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToPitchForceMap;                                     // 0x0018(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToRollDampingMap;                                    // 0x0028(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToPitchDampingMap;                                   // 0x0038(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 SpeedToYawDampingMap;                                     // 0x0048(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RollTargetForceMap;                                       // 0x0058(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 PitchTargetForceMap;                                      // 0x0068(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 RollToPitchForceMap;                                      // 0x0078(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AirControlForceConfig
// 0x0028
struct FAirControlForceConfig
{
	float                                              TorqueMassScale;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StaticCOMOffset;                                          // 0x0004(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 SpeedToControlForceMap;                                   // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	class UCurveVector*                                RollControlCurve;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                PitchControlCurve;                                        // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDragConfig
// 0x0048
struct FAirDragConfig
{
	struct FMappedData                                 SpeedToForwardForceMap;                                   // 0x0000(0x0010) (Edit, DisableEditOnInstance)
	struct FMappedData                                 ForwardVelocityDotToForwardForceMap;                      // 0x0010(0x0010) (Edit, DisableEditOnInstance)
	class UCurveFloat*                                 SpeedToForwardMergeCurve;                                 // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                SpeedDragCurve;                                           // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                HeightToSpeedCurve;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EngineOffDragScale;                                       // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZeroThrottleDragThreshold;                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZeroThrottleRelAltitudeDragThreshold;                     // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMappedData                                 ZeroThrottleDrag;                                         // 0x0038(0x0010) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AirEngineState
// 0x002C
struct FAirEngineState
{
	bool                                               bIsEngineOn;                                              // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              EngineOnAlpha;                                            // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EnginePower;                                              // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EnginePowerAlpha;                                         // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentEngineThrottle;                                    // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentRotorThrottle;                                     // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentRotorRPM;                                          // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetRotorRPM;                                           // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentRotorRotation;                                     // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentRotorRotationFast;                                 // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFastRotorActive;                                       // 0x0028(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirVehicleState
// 0x0034
struct FAirVehicleState
{
	float                                              SpeedInKm;                                                // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelativeAltitudeMeters;                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RelativeAltitudeAlpha;                                    // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AbsoluteAltitudeMeters;                                   // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClimbRate;                                                // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EngineForceNormalized;                                    // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GroundEffectAlpha;                                        // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GroundEffectLocation;                                     // 0x001C(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     GroundEffectNormal;                                       // 0x0028(0x000C) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VerifySwitch
// 0x000C
struct FVerifySwitch
{
	int                                                PunishThresHold;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0004(0x0001) MISSED OFFSET
	bool                                               bShouldPunish;                                            // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                VerifyFailedCnt;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MoveCheatAntiStrategy
// 0x0088
struct FMoveCheatAntiStrategy
{
	uint32_t                                           bIsOpen;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxAllowClientSideTimeLag;                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CheckTimeSpeedIntervel;                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxAllowCheatMoveTimes;                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDistanceScaleFactor;                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxPublishForbidMoveTime;                                 // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ServerSendPingIntervel;                                   // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveSpeedValue;                                        // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxSpeedSplitNum;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxContinuousCheatMoveTimes;                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxClientSpeed;                                           // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5C];                                      // 0x002C(0x005C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MoveCheatAntiStrategy2
// 0x0050
struct FMoveCheatAntiStrategy2
{
	uint32_t                                           bIsOpen;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CheckTimeSpeedIntervel;                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxAllowCheatMoveTimes;                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDistanceScaleFactor;                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxPublishForbidMoveTime;                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveSpeedValue;                                        // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxSpeedSplitNum;                                         // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x001C(0x0034) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CharacterZMoveDistanceCheck
// 0x0034
struct FCharacterZMoveDistanceCheck
{
	uint32_t                                           bIsOpen;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxAllowCheatMoveTimes;                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxAllowMoveZHeight;                                      // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x000C(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ShovelAntiCheat
// 0x0078
struct FShovelAntiCheat
{
	float                                              DataSendInterval;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DataSampleInterval;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SampleMoveVelocityTorelate;                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheatLockTime;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxServerClientDeltaCount;                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0014(0x0060) MISSED OFFSET
	class UMoveAntiCheatComponent*                     OwnerMoveAntiCheat;                                       // 0x0074(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ClientTimeSpeedCheck
// 0x003C
struct FClientTimeSpeedCheck
{
	unsigned char                                      UnknownData00[0x24];                                      // 0x0000(0x0024) MISSED OFFSET
	float                                              CheckTimeDeltaInterval;                                   // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxClientTimeDeltaAheadServer;                            // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxPublishForbidMoveTime;                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxServerTimeDelta;                                       // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxClientAheadServerTotalTime;                            // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxProcessCounterOneFrame;                                // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RealtimeMoveSpeedCheck
// 0x0020
struct FRealtimeMoveSpeedCheck
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MoveCheatAntiStrategy6
// 0x0574
struct FMoveCheatAntiStrategy6
{
	uint32_t                                           bIsOpen;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxAllowCheatMoveTimes;                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxPublishForbidMoveTime;                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxVectorAccAngel;                                        // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxSumVectorLength;                                       // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxVectorAccTime;                                         // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDeltaTime;                                         // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x558];                                     // 0x001C(0x0558) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ShovelInfo
// 0x0024
struct FShovelInfo
{
	unsigned char                                      UnknownData00[0x24];                                      // 0x0000(0x0024) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActorList
// 0x000C
struct FActorList
{
	TArray<class AActor*>                              PointerList;                                              // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MovingNoteActor
// 0x0024
struct FMovingNoteActor
{
	class AActor*                                      NoteActor;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0004(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SubLevelComponentMapValue
// 0x00F4
struct FSubLevelComponentMapValue
{
	struct FString                                     Name;                                                     // 0x0000(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        IndexOffsetArray;                                         // 0x000C(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        VertexOffsetIndex;                                        // 0x0018(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndex1;                                             // 0x0024(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndex2;                                             // 0x0030(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndex3;                                             // 0x003C(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndex4;                                             // 0x0048(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        UnderBorderIndex1;                                        // 0x0054(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        UnderBorderIndex2;                                        // 0x0060(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        UnderBorderIndex3;                                        // 0x006C(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        UnderBorderIndex4;                                        // 0x0078(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndicesBuffer1;                                     // 0x0084(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndicesBuffer2;                                     // 0x0090(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndicesBuffer3;                                     // 0x009C(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        BorderIndicesBuffer4;                                     // 0x00A8(0x000C) (Edit, ZeroConstructor)
	struct FString                                     Sibling1Name;                                             // 0x00B4(0x000C) (Edit, ZeroConstructor)
	struct FString                                     Sibling2Name;                                             // 0x00C0(0x000C) (Edit, ZeroConstructor)
	struct FString                                     Sibling3Name;                                             // 0x00CC(0x000C) (Edit, ZeroConstructor)
	struct FString                                     Sibling4Name;                                             // 0x00D8(0x000C) (Edit, ZeroConstructor)
	int                                                Sibling1Idx;                                              // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Sibling2Idx;                                              // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Sibling3Idx;                                              // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Sibling4Idx;                                              // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomMarkDataInNavigator
// 0x001C
struct FCustomMarkDataInNavigator
{
	int                                                MarkInstID;                                               // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 MarkWidget;                                               // 0x0004(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MarkDistanceText;                                         // 0x0008(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     MarkLocation;                                             // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	bool                                               bAdjustWhenOutRange;                                      // 0x0018(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NetProfileTimeBase
// 0x000C
struct FNetProfileTimeBase
{
	float                                              StartTime;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NetProfileConditionBase
// 0x000C
struct FNetProfileConditionBase
{
	ENetProfileCondition                               Condition;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Duration;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NetProfileMonitorBase
// 0x0018
struct FNetProfileMonitorBase
{
	ENetProfileMonitorArg                              NetProfileMonitorArg;                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	double                                             Threshold;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.StatProfileMonitorBase
// 0x0010
struct FStatProfileMonitorBase
{
	int                                                MinClientNum;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NewbieGuideUIInfo
// 0x0088
struct FNewbieGuideUIInfo
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.NewbieGuideUIInfo.WidgetClassPath
	bool                                               isMountUIDynamic;                                         // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FString                                     MountName;                                                // 0x002C(0x000C) (Edit, ZeroConstructor)
	struct FString                                     MountOuterName;                                           // 0x0038(0x000C) (Edit, ZeroConstructor)
	struct FAnchorData                                 LayoutData;                                               // 0x0044(0x0028) (Edit)
	struct FString                                     LogicManagerNames;                                        // 0x006C(0x000C) (Edit, ZeroConstructor)
	bool                                               bAutoSize;                                                // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                ZOrder;                                                   // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWidget*                                     UIWidget;                                                 // 0x0080(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      UIWidgetClass;                                            // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.NewbieGuideItem
// 0x0068
struct FNewbieGuideItem
{
	int                                                ID;                                                       // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0004(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<enum ENewbieGuideType>                 Type;                                                     // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                MaxGuideCounts;                                           // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxGuideLevel;                                            // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TEnumAsByte<enum ENewbieGuidePlayerCategory>> SubjectPlayerTypes;                                       // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                Priority;                                                 // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MuteFlag;                                                 // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PreconditionID;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreconditionTipTimeGap;                                   // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class USTNewbieGuideConditionBase*>         Conditions;                                               // 0x0038(0x000C) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	class USTNewbieGuideSuccessListenerBase*           QuickFinishedListener;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class USTNewbieGuideSuccessListenerBase*>   QuickFinishedListenerList;                                // 0x0048(0x000C) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	float                                              Duration;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FNewbieGuideUIInfo>                  UIInfos;                                                  // 0x0058(0x000C) (Edit, ZeroConstructor)
	bool                                               UseNewEdition;                                            // 0x0064(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LoadGuideUIFinishRet
// 0x0008
struct FLoadGuideUIFinishRet
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LoadGuideConfig
// 0x0028
struct FLoadGuideConfig
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VolleyShootInfoCache
// 0x0018
struct FVolleyShootInfoCache
{
	struct FVector                                     StartLoc;                                                 // 0x0000(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     ShootDir;                                                 // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.NormalProjectileVerifyConfig
// 0x002C
struct FNormalProjectileVerifyConfig
{
	float                                              MaxShootPointTolerateDistanceOffset;                      // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxShootPointTolerateDistanceOffsetVehicle;               // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxImpactPointTolerateDistanceOffset;                     // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlockVerifyImpactNormalOffset;                            // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVerifyBulletScDiff;                                      // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              MaxDiffServerClient;                                      // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVerifyShootDir2D;                                        // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              ShortDirReverseDistance;                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TolerateBulletDirOffsetSquared;                           // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVerifyWeaponFireInfoTimeForcePunish;                     // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVerifyClientFlySpeed;                                    // 0x0025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVerifyLauchTimeWithServer;                               // 0x0026(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
	float                                              ClientServerFlyTimeTorelate;                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GoodsInfo
// 0x002C
struct FGoodsInfo
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        CurrencyCost;                                             // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                Count;                                                    // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ReplenishTime;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ReplenishDuration;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                itemType;                                                 // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemOrder;                                                // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemCountPerBuy;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.OverrideAudioEventMap
// 0x003C
struct FOverrideAudioEventMap
{
	TMap<struct FString, class UAkAudioEvent*>         OverrideAudioEventMap;                                    // 0x0000(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MutilAudioEvent
// 0x000C
struct FMutilAudioEvent
{
	TArray<class UAkAudioEvent*>                       MutilAudioEvent;                                          // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AdditionalAudioEventMap
// 0x003C
struct FAdditionalAudioEventMap
{
	TMap<struct FString, struct FMutilAudioEvent>      AdditionalAudioEventMap;                                  // 0x0000(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.OpenCollisionLODAngle
// 0x0008
struct FOpenCollisionLODAngle
{
	float                                              DistSq;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BodyTypeDef
// 0x0008
struct FBodyTypeDef
{
	int                                                UpThreshold;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DownThreshold;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticlePool
// 0x0014
struct FParticlePool
{
	int                                                VisiableParticleNum;                                      // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class UParticleSystemComponent>> Pool;                                                     // 0x0004(0x000C) (ExportObject, ZeroConstructor, Transient)
	int                                                Size;                                                     // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticleCache
// 0x0010
struct FParticleCache
{
	TArray<class UParticleSystemComponent*>            CachedParticles;                                          // 0x0000(0x000C) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ParticleCountLimit
// 0x0008
struct FParticleCountLimit
{
	int                                                Level;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticleCacheConfig
// 0x0020
struct FParticleCacheConfig
{
	struct FName                                       ParticleName;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxCullingDistance;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleCountLimit>                 CountLimit;                                               // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	EDisplayPolicy                                     DisplayPolicy;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                DeviceLevelLimit;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PersistBase
// 0x0004
struct FPersistBase
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PersistPlaySequenceInfo
// 0x000C (0x0010 - 0x0004)
struct FPersistPlaySequenceInfo : public FPersistBase
{
	bool                                               bSetUp;                                                   // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       OwningActor;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LevelSequenceBindingInfo
// 0x0020
struct FLevelSequenceBindingInfo
{
	struct FMovieSceneObjectBindingID                  Binding;                                                  // 0x0000(0x0018) (BlueprintVisible)
	class AActor*                                      Actor;                                                    // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bBindingCharacterDisableMove;                             // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PersistLevelSequenceInfo
// 0x005C (0x0060 - 0x0004)
struct FPersistLevelSequenceInfo : public FPersistBase
{
	TArray<struct FLevelSequenceBindingInfo>           LevelSequenceBindings;                                    // 0x0004(0x000C) (ZeroConstructor)
	class UClass*                                      SequenceActorClass;                                       // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0014(0x000C) MISSED OFFSET
	struct FTransform                                  TransfromOrigin;                                          // 0x0020(0x0030) (IsPlainOldData)
	class AActor*                                      TransfromOriginActor;                                     // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              StartPlayTimeSeconds;                                     // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PetMeshPackage
// 0x00C4 (0x00C8 - 0x0004)
struct FPetMeshPackage : public FAssetPackage
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PetMeshPackage.stMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PetMeshPackage.skMesh
	class UClass*                                      animBP;                                                   // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleAsset>                      ParticleData;                                             // 0x005C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PetMeshPackage.Mat
	unsigned char                                      UnknownData04[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.PetMeshPackage.MatBase
	TArray<struct FMaterialAsset>                      additionalMats;                                           // 0x00B8(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PetAttachInfo
// 0x0020
struct FPetAttachInfo
{
	struct FName                                       AttachSocketName;                                         // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AttachOffset;                                             // 0x0008(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    AttachRotation;                                           // 0x0014(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FixPetAttachInfo
// 0x000C
struct FFixPetAttachInfo
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PetId;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PetMontageConfig
// 0x0008
struct FPetMontageConfig
{
	int                                                AnimationAssetId;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PetEventPlayerStateTypeSt
// 0x0002
struct FPetEventPlayerStateTypeSt
{
	EPawnState                                         PawnState;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EPawnStateChangeType>             StateChangeType;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PetEventItemIns
// 0x0010
struct FPetEventItemIns
{
	struct FString                                     Tips;                                                     // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UPetEventItem*                               EventItem;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DestructInfo
// 0x0008
struct FDestructInfo
{
	class AController*                                 LastHitBy;                                                // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      LastHitCauser;                                            // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PickupCountLimit
// 0x0008
struct FPickupCountLimit
{
	int                                                DeviceLevel;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CountLimit;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlaneData
// 0x0080
struct FPlaneData
{
	int                                                FlightNo;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bStarted;                                                 // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	class AActor*                                      ThePlane;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanJump;                                                 // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FVector                                     PlaneVelocity;                                            // 0x0010(0x000C) (IsPlainOldData)
	struct FVector                                     PlaneStartLoc;                                            // 0x001C(0x000C) (IsPlainOldData)
	struct FVector                                     PlaneEndLoc;                                              // 0x0028(0x000C) (IsPlainOldData)
	struct FVector2D                                   CanJumpLoc;                                               // 0x0034(0x0008) (IsPlainOldData)
	struct FVector2D                                   ForceJumpLoc;                                             // 0x003C(0x0008) (IsPlainOldData)
	float                                              PlaneHeight;                                              // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalPlayerNum;                                           // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class APlayerController*>                   TotalPlayers;                                             // 0x004C(0x000C) (ZeroConstructor)
	TArray<class APlayerController*>                   CurPlayers;                                               // 0x0058(0x000C) (ZeroConstructor)
	int                                                TotalAINum;                                               // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class AAIController*>                       TotalAIs;                                                 // 0x0068(0x000C) (ZeroConstructor)
	int                                                CurAINum;                                                 // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FixedJumpPointRate;                                       // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanFixedJump;                                            // 0x007C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PlayerAutoNavOperator
// 0x001C
struct FPlayerAutoNavOperator
{
	bool                                               bIsCached;                                                // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPlayerAutoNavMode                                 CurMode;                                                  // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FString                                     TargetParam;                                              // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FVector                                     TargetDesc;                                               // 0x0010(0x000C) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ReplaceWeaponData
// 0x00B0
struct FReplaceWeaponData
{
	int                                                WeaponId;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FBattleItemData                             WeaponItemData;                                           // 0x0008(0x0098)
	TArray<struct FBattleItemData>                     WeaponAssociateItemDataList;                              // 0x00A0(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplaceWeaponDataMap
// 0x003C
struct FReplaceWeaponDataMap
{
	TMap<TEnumAsByte<enum ESurviveWeaponPropSlot>, struct FReplaceWeaponData> ReplaceWeaponDataMap;                                     // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RespawnIgnoreItemType
// 0x000C
struct FRespawnIgnoreItemType
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RespawnKeepItemData
// 0x0018
struct FRespawnKeepItemData
{
	int                                                ItemTypeID;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               TotalNumLimit;                                            // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0009(0x000F) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RespawnKeepWeaponData
// 0x0014 (0x002C - 0x0018)
struct FRespawnKeepWeaponData : public FRespawnKeepItemData
{
	TEnumAsByte<enum ESurviveWeaponPropSlot>           WeaponSlot;                                               // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	TArray<struct FRespawnKeepItemData>                AttachmentDatas;                                          // 0x001C(0x000C) (Edit, ZeroConstructor)
	int                                                ClipBulletNum;                                            // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RespawnKeepAllItemData
// 0x0018
struct FRespawnKeepAllItemData
{
	TArray<struct FRespawnKeepItemData>                ItemDatas;                                                // 0x0000(0x000C) (Edit, ZeroConstructor)
	TArray<struct FRespawnKeepWeaponData>              WeaponDatas;                                              // 0x000C(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RevivalCardItemPickData
// 0x0030
struct FRevivalCardItemPickData
{
	uint32_t                                           PickUpPlayerID;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           DroperPlayerID;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int64_t                                            PickupTime;                                               // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	int64_t                                            DroperTime;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PickUpName;                                               // 0x0018(0x000C) (ZeroConstructor)
	struct FString                                     DroperPlayerName;                                         // 0x0024(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VaultAnimDataPath
// 0x0018
struct FVaultAnimDataPath
{
	struct FString                                     VaultAnimPath;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     TeamVaultAnimPath;                                        // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.OutlineConfig
// 0x0018
struct FOutlineConfig
{
	struct FLinearColor                                Color;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Thickness;                                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnable;                                                 // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PredictLineMaterialParams
// 0x0010
struct FPredictLineMaterialParams
{
	class UMaterialParameterCollection*                MaterialParamCollection;                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ParamName;                                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomDropRule
// 0x0003
struct FCustomDropRule
{
	bool                                               bTraceIgnorePawn;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceIgnoreWarteringArea;                                // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAttachToTargetActor;                                     // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MaternalZombieRatio
// 0x000C
struct FMaternalZombieRatio
{
	int                                                PlayerNum;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaternalZombieNum;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaternalZombieKingNum;                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionGainExpInfo
// 0x001C
struct FInfectionGainExpInfo
{
	int                                                KillExp;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AssistExp;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AssistExpAcceptRange;                                     // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageExpRate;                                            // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HealthExpRate;                                            // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SecondExp;                                                // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GainExpInterval;                                          // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionRoleLevelInfo
// 0x0008
struct FInfectionRoleLevelInfo
{
	int                                                Exp;                                                      // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BuffID;                                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionRoleLevelMap
// 0x0040
struct FInfectionRoleLevelMap
{
	TMap<int, struct FInfectionRoleLevelInfo>          LevelMap;                                                 // 0x0000(0x0050) (BlueprintVisible, ZeroConstructor)
	int                                                MaxLevel;                                                 // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionPlayerInfo
// 0x0040
struct FInfectionPlayerInfo
{
	uint64_t                                           UId;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     UIDString;                                                // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     iconUrl;                                                  // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      gender;                                                   // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PlatformGender;                                           // 0x002D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                PlayerLevel;                                              // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SegmentLevel;                                             // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvatarBoxId;                                              // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InfectionShowRoundScoreData
// 0x0014
struct FInfectionShowRoundScoreData
{
	int                                                RoundNo;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterScore;                                             // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PersonScore;                                              // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillMonsters;                                             // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillPersons;                                              // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionRoundResultPlayerShowData
// 0x0070
struct FInfectionRoundResultPlayerShowData
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TeamID;                                                   // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FInfectionPlayerInfo                        InfectionPlayerInfo;                                      // 0x0018(0x0040) (BlueprintVisible, BlueprintReadOnly)
	struct FInfectionShowRoundScoreData                RoundScoreData;                                           // 0x0058(0x0014) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InfectionRoundResultData
// 0x00F8
struct FInfectionRoundResultData
{
	int                                                RoundNum;                                                 // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECharacterMainType                                 WinType;                                                  // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FInfectionRoundResultPlayerShowData         BestPerson;                                               // 0x0008(0x0070) (BlueprintVisible, BlueprintReadOnly)
	struct FInfectionRoundResultPlayerShowData         BestMonster;                                              // 0x0078(0x0070) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FInfectionRoundResultPlayerShowData> AllDataArray;                                             // 0x00E8(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InfectionRoundScoreData
// 0x007C
struct FInfectionRoundScoreData
{
	int                                                RoundNo;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MonsterScore;                                             // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PersonScore;                                              // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillMonsters;                                             // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillPersons;                                              // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RoundDamage;                                              // 0x0014(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BeMatrixMonsterTimes;                                     // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BeRevengerPlayerTimes;                                    // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           Headshot4Avenger;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RevengerPlayerKillWinTimes;                               // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BeMonsterWinTimes;                                        // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BePersonWinTimes;                                         // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                UseSpringJumpTimes;                                       // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                UseEnhancerTimes;                                         // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DamageToMonster;                                          // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DamageToRevengerPlayer;                                   // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ChooseZombieFirstTimes;                                   // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ChooseZombieSecondTimes;                                  // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ChooseZombieThirdTimes;                                   // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerKilled;                                             // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerHurtCount;                                          // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerDamageCount;                                        // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           HeadshotCounts;                                           // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           GunKillingTimes;                                          // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	int8_t                                             RoleType;                                                 // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             RoleTypeEnd;                                              // 0x0061(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	uint32_t                                           RoleTypeSwitchTime;                                       // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PlayerJumpHeightMax;                                      // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PlayerJumpSpeedMax;                                       // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerMoveDistance;                                       // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerMoveTime;                                           // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PlayerMoveSpeedAvg;                                       // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionPlayerScoreData
// 0x0098
struct FInfectionPlayerScoreData
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TeamID;                                                   // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayerEnterGameTime;                                      // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FInfectionPlayerInfo                        InfectionPlayerInfo;                                      // 0x0018(0x0040) (BlueprintVisible, BlueprintReadOnly)
	TMap<int, struct FInfectionRoundScoreData>         RoundScoreData;                                           // 0x0058(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InfectionRoundTlogCountData
// 0x00F8
struct FInfectionRoundTlogCountData
{
	float                                              RoundStartTime;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RoundEndTime;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                WinCamp;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnRevenger;                                           // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              RevengerSpawmTime;                                        // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RevengerDoSkillCount;                                     // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ZombieReviveCount;                                        // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NormalZombieDoSkillCount;                                 // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InvisibleZombieDoSkillCount;                              // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ThrowerZombieDoSkillCount;                                // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MotherZombieDoSkillCount;                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	TMap<int, struct FInfectionRoundTlogGuidData>      GuidCount;                                                // 0x002C(0x0050) (ZeroConstructor)
	TArray<struct FInfectionPlayerDeadTlogData>        DeadList;                                                 // 0x0068(0x000C) (ZeroConstructor)
	TMap<int, int>                                     ZombieLevelNumMap;                                        // 0x0074(0x0050) (ZeroConstructor)
	TArray<int>                                        EnhancerUserList;                                         // 0x00B0(0x000C) (ZeroConstructor)
	TMap<int, struct FInfectionSpringUseData>          SpringUseMap;                                             // 0x00BC(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.InfectionRoleTableRow
// 0x0090
struct FInfectionRoleTableRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     RoleName;                                                 // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                DieExchange;                                              // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MatrixEffect;                                             // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BornChoose;                                               // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     WeIcon;                                                   // 0x001C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     EnemyIcon;                                                // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<ECharacterSubType>                          VisibleRange;                                             // 0x0034(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                MainSkillId;                                              // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        BornSkillList;                                            // 0x0044(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     SkillIcon;                                                // 0x0050(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     SkillCDIcon;                                              // 0x005C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     SkillName;                                                // 0x0068(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     SkillDetail;                                              // 0x0074(0x000C) (BlueprintVisible, ZeroConstructor)
	float                                              SkillCD;                                                  // 0x0080(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     HeroIcon;                                                 // 0x0084(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.InfectionScoreTableRow
// 0x001C
struct FInfectionScoreTableRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Identity;                                                 // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Action;                                                   // 0x0008(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                param1;                                                   // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionContinuousKillInfo
// 0x0014
struct FInfectionContinuousKillInfo
{
	ECharacterMainType                                 PawnType;                                                 // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                KillNumber;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     KillerName;                                               // 0x0008(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.HighArcParam
// 0x0008
struct FHighArcParam
{
	float                                              HeightDiff;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityScale;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BossBornPoint
// 0x000C
struct FBossBornPoint
{
	struct FVector                                     BornPosition;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RepBossBornPoint
// 0x0010
struct FRepBossBornPoint
{
	int                                                FlowId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BornPosition;                                             // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WDSpawnZombieParams
// 0x0028
struct FWDSpawnZombieParams
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DangerousSignInfo
// 0x001C
struct FDangerousSignInfo
{
	struct FString                                     MsgID;                                                    // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FVector                                     LastDangerousLocation;                                    // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              LastMarkDangerousTime;                                    // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.QuickSignMark
// 0x006C
struct FQuickSignMark
{
	struct FString                                     MsgID;                                                    // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     MarkType;                                                 // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconPath;                                                 // 0x0018(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconBGPath;                                               // 0x0024(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconOuterPath;                                            // 0x0030(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconOuterBGPath;                                          // 0x003C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     ReplyID;                                                  // 0x0048(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FVector                                     Loc;                                                      // 0x0054(0x000C) (BlueprintVisible, IsPlainOldData)
	int                                                MaxNum;                                                   // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LifeSpan;                                                 // 0x0064(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsSelfMark;                                               // 0x0068(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.QuickSignIDArray
// 0x000C
struct FQuickSignIDArray
{
	TArray<struct FString>                             InnerArray;                                               // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.QuickSignMsg
// 0x0050
struct FQuickSignMsg
{
	struct FString                                     MsgID;                                                    // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FVector                                     HitPos;                                                   // 0x0018(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FString                                     ConfigKey;                                                // 0x0024(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                audioID;                                                  // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ParamString;                                              // 0x0034(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                BindActorGUID;                                            // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerKey;                                                // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MiniMapIconTypeId;                                        // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	EQuickSignSubType                                  MsgType;                                                  // 0x004C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplayTeammateInfo
// 0x0010
struct FReplayTeammateInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplayEnemyUIInfo
// 0x0010
struct FReplayEnemyUIInfo
{
	int                                                UIIndex;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WordLocation;                                             // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RespawnItem
// 0x0008
struct FRespawnItem
{
	int                                                ItemTableID;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RespawnItemMinorGroup
// 0x0010
struct FRespawnItemMinorGroup
{
	int                                                RandomWeight;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FRespawnItem>                        ItemList;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RespawnItemMajorGroup
// 0x0010
struct FRespawnItemMajorGroup
{
	int                                                RandomTimes;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FRespawnItemMinorGroup>              MinorGroupList;                                           // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RollItemData
// 0x0010
struct FRollItemData
{
	uint64_t                                           InstanceID;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           OwnerPlayerKey;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bFinished;                                                // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RollItemResult
// 0x0038
struct FRollItemResult
{
	struct FPickUpItemData                             ItemData;                                                 // 0x0000(0x0030) (Edit, BlueprintVisible)
	int                                                Roll;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMine;                                                  // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.StatueBaseParam
// 0x0024
struct FStatueBaseParam
{
	struct FString                                     MatPath;                                                  // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     TeamFlag;                                                 // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     TeamName;                                                 // 0x0018(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SectorRangeData
// 0x0008
struct FSectorRangeData
{
	float                                              Angle;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SecurityLogHitTargetInfo
// 0x0024
struct FSecurityLogHitTargetInfo
{
	unsigned char                                      UnknownData00[0x24];                                      // 0x0000(0x0024) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FPSMonitorConfigSwitch
// 0x0014
struct FFPSMonitorConfigSwitch
{
	bool                                               bFPSMonitor;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              FPSCollectInternal;                                       // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FPSCollectCountForGroup;                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FPSThreshold;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FPSLowActionType;                                         // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TargetBodyData
// 0x0008
struct FTargetBodyData
{
	EAvatarDamagePosition                              DamagePosition;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETargetBodyType                                    TargetBodyType;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              DamageScale;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FXDistancaScaleStruct
// 0x0010
struct FFXDistancaScaleStruct
{
	float                                              FXStartScaleDistance;                                     // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FXEndScaleDistance;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FXStartScaleValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FXEndScaleValue;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SurviveTableRowBase
// 0x0008 (0x000C - 0x0004)
struct FSurviveTableRowBase : public FTableRowBase
{
	int                                                ID;                                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PickUpSoundID;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PickUpGlobalDataTableRow
// 0x0154 (0x0160 - 0x000C)
struct FPickUpGlobalDataTableRow : public FSurviveTableRowBase
{
	TEnumAsByte<enum ESurvivePickUpGlobalCategory>     SurvivePickUpGlobalCategory;                              // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FSlateBrush                                 SmallProfileImage;                                        // 0x0010(0x0098) (Edit, BlueprintVisible)
	struct FSlateBrush                                 LargerProfileImage;                                       // 0x00A8(0x0098) (Edit, BlueprintVisible)
	struct FString                                     Name;                                                     // 0x0140(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     Description;                                              // 0x014C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                DisplayPriority;                                          // 0x0158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponComponentDataTableRow
// 0x000C (0x0018 - 0x000C)
struct FWeaponComponentDataTableRow : public FSurviveTableRowBase
{
	int                                                WeaponComponentID;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum EWeaponComponentType>             Type;                                                     // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	class UStaticMesh*                                 ShowMesh;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponComponentItemData
// 0x0178
struct FWeaponComponentItemData
{
	struct FPickUpGlobalDataTableRow                   PickUpGlobalDataTableRow;                                 // 0x0000(0x0160) (BlueprintVisible, BlueprintReadOnly)
	struct FWeaponComponentDataTableRow                WeaponComponentDataTableRow;                              // 0x0160(0x0018) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.ExtendBulletNumAttachment
// 0x0008
struct FExtendBulletNumAttachment
{
	int                                                TypeSpecificID;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ExtendMaxBulletNumInOneClip;                              // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponHitPartCoff
// 0x0014
struct FWeaponHitPartCoff
{
	float                                              Head;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Body;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Limbs;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Hand;                                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Foot;                                                     // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SRangeAttenuateConfig
// 0x000C
struct FSRangeAttenuateConfig
{
	int                                                rangeStart;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                rangeEnd;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              rangeAttenuateFactor;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponVisualBulletItemConfig
// 0x0008
struct FWeaponVisualBulletItemConfig
{
	bool                                               bEnabled;                                                 // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UParticleSystem*                             VisualBulletTrackFX;                                      // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponVisualBulletCameraModeConfig
// 0x0018
struct FWeaponVisualBulletCameraModeConfig
{
	struct FWeaponVisualBulletItemConfig               FPPSetting;                                               // 0x0000(0x0008) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletItemConfig               TPPSetting;                                               // 0x0008(0x0008) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletItemConfig               GunADSSetting;                                            // 0x0010(0x0008) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.WeaponVisualBulletClientModeConfig
// 0x0058
struct FWeaponVisualBulletClientModeConfig
{
	struct FWeaponVisualBulletCameraModeConfig         AutonomousClientSetting;                                  // 0x0000(0x0018) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletCameraModeConfig         OBPawnPerspectiveClientSetting;                           // 0x0018(0x0018) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletCameraModeConfig         ReplayPawnPerspectiveClientSetting;                       // 0x0030(0x0018) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletItemConfig               DefaultSetting;                                           // 0x0048(0x0008) (Edit, DisableEditOnInstance)
	struct FWeaponVisualBulletItemConfig               ReplayDefaultSetting;                                     // 0x0050(0x0008) (Edit, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.AutoAimingRangeConfig
// 0x0048
struct FAutoAimingRangeConfig
{
	float                                              Speed;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeRate;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedRate;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RangeRateSight;                                           // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedRateSight;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CrouchRate;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProneRate;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DyingRate;                                                // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DriveVehicleRate;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InVehicleRate;                                            // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FreeFallRate;                                             // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OpeningRate;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LandingRate;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              adsorbMaxRange;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              adsorbMinRange;                                           // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              adsorbMinAttenuationDis;                                  // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              adsorbMaxAttenuationDis;                                  // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              adsorbActiveMinRange;                                     // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AutoAimingConfig
// 0x0098
struct FAutoAimingConfig
{
	struct FAutoAimingRangeConfig                      OuterRange;                                               // 0x0000(0x0048) (Edit)
	struct FAutoAimingRangeConfig                      InnerRange;                                               // 0x0048(0x0048) (Edit)
	float                                              followTimeMax;                                            // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AutoAimingConfigByGameMode
// 0x009C
struct FAutoAimingConfigByGameMode
{
	class UClass*                                      GameStateClass;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	struct FAutoAimingConfig                           AutoAimingConfig;                                         // 0x0004(0x0098) (Edit)
};

// ScriptStruct ShadowTrackerExtra.FrameUITransformData
// 0x0040
struct FFrameUITransformData
{
	struct FTransform                                  Offset;                                                   // 0x0000(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              BaseSizeX;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BaseSizeY;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RepSnapshot
// 0x0038
struct FRepSnapshot
{
	float                                              TimeStamp;                                                // 0x0000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector_NetQuantize                         Location;                                                 // 0x0004(0x000C) (Transient)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (Transient, IsPlainOldData)
	struct FVector_NetQuantize                         LinearVelocity;                                           // 0x001C(0x000C) (Transient)
	struct FVector_NetQuantize                         AngularVelocity;                                          // 0x0028(0x000C) (Transient)
	bool                                               IsTeleport;                                               // 0x0034(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SimulateSyncSmooth
// 0x00D4
struct FSimulateSyncSmooth
{
	float                                              MaxPredictMoveTime;                                       // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxMoveDeltaTime;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmoothNetUpdateTime;                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmoothNetUpdateRotationTime;                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC4];                                      // 0x0010(0x00C4) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.IslandDuelData
// 0x000C
struct FIslandDuelData
{
	EIslandDuelState                                   DState;                                                   // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              EndTime;                                                  // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASTExtraBaseCharacter*                       DuelPlayer;                                               // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SocialIslandInteractEmoteData
// 0x0020
struct FSocialIslandInteractEmoteData
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MyEmoteID;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TargetEmoteID;                                            // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PrepareEmoteId;                                           // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                EmoteTipTextID;                                           // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     EmoteTipTexPath;                                          // 0x0014(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TextureLODBiasOverrideInfo
// 0x001C
struct FTextureLODBiasOverrideInfo
{
	TEnumAsByte<enum ETextureGroup>                    Group;                                                    // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<int>                                        OverrideLODBias;                                          // 0x0004(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0010(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MeshOptConfig
// 0x0010
struct FMeshOptConfig
{
	unsigned char                                      DeviceLevel;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      LODBias;                                                  // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              StaticMeshOverrideScreenSize;                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SkeletMeshOverrideScreenSize;                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseAvatarMerge;                                          // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      AvatarMergeStripTopLOD;                                   // 0x000D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ShadowOptConfig
// 0x0034
struct FShadowOptConfig
{
	bool                                               Enable;                                                   // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      DeviceLevel;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      BearerType;                                               // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	float                                              LOD0_ScreenSize;                                          // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LOD0_MaxNum;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	float                                              LOD1_ScreenSize;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LOD1_MaxNum;                                              // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0018(0x0004) MISSED OFFSET
	float                                              LOD2_ScreenSize;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LOD2_MaxNum;                                              // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0024(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SmartBearerConfig
// 0x0008
struct FSmartBearerConfig
{
	float                                              MaxBearerNum;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NormalSkinShowNum;                                        // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DeviceSmartBearerOverrideConfig
// 0x0014
struct FDeviceSmartBearerOverrideConfig
{
	struct FString                                     DeviceName;                                               // 0x0000(0x000C) (ZeroConstructor)
	struct FSmartBearerConfig                          SmartBearerConfig;                                        // 0x000C(0x0008)
};

// ScriptStruct ShadowTrackerExtra.SegamentData
// 0x0010
struct FSegamentData
{
	struct FVector                                     TargetLocation;                                           // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              MoveSpeed;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SocialIslandBattleStartGroup
// 0x000C
struct FSocialIslandBattleStartGroup
{
	TArray<class ASTExtraPlayerStart*>                 PlayerStarts;                                             // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SocialIslandPlayerStartGroup
// 0x0068
struct FSocialIslandPlayerStartGroup
{
	int                                                LandId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class ASTExtraPlayerStart*>                 PlayerStarts;                                             // 0x0004(0x000C) (ZeroConstructor)
	TMap<struct FString, struct FSocialIslandBattleStartGroup> BattleStarts;                                             // 0x0010(0x0050) (ZeroConstructor)
	struct FVector                                     LandLeftTop;                                              // 0x004C(0x000C) (IsPlainOldData)
	struct FVector                                     LandRightBottom;                                          // 0x0058(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SocialIslandSwitchLand
// 0x0010
struct FSocialIslandSwitchLand
{
	TWeakObjectPtr<class ASTExtraPlayerController>     Controller;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TargetLandId;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SwitchDelayTime;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.IslandItemSpotData
// 0x0040
struct FIslandItemSpotData
{
	TMap<struct FString, class UItemGroupRepeatSpotComponent*> ItemGroups;                                               // 0x0000(0x0050) (ExportObject, ZeroConstructor)
	int                                                LandId;                                                   // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TargetTrainData
// 0x001C
struct FTargetTrainData
{
	struct FString                                     UId;                                                      // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                TimeStamp;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Duration;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IslandID;                                                 // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SIslandAIPlayerMarkInfo
// 0x0048
struct FSIslandAIPlayerMarkInfo
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FGameModePlayerAliasInfo                    PlayerAliasInfo;                                          // 0x0010(0x0034) (BlueprintVisible)
	class ASTExtraBaseCharacter*                       AIPlayer;                                                 // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.IslandBattleData
// 0x000C
struct FIslandBattleData
{
	EIslandBattleState                                 BattleState;                                              // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              EndTime;                                                  // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ASTExtraBaseCharacter*                       BattlePlayer;                                             // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DamageParamters
// 0x0014
struct FDamageParamters
{
	float                                              MinimumDamage;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DamageInnerRadius;                                        // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DamageOuterRadius;                                        // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BaseMomentumMag;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STAINoiseEvent
// 0x0038
struct FSTAINoiseEvent
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	struct FVector                                     NoiseLocation;                                            // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Loudness;                                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRange;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Instigator;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       Tag;                                                      // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESTAINoiseType                                     NoiseType;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              StartAttenuationDist;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EndAttenuationDist;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ESTAINoiseEventParams
// 0x0010
struct FESTAINoiseEventParams
{
	ESTAINoiseType                                     NoiseType;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Loudness;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartAttenuationDist;                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRange;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.StateMutual
// 0x0008
struct FStateMutual
{
	int                                                state1;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                state2;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleDamageRepData
// 0x0018
struct FSimpleDamageRepData
{
	float                                              Damage;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentHeath;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               IsFatalHealthCost;                                        // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadShotDamage;                                         // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	class APawn*                                       DamageInstigatorPawn;                                     // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	class APawn*                                       DamageReceiver;                                           // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NetCounter;                                               // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleDamageEvent
// 0x0008 (0x00B0 - 0x00A8)
struct FVehicleDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PoisonDamageEvent
// 0x0000 (0x00A8 - 0x00A8)
struct FPoisonDamageEvent : public FSTPointDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.MeleeDamageEvent
// 0x0020 (0x00C8 - 0x00A8)
struct FMeleeDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x00A8(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FallingDamageEvent
// 0x0008 (0x00B0 - 0x00A8)
struct FFallingDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DrowningDamageEvent
// 0x0000 (0x00A8 - 0x00A8)
struct FDrowningDamageEvent : public FSTPointDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.STBurningDamageEvent
// 0x0020 (0x00C8 - 0x00A8)
struct FSTBurningDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x00A8(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AnimalStateMutual
// 0x0002
struct FAnimalStateMutual
{
	EAnimalState                                       state1;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAnimalState                                       state2;                                                   // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LODToSkipFrame
// 0x0008
struct FLODToSkipFrame
{
	int                                                LODLevel;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SkipFrame;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ActorMarkData
// 0x0014
struct FActorMarkData
{
	class UClass*                                      MarkActorClass;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TypeId;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAddMarkFlag                                       MapAdded;                                                 // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLocalData;                                               // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              DistanceToMark;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateRotation;                                          // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffAttachmentItem
// 0x0048
struct FBuffAttachmentItem
{
	class USceneComponent*                             Component;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.BuffAttachmentItem.ParticleSystem
	struct FName                                       SocketName;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EBuffTargetType                                    TargetType;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	class USceneComponent*                             Instance;                                                 // 0x003C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                SoftPathIndex;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffDotBulletItem
// 0x0008
struct FBuffDotBulletItem
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Number;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PropSkillExplodeParam
// 0x0024
struct FPropSkillExplodeParam
{
	float                                              GenProbility;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillLevel;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerInnerDamageHealthRatio;                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerOuterDamageHealthRatio;                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZombieInnerDamageHealthRatio;                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZombieOuterDamageHealthRatio;                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallWeakenDamageRatio;                                    // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InnerDamageRadius;                                        // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OuterDamageRadius;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PropSkillPosionParam
// 0x0014
struct FPropSkillPosionParam
{
	float                                              GenProbility;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillLevel;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheckPeriod;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HumanBuffID;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZombieBuffID;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PropSkillCureRangeParam
// 0x0010
struct FPropSkillCureRangeParam
{
	float                                              RangeLifeSpan;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CheckPeriod;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RangeRadius;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CureBuffID;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BuffAttrModifierItem
// 0x0014
struct FBuffAttrModifierItem
{
	struct FString                                     AttrName;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              ModifyValue;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAttrModifyRefType                                 AttrRefValueType;                                         // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PostEventParams
// 0x0018
struct FPostEventParams
{
	struct FString                                     EventType;                                                // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     EventId;                                                  // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.PostEventWithCauserParams
// 0x0018
struct FPostEventWithCauserParams
{
	struct FString                                     EventType;                                                // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     EventId;                                                  // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BuffSpawnActorItem
// 0x0060
struct FBuffSpawnActorItem
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.BuffSpawnActorItem.ActorClass
	struct FName                                       SocketName;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EBuffTargetSocketType                              TargetType;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FVector                                     RelLocation;                                              // 0x0034(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    Rotator;                                                  // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	EBuffEnabledRole                                   EnableRole;                                               // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDestroyOnBuffEnd;                                       // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	float                                              NotEndDestroyLifeTime;                                    // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Instance;                                                 // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SoftPathIndex;                                            // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PoisonFogStageConfig
// 0x0008
struct FPoisonFogStageConfig
{
	float                                              InTime;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OutTime;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BuildingConsumeData
// 0x0010
struct FBuildingConsumeData
{
	int                                                BuildingID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ConsumeItemID;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ConsumeItemCount;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ReturnItemCount;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BonfireFanPickerData
// 0x0014
struct FBonfireFanPickerData
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HightDiff;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTrace;                                             // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	float                                              LowerTraceRatio;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkillReplaceCharAnimData
// 0x001C
struct FSkillReplaceCharAnimData
{
	TEnumAsByte<enum ECharacterAnimType>               CharacterAnimType;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData01[0xC];                                       // 0x0001(0x000C) UNKNOWN PROPERTY: ArrayProperty ShadowTrackerExtra.SkillReplaceCharAnimData.PoseAnimList
	unsigned char                                      UnknownData02[0xC];                                       // 0x0010(0x000C) UNKNOWN PROPERTY: ArrayProperty ShadowTrackerExtra.SkillReplaceCharAnimData.FPPPoseAnimList
};

// ScriptStruct ShadowTrackerExtra.CharacterDistanceSquareTickInternal
// 0x0008
struct FCharacterDistanceSquareTickInternal
{
	float                                              DistanceSquare;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TickInternal;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.anPickerData
// 0x0014
struct FanPickerData
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Offset;                                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTrace;                                             // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	float                                              LowerTraceRatio;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HitEffectItemDataList
// 0x003C
struct FHitEffectItemDataList
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) UNKNOWN PROPERTY: MapProperty ShadowTrackerExtra.HitEffectItemDataList.ItemDataListMap
};

// ScriptStruct ShadowTrackerExtra.DecalData
// 0x001C
struct FDecalData
{
	float                                              DecalSize;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LifeSpan;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   DecalMaterial;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactEffectStartScaleDistance;                           // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactEffectEndScaleDistance;                             // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactEffectStartScaleValue;                              // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactEffectEndScaleValue;                                // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParticleRuntimeData
// 0x0008
struct FParticleRuntimeData
{
	class UParticleSystemComponent*                    SpawnedComponent;                                         // 0x0000(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ParticleRuntimeDataArray
// 0x0010
struct FParticleRuntimeDataArray
{
	TArray<struct FParticleRuntimeData>                DataArray;                                                // 0x0000(0x000C) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehBackpackItem
// 0x0008
struct FVehBackpackItem
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleSfxLoopBase
// 0x0040
struct FSTExtraVehicleSfxLoopBase
{
	class UAkComponent*                                AkComp;                                                   // 0x0000(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<uint32_t, float>                              MapRTPC;                                                  // 0x0004(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleSfxLoop
// 0x001C (0x005C - 0x0040)
struct FSTExtraVehicleSfxLoop : public FSTExtraVehicleSfxLoopBase
{
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0044(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleSimViewData
// 0x0004
struct FVehicleSimViewData
{
	unsigned char                                      ViewPitch;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ViewYaw;                                                  // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ViewRoll;                                                 // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               FreeCamera;                                               // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirborneSpeed
// 0x0040
struct FAirborneSpeed
{
	struct FVector                                     minSpeed;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     MaxSpeed;                                                 // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     NormalSpeed;                                              // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     VerticalSpeed;                                            // 0x0024(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              TurnSpeed;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TurnSpeedV;                                               // 0x0034(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SceneCompUpdateOptimizationItem
// 0x0005
struct FSceneCompUpdateOptimizationItem
{
	unsigned char                                      UnknownData00[0x5];                                       // 0x0000(0x0005) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MeshSynData
// 0x0028
struct FMeshSynData
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018) (BlueprintVisible)
	int                                                gender;                                                   // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESyncOperation                                     OperationType;                                            // 0x001C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                AdditionalItemID;                                         // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DIYPlanID;                                                // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponVerifyConfig
// 0x003C
struct FWeaponVerifyConfig
{
	int                                                VerifyIgnoreType;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifySooterSkeleton;                                    // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              ShooterMuzzleOffsetAdditional;                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShooterMuzzleCircleAddit;                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCompressDataUpload;                                   // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifyAttachDistance;                                    // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForceAttach;                                             // 0x0012(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0013(0x0001) MISSED OFFSET
	float                                              MaxAttachDistanceHorizon;                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAttachDistanceZ;                                       // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinAttachDistanceZ;                                       // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxGunRoot;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxMuzzleGun;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistMuzzleGun;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MuzzleHighCD;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimFlyCD;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifyRpgController;                                     // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifyFakeTraceBock;                                     // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	float                                              MaxBackTraceSize;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponAttrModifyData
// 0x0014
struct FWeaponAttrModifyData
{
	struct FString                                     ModifyAttr;                                               // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	EAttrOperator                                      Op;                                                       // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              ModifyValue;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponAttrModifyConfig
// 0x0018
struct FWeaponAttrModifyConfig
{
	struct FString                                     ModifyConfigID;                                           // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FWeaponAttrModifyData>               WeaponAttrModifiers;                                      // 0x000C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SimulateBulletHitInfoData
// 0x0048
struct FSimulateBulletHitInfoData
{
	struct FVector                                     ImpactPoint;                                              // 0x0000(0x000C) (IsPlainOldData)
	struct FVector_NetQuantize                         RelativeImpactPoint;                                      // 0x000C(0x000C)
	struct FVector_NetQuantizeNormal                   ImpactNormal;                                             // 0x0018(0x000C)
	struct FVector                                     ShootMomentMuzzlePos;                                     // 0x0024(0x000C) (IsPlainOldData)
	unsigned char                                      SurfaceType;                                              // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0034(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          Component;                                                // 0x003C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      HitBodyType;                                              // 0x0044(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ImpactEffectMask;                                         // 0x0045(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WaypointNetworkConnection
// 0x000C
struct FWaypointNetworkConnection
{
	class ASTExtraAIWaypointSegment*                   ConnectedSegment;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                WaypointIndex;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPathSegmentInReverse;                                    // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WaypointNetworkConnectionList
// 0x000C
struct FWaypointNetworkConnectionList
{
	TArray<struct FWaypointNetworkConnection>          Connections;                                              // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.NodeTargetSpeedOverrides
// 0x0010
struct FNodeTargetSpeedOverrides
{
	float                                              ForwardTargetSpeedOverride;                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForwardMaxSpeedOverride;                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverseTargetSpeedOverride;                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverseMaxSpeedOverride;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleWheelSfxOnSurface
// 0x000C (0x004C - 0x0040)
struct FSTExtraVehicleWheelSfxOnSurface : public FSTExtraVehicleSfxLoopBase
{
	class UPhysicalMaterial*                           LastSurfaceMaterial;                                      // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	class UWheelSfxConfig*                             WheelSfxConfig;                                           // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0048(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STReplicatedVehicleState
// 0x000C
struct FSTReplicatedVehicleState
{
	int8_t                                             SteeringInput;                                            // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             ThrottleInput;                                            // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             BrakeInput;                                               // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             HandbrakeInput;                                           // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	int8_t                                             CurrentGear;                                              // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                Flag;                                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STExtraAnimInstanceProxy
// 0x0010 (0x03F0 - 0x03E0)
struct FSTExtraAnimInstanceProxy : public FAnimInstanceProxy
{
	class ASTExtraBaseCharacter*                       OwnerPawn;                                                // 0x03D8(0x0004) (ZeroConstructor, IsPlainOldData)
	class USTExtraAnimInstanceBase*                    ParentAnimInst;                                           // 0x03DC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03E0(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AnimParamList
// 0x0128
struct FAnimParamList
{
	int                                                FrameCounter;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     movedir;                                                  // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<enum EMovementMode>                    MovementMode;                                             // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECharacterPoseType>               PoseType;                                                 // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
	struct FRotator                                    ViewRotation;                                             // 0x0020(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    ControlRotation;                                          // 0x002C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<enum EWeaponType>                      WeaponType;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWeaponHoldType>                  WeaponHoldType;                                           // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EFreshWeaponStateType>            WeaponState;                                              // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWeaponReloadMethod>              WeaponReloadMethod;                                       // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bScopeInBoltActionEnable;                                 // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ESightType>                       SightType;                                                // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	float                                              RecoilKickADS;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForegripParam;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0048(0x0004) MISSED OFFSET
	struct FVector                                     OffsetFPPLocation;                                        // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetFPPRotation;                                        // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OffsetFPPCrouchLocation;                                  // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetFPPCrouchRotation;                                  // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OffsetFPPProneLocation;                                   // 0x007C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetFPPProneRotation;                                   // 0x0088(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OffsetAngledFPPLocation;                                  // 0x0094(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetAngledFPPRotation;                                  // 0x00A0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OffsetAngledFPPCrouchLocation;                            // 0x00AC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetAngledFPPCrouchRotation;                            // 0x00B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OffsetAngledFPPProneLocation;                             // 0x00C4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetAngledFPPProneRotation;                             // 0x00D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAngledOpticalSight;                                    // 0x00DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHurting;                                                // 0x00DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsNearDeathStatus;                                        // 0x00DE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsRescueing;                                              // 0x00DF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsSprinting;                                              // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastingGenerate;                                        // 0x00E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00E2(0x0002) MISSED OFFSET
	struct FVector                                     HurtDir;                                                  // 0x00E4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IsDying;                                                  // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsJumping;                                                // 0x00F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECharacterJumpType>               JumpType;                                                 // 0x00F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EParachuteState                                    ParachuteState;                                           // 0x00F3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsParachuteLanding;                                      // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFreeFallingShake;                                        // 0x00F5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsTurning;                                                // 0x00F6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsOnVehicle;                                              // 0x00F7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisableAim;                                             // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              HandleFolderFactor;                                       // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CharacterYawRotateRate;                                   // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldPauseAnim;                                          // 0x0104(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCarryBack;                                               // 0x0105(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0106(0x0002) MISSED OFFSET
	float                                              CarryBlendTimeAccumulator;                                // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNotReplaceTurnAnimWithReplaceMoveAnim;                   // 0x010C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1B];                                      // 0x010D(0x001B) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PlayerAnimList
// 0x00A4
struct FPlayerAnimList
{
	int                                                FrameCounter;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FPlayerAnimData                             MovementAnim;                                             // 0x0004(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             AimAnim;                                                  // 0x000C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             ReloadAnim;                                               // 0x0014(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             FillGasAnim;                                              // 0x001C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             EquipWeaponAnim;                                          // 0x0024(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             ChangePoseAnim;                                           // 0x002C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             PickUpAnim;                                               // 0x0034(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             FireAnim;                                                 // 0x003C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             HurtAnim;                                                 // 0x0044(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             TurnAnim;                                                 // 0x004C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             PullingPlugAnim;                                          // 0x0054(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             PutDownWeaponAnim;                                        // 0x005C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             WeaponIdle;                                               // 0x0064(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             ForegripAnim;                                             // 0x006C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             ShoudlerWeaponIdle;                                       // 0x0074(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             BeCarriedBackMoveAnim;                                    // 0x007C(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             BeCarriedBackPickUpAnim;                                  // 0x0084(0x0008) (Edit, BlueprintVisible)
	TArray<struct FPlayerAnimData>                     JumpAnimList;                                             // 0x008C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FPlayerAnimData>                     ExtraAnimList;                                            // 0x0098(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponSlotSwitchTimeData
// 0x000C
struct FWeaponSlotSwitchTimeData
{
	TEnumAsByte<enum ESurviveWeaponPropSlot>           EquipSlot;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              TotalTime;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttachWeaponTime;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpecialAmbientData
// 0x001C
struct FSpecialAmbientData
{
	class UAkAudioEvent*                               Sound;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     SwitchGroupName;                                          // 0x0004(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SwitchValue;                                              // 0x0010(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SyncAKEvent
// 0x0010
struct FSyncAKEvent
{
	int                                                AkEventID;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     AkLocation;                                               // 0x0004(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DamageCauserRecordData
// 0x0024
struct FDamageCauserRecordData
{
	class AController*                                 Causer;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Time;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Damage;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StatusChangeMargin;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageType;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AdditionalParam;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsHeadshot;                                              // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                WeaponId;                                                 // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FloorType;                                                // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimViewData
// 0x0006
struct FSimViewData
{
	uint16_t                                           ViewPitch;                                                // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           ViewYaw;                                                  // 0x0002(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ViewRoll;                                                 // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               FreeCamera;                                               // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PoseChangeTime
// 0x0010
struct FPoseChangeTime
{
	float                                              PoseChange_Prone_Stand;                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PoseChange_Prone_Move;                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PoseChange_UnProne_Stand;                                 // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PoseChange_UnProne_Move;                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimVehParamList
// 0x0030
struct FAnimVehParamList
{
	int                                                FrameCounter;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsLeanOut;                                                // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsDriver;                                                 // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsSwitchingSeat;                                          // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsIdleAnimReplaced;                                       // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VacateHight;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsVehicleMotorbike;                                       // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FRotator                                    VehViewRotation;                                          // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     VehMoveVelocity;                                          // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<enum EVHSeatWeaponHoldType>            SeatWeaponHoldType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EVHSeatSpecialType>               SeatSpecialType;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESTExtraVehicleType                                VehicleType;                                              // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	float                                              LeanOutPercentage;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimStatusKeyList
// 0x0020
struct FAnimStatusKeyList
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
	class ASTExtraWeapon*                              EquipWeapon;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BodyPartCfg
// 0x002C
struct FBodyPartCfg
{
	float                                              DamageScale;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Durability;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DamageReduceScale;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageReduceScaleIgnoreDurability;                        // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BrokenArmorDamageReduceScale;                             // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DurabilityReduceScale;                                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     BodyDurabilityIndexName;                                  // 0x0018(0x000C) (Edit, ZeroConstructor)
	float                                              MomentumResistance;                                       // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ImpactEffectOverride;                                     // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterEnergyPhase
// 0x0010
struct FCharacterEnergyPhase
{
	float                                              MakeEffectSection;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     BuffName;                                                 // 0x0004(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.CharacterEnergyData
// 0x0030
struct FCharacterEnergyData
{
	TArray<struct FCharacterEnergyPhase>               EnergyEffactPhase;                                        // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              EnergyMax;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EnergyCurrent;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EnergyPredict;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttenuationPeriod;                                        // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	float                                              AttenuationAmount;                                        // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0020(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HealthPredictShowData
// 0x0018
struct FHealthPredictShowData
{
	struct FString                                     ShowDataKey;                                              // 0x0000(0x000C) (Edit, ZeroConstructor)
	TEnumAsByte<enum EHealthPredictShowType>           ShowType;                                                 // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LimitValue;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HalloweenVampireCloth
// 0x0008
struct FHalloweenVampireCloth
{
	bool                                               bWearingHalloweenVampireCloth;                            // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                HalloweenVampireClothItemID;                              // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STParachuteState
// 0x0018
struct FSTParachuteState
{
	float                                              ThrottleInput;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SteerInput;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int8_t                                             State;                                                    // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FRotator                                    CameraRotation;                                           // 0x000C(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STReplicatedMoveState
// 0x0020
struct FSTReplicatedMoveState
{
	struct FVector_NetQuantize                         Location;                                                 // 0x0000(0x000C)
	unsigned char                                      Roll;                                                     // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	uint32_t                                           View;                                                     // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         Velocity;                                                 // 0x0014(0x000C)
};

// ScriptStruct ShadowTrackerExtra.ParachuteFollowState
// 0x0008
struct FParachuteFollowState
{
	EFollowState                                       FollowState;                                              // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                LeaderIdx;                                                // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LastEmoteInfo
// 0x000C
struct FLastEmoteInfo
{
	int                                                EmoteId;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                AreaID;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EmoteTime;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterCompOutOfVisionOptimizationItem
// 0x0006
struct FCharacterCompOutOfVisionOptimizationItem
{
	unsigned char                                      UnknownData00[0x6];                                       // 0x0000(0x0006) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponOverrideAttrs
// 0x0018
struct FWeaponOverrideAttrs
{
	float                                              GameModeOverride_DeviationMoveModifier;                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_DeviationStanceJumpModifier;             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_MeleeDamageAmountModifier;               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_GrenadeDamageRadiusModifier;             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_GrenadeDamageAmountModifier;             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_GunsDamageAmountModifier;                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharacterOverrideAttrs
// 0x0010
struct FCharacterOverrideAttrs
{
	float                                              GameModeOverride_SpeedScaleModifier;                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_SwimSpeedScaleModifier;                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_EnergySpeedScaleModifier;                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              GameModeOverride_LastBreathSpeedScaleModifier;            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InteractionEmoteConfig
// 0x0008
struct FInteractionEmoteConfig
{
	int                                                SelfEmoteId;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OtherEmoteId;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerRespawnData
// 0x001C
struct FPlayerRespawnData
{
	unsigned char                                      RespawnCount;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     Location;                                                 // 0x0004(0x000C) (IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InjuryParticleAttachOffset
// 0x0050
struct FInjuryParticleAttachOffset
{
	TEnumAsByte<enum EMovementMode>                    MovementMode;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0001(0x000F) MISSED OFFSET
	struct FTransform                                  AttachTransform;                                          // 0x0010(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum EAttachLocation>                  AttachLocationType;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0041(0x000F) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NetCarryBackState
// 0x000C
struct FNetCarryBackState
{
	ECarryBackState                                    State;                                                    // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EPutDownDetachMethod                               DetachMethod;                                             // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	class ASTExtraBaseCharacter*                       CarryBackCharacter;                                       // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ASTExtraBaseCharacter*                       BeCarriedBackCharacter;                                   // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerPosMarkerParam
// 0x000C
struct FPlayerPosMarkerParam
{
	class ACharacter*                                  Player;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MarkTimeLen;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MarkIcon;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STCustomRadialDamageEvent
// 0x0064 (0x0098 - 0x0034)
struct FSTCustomRadialDamageEvent : public FRadialDamageEvent
{
	unsigned char                                      UnknownData00[0x60];                                      // 0x0034(0x0060) MISSED OFFSET
	bool                                               bPlayHurtAnim;                                            // 0x0094(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STRadialDamageEvent
// 0x0000 (0x0098 - 0x0098)
struct FSTRadialDamageEvent : public FSTCustomRadialDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.DotDamageEvent
// 0x0008 (0x00B0 - 0x00A8)
struct FDotDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FanPickerConfigData
// 0x0048
struct FFanPickerConfigData
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleRadius;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               Random;                                                   // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckHeadshot;                                          // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadJudgeWithoutOwner;                                  // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPickUpMonsters;                                          // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreAimCheck;                                          // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
	TArray<class UClass*>                              IgnoredActors;                                            // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bForwardHitAim;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EUTSkillPickerType                                 PickerType;                                               // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EUTPickerTargetType                                PickerTargetType;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                PickerMaxCount;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeOwner;                                            // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyHero;                                                // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTrace;                                             // 0x0036(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsUsingViewRotation;                                     // 0x0037(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseNewOffset;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	TArray<TWeakObjectPtr<class AActor>>               IgnoreTargets;                                            // 0x003C(0x000C) (ZeroConstructor, Transient)
};

// ScriptStruct ShadowTrackerExtra.CustomTeamLogoAndColor
// 0x00B4
struct FCustomTeamLogoAndColor
{
	int                                                TeamNo;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TeamName;                                                 // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TeamLogoPath;                                             // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FColor                                      TeamColor;                                                // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      PlayerColor;                                              // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FString                                     CornerMarkPath;                                           // 0x0024(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0030(0x003C) UNKNOWN PROPERTY: MapProperty ShadowTrackerExtra.CustomTeamLogoAndColor.TeamLogoTexture
	struct FString                                     KillInfoPath;                                             // 0x006C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x0078(0x003C) UNKNOWN PROPERTY: MapProperty ShadowTrackerExtra.CustomTeamLogoAndColor.KillInfoTexture
};

// ScriptStruct ShadowTrackerExtra.UTBuffAttachment
// 0x0018
struct FUTBuffAttachment
{
	class USceneComponent*                             Component;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ComponentEnemy;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShowOnlyFirstPersonView;                                 // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffAnimationItem
// 0x00A8
struct FBuffAnimationItem
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.BuffAnimationItem.AnimationAssetToPlay
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.BuffAnimationItem.AnimationAssetToPlayFPP
	unsigned char                                      UnknownData02[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.BuffAnimationItem.AnimationMontageToPlay
	unsigned char                                      UnknownData03[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.BuffAnimationItem.AnimationMontageToPlayFPP
	bool                                               NeedReplayByChangFirstView;                               // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffAnimationTagItem
// 0x0028
struct FBuffAnimationTagItem
{
	struct FName                                       AnimationAssetTag;                                        // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationAssetTagFPP;                                     // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationMontageTag;                                      // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimationMontageTagFPP;                                   // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               NeedReplayByChangFirstView;                               // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BuffApplierConditionPair
// 0x0034
struct FBuffApplierConditionPair
{
	TEnumAsByte<enum EBuffApplierCondition>            ConditionVar;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsShowDebugLine;                                          // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              InSightCheckAngle;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InnerRangeDistance;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 CurveExpirePerDistance;                                   // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               BuffNameArray;                                            // 0x0010(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        BuffSkillIdArray;                                         // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        BuffSkillIdArrayForZombie;                                // 0x0028(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.PetVisibilityInfo
// 0x0008
struct FPetVisibilityInfo
{
	bool                                               Visible;                                                  // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Time;                                                     // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PetLevelInfo
// 0x0008
struct FPetLevelInfo
{
	int                                                PetId;                                                    // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PetLevel;                                                 // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PetMontageData
// 0x0008
struct FPetMontageData
{
	int                                                AnimationAssetId;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MontageStartTime;                                         // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RenderQualitySettings
// 0x0008
struct FRenderQualitySettings
{
	TEnumAsByte<enum ERenderQuality>                   RenderQualitySetting;                                     // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ERenderStyle>                     RenderStyleSetting;                                       // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               RenderMSAASetting;                                        // 0x0002(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	int                                                RenderMSAAValue;                                          // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SwitchesItem
// 0x0020
struct FSwitchesItem
{
	struct FString                                     Key;                                                      // 0x0000(0x000C) (ZeroConstructor)
	float                                              Value;                                                    // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     DependKey;                                                // 0x0010(0x000C) (ZeroConstructor)
	float                                              DependValue;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SwitchesInMaps
// 0x0018
struct FSwitchesInMaps
{
	struct FString                                     MapName;                                                  // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FSwitchesItem>                       Switches;                                                 // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RenderItem
// 0x0010
struct FRenderItem
{
	struct FString                                     RenderKey;                                                // 0x0000(0x000C) (ZeroConstructor)
	float                                              RenderValue;                                              // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RenderStyleParameterInMaps
// 0x0038
struct FRenderStyleParameterInMaps
{
	TEnumAsByte<enum ERenderDynamicStyle>              DynamicStyleName;                                         // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FString>                             PostProcessParams;                                        // 0x0004(0x000C) (ZeroConstructor)
	struct FACESParameter                              ACESParams;                                               // 0x0010(0x0028)
};

// ScriptStruct ShadowTrackerExtra.MaterialParameterFloat
// 0x0010
struct FMaterialParameterFloat
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialParameterVector
// 0x0018
struct FMaterialParameterVector
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Vector;                                                   // 0x0008(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialParametersStyle
// 0x0028
struct FMaterialParametersStyle
{
	struct FString                                     StyleName;                                                // 0x0000(0x000C) (ZeroConstructor)
	TArray<struct FMaterialParameterFloat>             Floats;                                                   // 0x000C(0x000C) (ZeroConstructor)
	TArray<struct FMaterialParameterVector>            Vectors;                                                  // 0x0018(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FadeDynamicStyleInfo
// 0x000C
struct FFadeDynamicStyleInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.GM
// 0x0004
struct FGM
{
	unsigned char                                      GrassEnable : 1;                                          // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HelicopterTorqueCurveFloat
// 0x0008
struct FHelicopterTorqueCurveFloat
{
	class UCurveFloat*                                 TorqueCurveFloat;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurveTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HoverSimulateData
// 0x003C
struct FHoverSimulateData
{
	float                                              TraceLenght;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverDistance;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverDelta;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HoverDelta_Old;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintCoefficent;                                         // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DampingCoefficent;                                        // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bInAir;                                                   // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              TickInterval;                                             // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceHitLocation;                                         // 0x0020(0x000C) (IsPlainOldData)
	struct FVector                                     SimulateLocation;                                         // 0x002C(0x000C) (IsPlainOldData)
	class UArrowComponent*                             ArrowComp;                                                // 0x0038(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CameraParams
// 0x0008
struct FCameraParams
{
	float                                              FieldOfView;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLocktoHmd;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SpringArmParams
// 0x0050
struct FSpringArmParams
{
	struct FCameraParams                               CameraParam;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class USceneComponent*                             ParentComp;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       ParentSocketName;                                         // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetArmALength;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SocketOffset;                                             // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TargetOffset;                                             // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbeSize;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum ECollisionChannel>                ProbeChannel;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDoCollisionTest;                                         // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsePawnControlRotation;                                  // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableCameraLag;                                         // 0x0047(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CameraLagSpeed;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableCustomSpringArm;                                   // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActivityAnimationRepData
// 0x0004
struct FActivityAnimationRepData
{
	class UAnimMontage*                                AnimMontage;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AngledSightRepData
// 0x0002
struct FAngledSightRepData
{
	TEnumAsByte<enum EAngledSightType>                 AngledSightType;                                          // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsOnlyTurn;                                               // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ActicityDisallowedData
// 0x0010
struct FActicityDisallowedData
{
	TArray<EPawnState>                                 DisallowedStates;                                         // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                ActivityID;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerRoleCacheFrameData
// 0x0010
struct FPlayerRoleCacheFrameData
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ChachePlayMontageData
// 0x0018
struct FChachePlayMontageData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InfectionMeshAsyncloadParams
// 0x0002
struct FInfectionMeshAsyncloadParams
{
	unsigned char                                      UnknownData00[0x2];                                       // 0x0000(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CharacterStatueInfo
// 0x0044
struct FCharacterStatueInfo
{
	int                                                AGender;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Head;                                                     // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Hair;                                                     // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                WeaponId;                                                 // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Nation;                                                   // 0x001C(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        AvatarList;                                               // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<struct FGameModePlayerItem>                 AvatarInfoList;                                           // 0x0034(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                Index;                                                    // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PathPoint
// 0x0008
struct FPathPoint
{
	class ASTExtraAIWaypointSegment*                   Path;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                InputKey;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponDurabilityConfig
// 0x0020
struct FWeaponDurabilityConfig
{
	float                                              LowDurabilityRate;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GameEndReduceRate;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     DurabilityLowAttrModifierID;                              // 0x0008(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     DurabilityLossAttrModifierID;                             // 0x0014(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.RotorDamageConfig
// 0x0040
struct FRotorDamageConfig
{
	float                                              DamageCheckInterval;                                      // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRPMForDamage;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedInKmForTrace;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Damage;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaunchSpeed;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LaunchUpScale;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RotorDamageBone;                                          // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ComponentTraceOffset;                                     // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // 0x002C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NewBuffApplierConditionPair
// 0x0024
struct FNewBuffApplierConditionPair
{
	TEnumAsByte<enum ENewBuffApplierCondition>         ConditionVar;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsShowDebugLine;                                          // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              InSightCheckAngle;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InnerRangeDistance;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<int>                                        BuffSkillIdArray;                                         // 0x000C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        BuffSkillIdArrayForZombie;                                // 0x0018(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SimpleCharAnimParamList
// 0x0058
struct FSimpleCharAnimParamList
{
	struct FVector                                     Velocity;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     movedir;                                                  // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TEnumAsByte<enum EMovementMode>                    MovementMode;                                             // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FRotator                                    ViewRotation;                                             // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IsHurting;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FVector                                     HurtDir;                                                  // 0x002C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IsDying;                                                  // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsJumping;                                                // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsTurning;                                                // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShouldPauseAnim;                                          // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsLeftRightMove;                                          // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                RandomAnimID;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IdleBlendSpaceValue;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AdditiveYaw;                                              // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x004C(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TankEngineData
// 0x006C
struct FTankEngineData
{
	struct FRuntimeFloatCurve                          TorqueCurve;                                              // 0x0000(0x0058) (Edit)
	float                                              MaxRPM;                                                   // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MOI;                                                      // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampingRateFullThrottle;                                  // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampingRateZeroThrottleClutchEngaged;                     // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampingRateZeroThrottleClutchDisengaged;                  // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TankGearData
// 0x000C
struct FTankGearData
{
	float                                              Ratio;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DownRatio;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpRatio;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TankTransmissionData
// 0x002C
struct FTankTransmissionData
{
	bool                                               bUseGearAutoBox;                                          // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              GearSwitchTime;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GearAutoBoxLatency;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EVehicleDriveTankControlModel                      ControlModel;                                             // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              FinalRatio;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTankGearData>                       ForwardGears;                                             // 0x0014(0x000C) (Edit, ZeroConstructor)
	float                                              ReverseGearRatio;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NeutralGearUpRatio;                                       // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ClutchStrength;                                           // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DriverAttachmentData
// 0x0078
struct FDriverAttachmentData
{
	struct FName                                       AttachmentDataName;                                       // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.DriverAttachmentData.AttachmentMesh
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.DriverAttachmentData.AttachmentMeshLod
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttachDelayTime;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DettachDelayTime;                                         // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        AttachmentComponentInstance;                              // 0x0070(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASTExtraPlayerCharacter*                     AttachDriverCache;                                        // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UAVTorqueCurveFloat
// 0x0008
struct FUAVTorqueCurveFloat
{
	class UCurveFloat*                                 TorqueCurveFloat;                                         // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurveTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TextrueAsyncRequest
// 0x0028
struct FTextrueAsyncRequest
{
	struct FString                                     Path;                                                     // 0x0000(0x000C) (ZeroConstructor)
	class UObject*                                     ImageOuter;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               KeepSize;                                                 // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FScriptDelegate                             Callback;                                                 // 0x0018(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.WidgetAsyncCreateData
// 0x0028
struct FWidgetAsyncCreateData
{
	struct FString                                     WidgetPath;                                               // 0x0000(0x000C) (ZeroConstructor)
	TWeakObjectPtr<class UObject>                      Outer;                                                    // 0x000C(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                InstID;                                                   // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             Callback;                                                 // 0x0018(0x0010) (ZeroConstructor, InstancedReference)
};

// ScriptStruct ShadowTrackerExtra.SpawnFilter
// 0x001C
struct FSpawnFilter
{
	bool                                               bLimitSpawnPoints;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FName>                               ValidSpawnPoints;                                         // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FName>                               InvalidSpawnPoints;                                       // 0x0010(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.QueuedVehicleSpawn
// 0x0044
struct FQueuedVehicleSpawn
{
	struct FGuid                                       ID;                                                       // 0x0000(0x0010) (IsPlainOldData)
	struct FString                                     SpawnId;                                                  // 0x0010(0x000C) (ZeroConstructor)
	class UClass*                                      VehicleClass;                                             // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               BehaviorTree;                                             // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBlackboardData*                             BlackboardData;                                           // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSpawnFilter                                SpawnSettings;                                            // 0x0028(0x001C) (BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.PathInputPlayZoneDistanceQuery
// 0x0010
struct FPathInputPlayZoneDistanceQuery
{
	int                                                ForwardDistance;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bForwardQueryMade;                                        // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                ReverseDistance;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bReverseQueryMade;                                        // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ActiveVehicleList
// 0x001C
struct FActiveVehicleList
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	TArray<class APawn*>                               Vehicles;                                                 // 0x0010(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AutoDriveAIDataRow
// 0x0078
struct FAutoDriveAIDataRow
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.AutoDriveAIDataRow.VehicleClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AutoDriveAIDataRow.BehaviorTreeAsset
	unsigned char                                      UnknownData02[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AutoDriveAIDataRow.BlackboardDataAsset
};

// ScriptStruct ShadowTrackerExtra.VehicleWarLockData
// 0x0008
struct FVehicleWarLockData
{
	TEnumAsByte<enum EAutoAimLockState>                LockState;                                                // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class AActor*                                      LockTarget;                                               // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarVehicleReceiveDamageRecord
// 0x0008
struct FVehicleWarVehicleReceiveDamageRecord
{
	int                                                DamageFromTeamID;                                         // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleWarKillInfoData
// 0x0060
struct FVehicleWarKillInfoData
{
	int                                                DamageType;                                               // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AdditionalParam;                                          // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     CauserName;                                               // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CauserNation;                                             // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimName;                                               // 0x0020(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VictimNation;                                             // 0x002C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     KillerIconURL;                                            // 0x0038(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                KillerPlayerLevel;                                        // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillerAvatarBoxId;                                        // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TotalDamage;                                              // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCooperationKill;                                        // 0x0050(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                KillerTeamId;                                             // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VictimTeamID;                                             // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThisDamage;                                               // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LootProjectileRepMovement
// 0x0054
struct FLootProjectileRepMovement
{
	struct FVector                                     LinearVelocity;                                           // 0x0000(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x000C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0018(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MeshLinearVelocity;                                       // 0x0024(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MeshAngularVelocity;                                      // 0x0030(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MeshLocation;                                             // 0x003C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    MeshRotation;                                             // 0x0048(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.StrongholdMiniMapData
// 0x006C
struct FStrongholdMiniMapData
{
	unsigned char                                      UnknownData00[0x58];                                      // 0x0000(0x0058) MISSED OFFSET
	int                                                MapIconID;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DelayShowCD;                                              // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                UnActivatedIndex;                                         // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ActivatedIndex;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GrayIndex;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.StrongholdWeaponBoxConfig
// 0x0028
struct FStrongholdWeaponBoxConfig
{
	struct FString                                     WeaponBoxType;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                     RelativeLocation;                                         // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bAttachToLifer;                                           // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AppearanceMatData
// 0x0090
struct FAppearanceMatData
{
	struct FString                                     AppearanceKey;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              LifeSpan;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IgnoreIndoor;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HideUI;                                                   // 0x0011(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0012(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AppearanceMatData.ParentMaterial
	class UMaterialInstanceDynamic*                    AppearanceMat;                                            // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        AppearanceMeshComp;                                       // 0x0044(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	struct FTransform                                  AppearanceMeshRelativeTransform;                          // 0x0050(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MatInstParamName;                                         // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ParamCurve;                                               // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AppearanceMeshData
// 0x0040
struct FAppearanceMeshData
{
	class UStaticMeshComponent*                        AppearanceMeshComp;                                       // 0x0000(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0004(0x003C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ScreenParticleEffectData
// 0x0068
struct FScreenParticleEffectData
{
	TEnumAsByte<enum EScreenParticleEffectType>        EffectType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     ScreenParticleEffectName;                                 // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.ScreenParticleEffectData.ParticleEffect
	struct FName                                       ParticleParamName;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FString>                             ExtraScreenAppearanceList;                                // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                     ScreenParticleEffectLoc;                                  // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    EffectComponent;                                          // 0x0058(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               KeepWorldRotation;                                        // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsShowing;                                                // 0x005D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	float                                              CurrentParamValue;                                        // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EPlatformDeviceLevel>             DisableDeviceLevel;                                       // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MltAppearanceMatData
// 0x0070
struct FMltAppearanceMatData
{
	struct FString                                     AppearanceKey;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       AppearanceTag;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FTransform                                  AppearanceMeshRelativeTransform;                          // 0x0020(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          ParentMaterial;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MatialAlpha;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    AppearanceMat;                                            // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        OwnerAppearanceMesh;                                      // 0x005C(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               IsLogicShow;                                              // 0x0060(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowOut;                                                // 0x0061(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowIn;                                                 // 0x0062(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0063(0x0001) MISSED OFFSET
	float                                              GradualFrag;                                              // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayTime;                                                // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MultiAppearanceMeshData
// 0x0010
struct FMultiAppearanceMeshData
{
	class UStaticMeshComponent*                        MultiAppearanceMesh;                                      // 0x0000(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SupplySpotConfig
// 0x0014
struct FSupplySpotConfig
{
	struct FVector                                     SSLocation;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                SSCount;                                                  // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SSBulletCount;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.HitPerformData
// 0x0074
struct FHitPerformData
{
	TArray<struct FWeaponCrossHairIconData>            IconList;                                                 // 0x0000(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              DefaultSpread;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpreadMax;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AddSpreadScale;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpreadDecreaseSpeed;                                      // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultOffset;                                            // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultAlpha;                                             // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AlphaDecreaseSpeed;                                       // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      IsHeadShot : 1;                                           // 0x0028(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FLinearColor                                HitBodyDrawColor;                                         // 0x002C(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                HitHeadDrawColor;                                         // 0x003C(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                HitToDeathDrawColor;                                      // 0x004C(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               HeadShotSound;                                            // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               BodyShotSound;                                            // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAkAudioEvent*                               DeadlyShotSound;                                          // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurCrosshairSpread;                                       // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x006C(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TaskAreaData
// 0x0010
struct FTaskAreaData
{
	int                                                TaskAreaType;                                             // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     TaskAreaAnchorsStr;                                       // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TeamMassPoint
// 0x000C
struct FTeamMassPoint
{
	TArray<class AActor*>                              ActorList;                                                // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.TickListItem
// 0x0008
struct FTickListItem
{
	class UActorComponent*                             Comp;                                                     // 0x0000(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	ECustomTickRoleType                                RoleType;                                                 // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TrailMarkInputData
// 0x0050
struct FTrailMarkInputData
{
	bool                                               bContainValidData;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0001(0x000F) MISSED OFFSET
	struct FTransform                                  Trans;                                                    // 0x0010(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	ETrailMarkType                                     Type;                                                     // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bBackWheel;                                               // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.Action_DestroyActorTag
// 0x0010
struct FAction_DestroyActorTag
{
	struct FString                                     Tag;                                                      // 0x0000(0x000C) (Edit, ZeroConstructor)
	EKilledReason                                      Reason;                                                   // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000C(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
};

// ScriptStruct ShadowTrackerExtra.ActorHealthSegment
// 0x0008
struct FActorHealthSegment
{
	float                                              MinRatio;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRatio;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.Action_PendDestroyActor
// 0x0008
struct FAction_PendDestroyActor
{
	class AActor*                                      DestroyActor;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AirplaneParam
// 0x0034
struct FAirplaneParam
{
	class UClass*                                      PlaneClass;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               PlaneBT;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius1;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius3;                                                  // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius2;                                                  // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MapCenter;                                                // 0x0014(0x000C) (Edit, IsPlainOldData)
	float                                              PlaneSpeed;                                               // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlaneHeight;                                              // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CanOpenParachuteHeight;                                   // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceOpenParachuteHeight;                                 // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CloseParachuteHeight;                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RevivalWithItemData
// 0x0014
struct FRevivalWithItemData
{
	int                                                ItemTypeID;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0008(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RevivalWithWeaponData
// 0x0010 (0x0024 - 0x0014)
struct FRevivalWithWeaponData : public FRevivalWithItemData
{
	TEnumAsByte<enum ESurviveWeaponPropSlot>           WeaponSlot;                                               // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	TArray<struct FRevivalWithItemData>                AttachmentDatas;                                          // 0x0018(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RevivalWithAllItemData
// 0x0018
struct FRevivalWithAllItemData
{
	TArray<struct FRevivalWithItemData>                ItemDatas;                                                // 0x0000(0x000C) (Edit, ZeroConstructor)
	TArray<struct FRevivalWithWeaponData>              WeaponDatas;                                              // 0x000C(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RevivalBackpackParam
// 0x001C
struct FRevivalBackpackParam
{
	struct FRevivalWithAllItemData                     ItemCfg;                                                  // 0x0000(0x0018) (Edit)
	int                                                Weight;                                                   // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RevivalBackpackTimelineParam
// 0x0010
struct FRevivalBackpackTimelineParam
{
	int                                                TimelineSeconds;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FRevivalBackpackParam>               RevivalBackbackCfgs;                                      // 0x0004(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AirplaneData
// 0x006C
struct FAirplaneData
{
	float                                              PlaneHeight;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CanOpenParachuteHeight;                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceOpenParachuteHeight;                                 // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CloseParachuteHeight;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DestinationCenter;                                        // 0x0010(0x000C) (IsPlainOldData)
	struct FVector                                     PlaneVelocity;                                            // 0x001C(0x000C) (IsPlainOldData)
	struct FVector                                     PlaneStartLoc;                                            // 0x0028(0x000C) (IsPlainOldData)
	struct FVector                                     PlaneEndLoc;                                              // 0x0034(0x000C) (IsPlainOldData)
	struct FVector2D                                   CanJumpLoc;                                               // 0x0040(0x0008) (IsPlainOldData)
	struct FVector2D                                   ForceJumpLoc;                                             // 0x0048(0x0008) (IsPlainOldData)
	int                                                TotalPlayerNum;                                           // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class APlayerController*>                   TotalPlayers;                                             // 0x0054(0x000C) (ZeroConstructor)
	TArray<class APlayerController*>                   CurPlayers;                                               // 0x0060(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SecondsSegment
// 0x0008
struct FSecondsSegment
{
	float                                              BeginSeconds;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EndSeconds;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpotTriggerOtherSpot
// 0x0018
struct FSpotTriggerOtherSpot
{
	struct FString                                     SrcSpotTag;                                               // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     DstSpotTag;                                               // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DropItemCfg
// 0x0028
struct FDropItemCfg
{
	struct FString                                     DropConfigTablePath;                                      // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     DropRuleConfigTablePath;                                  // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               UseDropID;                                                // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                DropID;                                                   // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseActorLocation;                                         // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	int                                                MaxRandomWeight;                                          // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RepeatItemCfg
// 0x0004
struct FRepeatItemCfg
{
	float                                              RepeatSpawnItemCD;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpawnItemCfg
// 0x0170
struct FSpawnItemCfg
{
	ESpawnActorCollisionHandlingMethod                 SpawnActorCollisionHandlingMethod;                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum ESpawnItemFunction>               SpawnItemFunction;                                        // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	TArray<struct FSecondsSegment>                     SecondsSegmentCondition;                                  // 0x0004(0x000C) (Edit, ZeroConstructor)
	TArray<struct FString>                             LineTracePlaceInclude;                                    // 0x0010(0x000C) (Edit, ZeroConstructor)
	TArray<struct FString>                             LineTracePlaceExclude;                                    // 0x001C(0x000C) (Edit, ZeroConstructor)
	int                                                GenerateSpotCountPerTick;                                 // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bItemGenerateOffset;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     ItemGenerateOffset;                                       // 0x0030(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnLocationZOffset;                                    // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	float                                              SpawnLocationZOffset;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRandomSpawnRotatorYaw;                                   // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnRotatorYaw;                                         // 0x0045(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	float                                              ItemSpawnRotatorYaw;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCookedRotator;                                        // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseSpotPercent;                                          // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNetCullDistance;                                         // 0x004E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x004F(0x0001) MISSED OFFSET
	float                                              NetCullDistance;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CookedFilePath;                                           // 0x0054(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             DeleteCategoryList;                                       // 0x0060(0x000C) (Edit, ZeroConstructor)
	int                                                DropHeight;                                               // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AppearRadiusStart;                                        // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AppearRadius;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AppearRadiusSecondLevel;                                  // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExpressUseSpotLocation;                                  // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	float                                              ExpressUseSpotLocationMinDistance;                        // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExpressUseSpotLocationMaxDistance;                        // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     MonsterSpawnDataTablePath;                                // 0x0088(0x000C) (Edit, ZeroConstructor)
	struct FString                                     TreasureBoxTablePath;                                     // 0x0094(0x000C) (Edit, ZeroConstructor)
	struct FString                                     ItemSpawnDataTablePath;                                   // 0x00A0(0x000C) (Edit, ZeroConstructor)
	bool                                               bCombinationCategoryAndValue;                             // 0x00AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpotPerGroupNumCtrl;                                     // 0x00AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x00AE(0x0002) MISSED OFFSET
	int                                                NeedSpotPerGroupMin;                                      // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedSpotPerGroupMax;                                      // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGroupNumCtrl;                                            // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	int                                                NeedGroupMin;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedGroupMax;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGeneratedBySpotFileDirect;                               // 0x00C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAirDropType                                       AirDropType;                                              // 0x00C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RandomItemAtItemSpotUseSpotPercent;                       // 0x00C6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExcludeUsedGroup;                                        // 0x00C7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExcludeUsedSpot;                                         // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedInBlueCircle;                                        // 0x00C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseGroupInBlueCircle;                                     // 0x00CA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedInWhiteCircle;                                       // 0x00CB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseGroupInWhiteCircle;                                    // 0x00CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseExcludeAirLine;                                        // 0x00CD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET
	float                                              ExcludeAirLineDistance;                                   // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseIncludeAirLine;                                        // 0x00D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
	float                                              IncludeAirLineDistance;                                   // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseItemGeneratorAreaItem;                                 // 0x00DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseItemGeneratorAreaIIDItem;                              // 0x00DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseSpotTriggerOtherSpot;                                  // 0x00DE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1];                                       // 0x00DF(0x0001) MISSED OFFSET
	TArray<struct FSpotTriggerOtherSpot>               SpotTriggerOtherSpotList;                                 // 0x00E0(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               UseCleanUpSpot;                                           // 0x00EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedAircraft;                                            // 0x00ED(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExpressItemNumCtrl;                                      // 0x00EE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x1];                                       // 0x00EF(0x0001) MISSED OFFSET
	int                                                ExpressItemNumMin;                                        // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExpressItemNumMax;                                        // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExpressItemNumPerPlayerCtrl;                             // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	int                                                ExpressItemNumPerPlayer;                                  // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExpressItemNumPerPlayerTotal;                             // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnExpressItemPerPlayerCD;                             // 0x0104(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	float                                              SpawnExpressItemPerPlayerCD;                              // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSupplementExpressItemCD;                                 // 0x010C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	float                                              SupplementExpressItemCD;                                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExpressReplaceZombie;                                    // 0x0114(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDestroySpots;                                            // 0x0115(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAISpawnExpressItem;                                      // 0x0116(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToHostActor;                                       // 0x0117(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCaculateRelativeTransform;                               // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToHostActorIsStatic;                               // 0x0119(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseSpawnTogetherClass;                                    // 0x011A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsTogetherItemSameAsMainItem;                             // 0x011B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseDropLifeTime;                                          // 0x011C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	float                                              DropLifeTime;                                             // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseDropItem;                                              // 0x0124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	struct FDropItemCfg                                DropItemCfg;                                              // 0x0128(0x0028) (Edit, BlueprintVisible)
	bool                                               UseRepeatItem;                                            // 0x0150(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	struct FRepeatItemCfg                              RepeatItemCfg;                                            // 0x0154(0x0004) (Edit, BlueprintVisible)
	int                                                FuelPercentMax;                                           // 0x0158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ActiveByStartVolume;                                      // 0x015C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseLocationID;                                            // 0x015D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRegistHostActor;                                         // 0x015E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseItemIndex;                                            // 0x015F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnPedestal;                                           // 0x0160(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	TArray<struct FSpotGroupProperty>                  SpotGroupProperties;                                      // 0x0164(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RepeatSpawnItemCD
// 0x0008
struct FRepeatSpawnItemCD
{
	int                                                idx;                                                      // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentSpawnItemCD;                                       // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.Location2HostActor
// 0x0010
struct FLocation2HostActor
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	class AActor*                                      Host;                                                     // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleCollisionSphere
// 0x0010
struct FSimpleCollisionSphere
{
	struct FVector                                     Origin;                                                   // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleSpherePersistentChecker
// 0x0018
struct FSimpleSpherePersistentChecker
{
	class UPrimitiveComponent*                         TargetComponent;                                          // 0x0000(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FSimpleCollisionSphere                      Sphere;                                                   // 0x0004(0x0010) (Transient)
	float                                              PassedTime;                                               // 0x0014(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleCollisionCapsule
// 0x001C
struct FSimpleCollisionCapsule
{
	struct FVector                                     Start;                                                    // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Radius;                                                   // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FocusTargetItem
// 0x0034
struct FFocusTargetItem
{
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0000(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0008(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               IsStartTurnTarget;                                        // 0x0014(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              TurnTargetVelocity;                                       // 0x0018(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LastActorRotation;                                        // 0x001C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FString                                     CurveName;                                                // 0x0028(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.UTSkillEntryConfig
// 0x0018
struct FUTSkillEntryConfig
{
	EUTSkillEntry                                      Entry;                                                    // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                SkillIndex;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SkillID;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Interrupts;                                               // 0x000C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.PropSkillMapTableRow
// 0x0044
struct FPropSkillMapTableRow
{
	int                                                SkillMapID;                                               // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropID;                                                   // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillLevel;                                           // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PropSkillID;                                              // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AuxPropSkillID;                                           // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        FilterGunIDs;                                             // 0x0014(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     PropSkillIconPath;                                        // 0x0020(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     PropSkillUseIconPath;                                     // 0x002C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     PropSkillDesc;                                            // 0x0038(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.UIElemLayoutDetail
// 0x0030
struct FUIElemLayoutDetail
{
	int                                                Type;                                                     // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Opacity;                                                  // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Scale;                                                    // 0x0008(0x0008) (BlueprintVisible, IsPlainOldData)
	struct FAnchors                                    AnchorType;                                               // 0x0010(0x0010) (BlueprintVisible)
	struct FVector2D                                   RelativePos;                                              // 0x0020(0x0008) (BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   OriginSize;                                               // 0x0028(0x0008) (BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DynamicMatImageInfo
// 0x0010
struct FDynamicMatImageInfo
{
	struct FName                                       MatParmName;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UImage*                                      DynamicMatImage;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillGSLisenterWarpper
// 0x0004
struct FSkillGSLisenterWarpper
{
	class UGSListenerBase*                             ListenerBase;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionPoseAnimData
// 0x0030
struct FInfectionPoseAnimData
{
	TEnumAsByte<enum EInfectionPoseType>               PoseType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.InfectionPoseAnimData.PoseAnimSoftPtr
};

// ScriptStruct ShadowTrackerExtra.InfectionMovementAnimData
// 0x0068
struct FInfectionMovementAnimData
{
	TEnumAsByte<enum EInfectionAnimType>               AnimType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FInfectionPoseAnimData                      PoseAnim_Stand;                                           // 0x0008(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInfectionPoseAnimData                      PoseAnim_Crouch;                                          // 0x0038(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.InfectionJumpTypeAnimData
// 0x0030
struct FInfectionJumpTypeAnimData
{
	TEnumAsByte<enum EInfectionJumpPhase>              PhaseType;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.InfectionJumpTypeAnimData.JumpAnimSoftPtr
};

// ScriptStruct ShadowTrackerExtra.InfectionJumpPhaseAnimData
// 0x00C8
struct FInfectionJumpPhaseAnimData
{
	TEnumAsByte<enum EInfectionJumpType>               JumpType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FInfectionJumpTypeAnimData                  JumpPhase_PreJump;                                        // 0x0008(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInfectionJumpTypeAnimData                  JumpPhase_FallLoop;                                       // 0x0038(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInfectionJumpTypeAnimData                  JumpPhase_Land;                                           // 0x0068(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInfectionJumpTypeAnimData                  JumpPhase_LandHard;                                       // 0x0098(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.InfectionAsyncloadAnimParams
// 0x0008
struct FInfectionAsyncloadAnimParams
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterAnimPhaseData
// 0x0030
struct FMonsterAnimPhaseData
{
	TEnumAsByte<enum EMonsterPoseType>                 PosType;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0001(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MonsterAnimPhaseData.PhaseAnimSoftPtr
};

// ScriptStruct ShadowTrackerExtra.MonsterAsyncloadAnimParams
// 0x0001
struct FMonsterAsyncloadAnimParams
{
	TEnumAsByte<enum EMonsterPoseType>                 PosType;                                                  // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PVELinkLevelData
// 0x000C
struct FPVELinkLevelData
{
	TArray<struct FString>                             levelList;                                                // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BunchAction
// 0x0008
struct FBunchAction
{
	class UUTSkillEffect*                              Effect;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bExeReset;                                                // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExeUndo;                                                 // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RandomBuffItem
// 0x0020
struct FRandomBuffItem
{
	int                                                Probability;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       BuffName;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BuffID;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SkillID;                                                  // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AddLayerCount;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleWeaponBoardDataConfigItem
// 0x0018
struct FVehicleWeaponBoardDataConfigItem
{
	int                                                SeatId;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                WeaponListID;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EVehicleWeaponBoardDataType                        DataType;                                                 // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FUAEBlackboardKeySelector                   BlackboardKey;                                            // 0x0010(0x0008) (Edit)
};

// ScriptStruct ShadowTrackerExtra.SkillAction_AttachActorCreateData
// 0x0030
struct FSkillAction_AttachActorCreateData
{
	class UClass*                                      ActorTemplate;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       AttachSocketName;                                         // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               DestroyAfterSkill;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DestroyAfterPhase;                                        // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               SnapToTargetIncludingScale;                               // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	float                                              DestroyAfterTime;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirAttackConfig
// 0x0014
struct FAirAttackConfig
{
	float                                              AttackLastingTime;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackAreaRadius;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TotalBombs;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BombsRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BombActorTemplate;                                        // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpawnVehicleConfig
// 0x0014
struct FSpawnVehicleConfig
{
	int                                                VehicleSpawnID;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OffsetLocation;                                           // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               AutoEnterVehicle;                                         // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AKSwitchParam
// 0x0018
struct FAKSwitchParam
{
	struct FString                                     SwitchGroup;                                              // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     SwitchState;                                              // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AKRTPCParam
// 0x001C
struct FAKRTPCParam
{
	struct FString                                     RTPC;                                                     // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Value;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ValueCurve;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                InterpolationTimeMs;                                      // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               NeedTick;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DisablePawnStateInfo
// 0x0003
struct FDisablePawnStateInfo
{
	EPawnState                                         State;                                                    // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNewDisable;                                              // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bResetOnEnable;                                           // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkillAction_HideMainUIData
// 0x000C
struct FSkillAction_HideMainUIData
{
	struct FString                                     RegistUIName;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SkillAction_HideUIData
// 0x0030
struct FSkillAction_HideUIData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.SkillAction_HideUIData.OperaterUI
	bool                                               bBroadToOtherPlayer;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MoveSpeedCurve
// 0x0008
struct FMoveSpeedCurve
{
	float                                              DistanceThreshold;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LaunchSpeedCurve;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayMontageAsyncloadParams
// 0x0038
struct FPlayMontageAsyncloadParams
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0000(0x0038) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillPoseMontageData
// 0x00A8
struct FSkillPoseMontageData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SkillPoseMontageData.AnimMontage_Stand
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SkillPoseMontageData.AnimMontage_Crouch
	unsigned char                                      UnknownData02[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SkillPoseMontageData.AnimMontage_Prone
	unsigned char                                      UnknownData03[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.SkillPoseMontageData.AnimMontage_Vehicle
	EAnimPlayFlag                                      AnimPlayFlag;                                             // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponStateToAnimPair
// 0x0158
struct FWeaponStateToAnimPair
{
	TEnumAsByte<enum EWeaponTypeNew>                   weaponTypeNew;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FSkillPoseMontageData                       PoseMontageData;                                          // 0x0008(0x00A8) (Edit)
	struct FSkillPoseMontageData                       FPPPoseMontageData;                                       // 0x00B0(0x00A8) (Edit)
};

// ScriptStruct ShadowTrackerExtra.RandomActionGroup
// 0x000C
struct FRandomActionGroup
{
	TArray<class UUTSkillAction*>                      Actions;                                                  // 0x0000(0x000C) (Edit, ExportObject, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SkillAction_ShowMainUIData
// 0x0010
struct FSkillAction_ShowMainUIData
{
	struct FString                                     RegistUIName;                                             // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               AutoHideOnPhaseEnd;                                       // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillAction_ShowUIData
// 0x0030
struct FSkillAction_ShowUIData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.SkillAction_ShowUIData.OperaterUI
	bool                                               bBroadToOtherPlayer;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillAction_SpawnActorCreateData
// 0x0078
struct FSkillAction_SpawnActorCreateData
{
	class UClass*                                      ActorTemplate;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPickFromTarget;                                          // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	class UUAESkillPicker*                             DamagePicker;                                             // 0x0008(0x0004) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bSetLocationToBB;                                         // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FName                                       BBName;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceGround;                                             // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FVector                                     TraceGroundOffset;                                        // 0x001C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class UUTSkillLocationPicker*                      LocationPicker;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bLocalSpawn;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bClientSpawn;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyedAtSkillEnd;                                     // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseOffsetWithOutLocationPicker;                          // 0x002F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAttach;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FName                                       AttachSocket;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OffsetLocationStand;                                      // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     OffsetLocationCrouch;                                     // 0x004C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     OffsetLocationProne;                                      // 0x0058(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    OffsetRotation;                                           // 0x0064(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bAllowChangePoseWillUpdating;                             // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BeamEffectData
// 0x0030
struct FBeamEffectData
{
	EBeamEffectDataFromType                            DataFromType;                                             // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     Location;                                                 // 0x0004(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0010(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       BlackBoardParam;                                          // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpawnMonsterConfig
// 0x0014
struct FSpawnMonsterConfig
{
	int                                                MonsterID;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     pos;                                                      // 0x0004(0x000C) (Edit, IsPlainOldData)
	bool                                               bIsRelativePos;                                           // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillAction_SpawnProjectileCreateData
// 0x001C
struct FSkillAction_SpawnProjectileCreateData
{
	class UClass*                                      ProjectileTemplate;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OffsetLocation;                                           // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    OffsetRotation;                                           // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CharPoseSwitch
// 0x0002
struct FCharPoseSwitch
{
	TEnumAsByte<enum ECharacterPoseType>               from;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECharacterPoseType>               to;                                                       // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UTSkillPicker_CapsuleCreateData
// 0x003C
struct FUTSkillPicker_CapsuleCreateData
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinCosValue;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ActionRotationOffset;                                     // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              HorizonOffset;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VerticalOffset;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBoneCheck;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPickUpMonsters;                                          // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanApplyTrainModel;                                      // 0x002F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0030(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.UTSkillPicker_FanCreateData
// 0x003C
struct FUTSkillPicker_FanCreateData
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleRadius;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               Random;                                                   // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckHeadshot;                                          // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowDebugFan;                                           // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeadJudgeWithoutOwner;                                  // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPickUpMonsters;                                          // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreAimCheck;                                          // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreInSmoke;                                           // 0x001E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSortByAngle;                                             // 0x001F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     AttrName;                                                 // 0x0020(0x000C) (Edit, ZeroConstructor)
	TArray<class UClass*>                              IgnoredActors;                                            // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bForwardHitAim;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.InRangeWithCircleState
// 0x0008
struct FInRangeWithCircleState
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Range;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkillInstArrayTemplate
// 0x003C
struct FSkillInstArrayTemplate
{
	TMap<struct FString, TWeakObjectPtr<class AUTSkill>> SkillInstMap;                                             // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SkillPoolAysncLoadParams
// 0x0004
struct FSkillPoolAysncLoadParams
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillIconConfig
// 0x0014
struct FSkillIconConfig
{
	struct FString                                     IconPath;                                                 // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                IconWidth;                                                // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                IconHeight;                                               // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UAVSyncRouteInfo
// 0x0030
struct FUAVSyncRouteInfo
{
	uint32_t                                           UAVPawnID;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	uint64_t                                           OwnerPlayerStateUID;                                      // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         AirDropLoc;                                               // 0x0010(0x000C)
	class AActor*                                      UAVPawn;                                                  // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FVector                                     UAVPawnLoc;                                               // 0x0020(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.UAVBehaviorConfig
// 0x0034
struct FUAVBehaviorConfig
{
	struct FRotator                                    RotationOffset;                                           // 0x0000(0x000C) (Edit, IsPlainOldData)
	float                                              BornFlyTime;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveInTime;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveInScaleTime;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveInStartScale;                                         // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StayTime;                                                 // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayAttackTime;                                          // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AttackInterval;                                           // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveAwayTime;                                             // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EUAVFlyType                                        FlyType;                                                  // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bStayMoveAround;                                          // 0x002D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SameTimeFireMax;                                          // 0x002E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	float                                              SameTimeFireDuration;                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UAVMoveAroundConfig
// 0x0020
struct FUAVMoveAroundConfig
{
	float                                              RelativeCharacterXMin;                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelativeCharacterXMax;                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelativeCharacterYMin;                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelativeCharacterYMax;                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelativeCharacterZMin;                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RelativeCharacterZMax;                                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveAroundStaySeconds;                                    // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveAroundSpeed;                                          // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CompatableComsumableItemType
// 0x00A0
struct FCompatableComsumableItemType
{
	struct FBattleItemData                             BattleItemData;                                           // 0x0000(0x0098) (Edit, BlueprintVisible)
	TEnumAsByte<enum EConsumeItemType>                 ConsumableItemType;                                       // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	int                                                ItemPriority;                                             // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ComparableGrenadeItemType
// 0x00A0
struct FComparableGrenadeItemType
{
	struct FBattleItemData                             BattleItemData;                                           // 0x0000(0x0098) (Edit, BlueprintVisible)
	int                                                ItemPriority;                                             // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GrenadeItemID;                                            // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RevivalPointIconChangeFactor
// 0x0018
struct FRevivalPointIconChangeFactor
{
	int                                                MinDis;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxDis;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinScaleFactorFactor;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScaleFactorFactor;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTransparencyFactor;                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTransparencyFactor;                                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UTSkillAppearance_ParticleSystem_Item
// 0x0068
struct FUTSkillAppearance_ParticleSystem_Item
{
	class UUTSkillPicker*                              TargetPicker;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             TemplateSelfTeam_Effect;                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TemplateEnermyTeam_Effect;                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             TemplateSelfTeamFPP_Effect;                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              Scale;                                                    // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0020(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x002C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     LocationOffsetTPP;                                        // 0x0038(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RotationOffsetTPP;                                        // 0x0044(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              ScaleTPP;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FName                                       HurtRotationSocketName;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoDispearTime;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAttachToPawn;                                            // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.UTSkillAppearance_SoundCue_Item
// 0x000C
struct FUTSkillAppearance_SoundCue_Item
{
	EUTSkill_SoundCue_ListenType                       ListenType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RefreshCDStateParam
// 0x0028
struct FRefreshCDStateParam
{
	TWeakObjectPtr<class UTextBlock>                   Text;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UImage>                       progressImage;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       progressMatParam;                                         // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPanelWidget>                 pointImages;                                              // 0x0018(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       pointMatParam;                                            // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleStyle
// 0x0008
struct FVehicleStyle
{
	EVehicleStyleType                                  StyleType;                                                // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                StyleValue;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleStyleData
// 0x0014
struct FVehicleStyleData
{
	int                                                StyleID;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EVehicleSlotType                                   SlotType;                                                 // 0x0004(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FVehicleStyle>                       MutilStyles;                                              // 0x0008(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AINavStateData
// 0x002C
struct FAINavStateData
{
	int                                                CurrentTargetWaypointIdx;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetPosition;                                           // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     StartPosition;                                            // 0x0010(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<int>                                        PathWayPoints;                                            // 0x001C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                PathWayPointNum;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleMeshPackage
// 0x0114 (0x0118 - 0x0004)
struct FVehicleMeshPackage : public FAssetPackage
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleMeshPackage.stMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleMeshPackage.skMesh
	unsigned char                                      UnknownData03[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleMeshPackage.Mat
	unsigned char                                      UnknownData04[0x28];                                      // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleMeshPackage.BrokenMat
	unsigned char                                      UnknownData05[0x28];                                      // 0x00A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleMeshPackage.MatBase
	TArray<struct FMaterialAsset>                      additionalMats;                                           // 0x00D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData07[0x28];                                      // 0x00DC(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.VehicleMeshPackage.animBP
	TArray<struct FParticleAsset>                      ParticleData;                                             // 0x0108(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialDamage
// 0x0008
struct FMaterialDamage
{
	class UPhysicalMaterial*                           PhysicalMaterial;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageScale;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleDamageRecord
// 0x0014
struct FVehicleDamageRecord
{
	class AController*                                 Instigator;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Time;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Damage;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageType;                                               // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AdditionalParam;                                          // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomDamageEventRow
// 0x00E4 (0x00E8 - 0x0004)
struct FCustomDamageEventRow : public FTableRowBase
{
	bool                                               bProcessedLocally;                                        // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FGuid                                       EventId;                                                  // 0x0008(0x0010) (Edit, EditConst, IsPlainOldData)
	bool                                               bEnabled;                                                 // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bClientOnly;                                              // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bReplicate;                                               // 0x001A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyReplicateWhenRelevant;                               // 0x001B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomDamageEventTriggerType                      EventTriggerType;                                         // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              TriggerCooldown;                                          // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPercentageThreshold;                                // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggerWhenDead;                                         // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ECustomDamageEventReactionType                     EventReactionType;                                        // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x002A(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.CustomDamageEventRow.ActorClassToSpawn
	bool                                               bTriggersGlobalCooldown;                                  // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLockedByGlobalCooldown;                                  // 0x0059(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x005A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData05[0x28];                                      // 0x005A(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.CustomDamageEventRow.OnCooldownActorClassToSpawn
	bool                                               bDestroySpawnedParticlesWithOwner;                        // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FName                                       AttachComponentTag;                                       // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpawnSocketName;                                          // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CustomSpawnTransformTag;                                  // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAtRandomPointInBoundingBox;                         // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomSpawnRotation;                                  // 0x00A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinToSpawn;                                               // 0x00AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxToSpawn;                                               // 0x00AB(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	struct FName                                       ActorSpawnTag;                                            // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MeshComponentTag;                                         // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MeshInstanceIndex;                                        // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	struct FName                                       BoneName;                                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhysicsAssetProfileName;                                  // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CollisionPrimitiveTag;                                    // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ECollisionEnabled>                CollisionEnabledType;                                     // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TriggeredCustomDamageEvent
// 0x00F0
struct FTriggeredCustomDamageEvent
{
	struct FCustomDamageEventRow                       Event;                                                    // 0x0000(0x00E8)
	float                                              TimeTriggered;                                            // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleCustomImpulseFilter
// 0x0020
struct FVehicleCustomImpulseFilter
{
	class UClass*                                      ImpulseAbsorberType;                                      // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyRadialImpulse;                                      // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseAsVelocityChange;                            // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              MaxDamagingImpulseMagnituge;                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxImpulseDamage;                                         // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseStrength;                                          // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadialImpulseStrength;                                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseRadius;                                            // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ERadialImpulseFalloff>            ImpulseFalloffType;                                       // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleCustomImpulse
// 0x0020
struct FVehicleCustomImpulse
{
	TArray<class UClass*>                              IgnoreClasses;                                            // 0x0000(0x000C) (Edit, ZeroConstructor)
	TArray<struct FVehicleCustomImpulseFilter>         ImpulseFilters;                                           // 0x000C(0x000C) (Edit, ZeroConstructor)
	class UClass*                                      DamageType;                                               // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseWhileDestroyed;                              // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyImpulseWhileStopped;                                // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseHitActorAsDamageInstigator;                           // 0x001E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001F(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STVehicleWheelDust
// 0x0014
struct FSTVehicleWheelDust
{
	TEnumAsByte<enum EPhysicalSurface>                 ContactSurface;                                           // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UParticleSystem*                             MoveFx;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             SlipFx;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             HubFx;                                                    // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              minSpeed;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SongInfo
// 0x0038
struct FSongInfo
{
	int                                                SongID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     SongName;                                                 // 0x0004(0x000C) (ZeroConstructor)
	float                                              SongDuration;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FSoftObjectPath                             SongEvent;                                                // 0x0018(0x0018)
	class UAkAudioEvent*                               SongEventPtr;                                             // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LuaSongInfo
// 0x0020
struct FLuaSongInfo
{
	int                                                SongID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     SongName;                                                 // 0x0004(0x000C) (ZeroConstructor)
	float                                              SongDuration;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     SongEvent;                                                // 0x0014(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehilcePropsInfo
// 0x000C
struct FVehilcePropsInfo
{
	TArray<int>                                        SkillIDList;                                              // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleWeaponConfig
// 0x0050
struct FSTExtraVehicleWeaponConfig
{
	struct FName                                       VehicleWeaponSocket;                                      // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleWeaponClass;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ViewYawLimit;                                             // 0x000C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   ViewPitchLimit;                                           // 0x0014(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bVerifyMuzzleDirection;                                   // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              MuzzleDirTor;                                             // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifyMuzzleLimit;                                       // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              MuzzleVehicleTore;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bVerifyMuzzleBoxRanges;                                   // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FBox                                        MuzzleRangeBox;                                           // 0x0030(0x001C) (Edit, IsPlainOldData)
	float                                              DistTorSquared;                                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleSeat
// 0x00B0
struct FSTExtraVehicleSeat
{
	ESTExtraVehicleSeatType                            SeatType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       AnimCompTagName;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EnterVehicleSocket;                                       // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeaveVehicleSocket;                                       // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EMovementMode>                    OccupyMovementMode;                                       // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EVHSeatWeaponHoldType>            HoldWeaponType;                                           // 0x0021(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EVHSeatSpecialType>               SeatSpecialType;                                          // 0x0022(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsCanLeanOut;                                             // 0x0023(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               NarrowSeatNeedUseCommomAimAnim;                           // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                GUIDisplayIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MinViewPitchCurve;                                        // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CharRotVsVehiRot;                                         // 0x0030(0x000C) (Edit, IsPlainOldData)
	TEnumAsByte<enum EVHSeatSideType>                  SeatSideType;                                             // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVehicleWeapon;                                     // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableUsedAsFreeFireSeat;                                // 0x003E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableChangeFreeFireSeat;                                // 0x003F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSTExtraVehicleWeaponConfig>         VehicleWeaponConfig;                                      // 0x0040(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bDefaultControlWeapon;                                    // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	struct FName                                       VehicleWeaponSeatSocket;                                  // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAddDynamicCapsuleCollision;                              // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0064(0x000C) MISSED OFFSET
	struct FTransform                                  CollisionOffset;                                          // 0x0070(0x0030) (Edit, IsPlainOldData)
	bool                                               bDrawDebug;                                               // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xF];                                       // 0x00A1(0x000F) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleWeaponsOnSeat
// 0x000C
struct FSTExtraVehicleWeaponsOnSeat
{
	TArray<class AVehicleShootWeapon*>                 WeaponsOnSeat;                                            // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.STExtraVehicleAttachment
// 0x0010
struct FSTExtraVehicleAttachment
{
	struct FName                                       AttachSocket;                                             // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleAttachementClass;                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponSyncData
// 0x0008
struct FWeaponSyncData
{
	uint32_t                                           ShootID;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           ClipID;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleStatesDataRecord
// 0x0014
struct FVehicleStatesDataRecord
{
	int                                                ID;                                                       // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Time;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               always;                                                   // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              param1;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              param2;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleSyncPostPhysxTick
// 0x0004 (0x003C - 0x0038)
struct FVehicleSyncPostPhysxTick : public FTickFunction
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0038(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleWarRespawnInfo
// 0x000C
struct FVehicleWarRespawnInfo
{
	TWeakObjectPtr<class AActor>                       CauserActor;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bDied;                                                    // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleGemRoundData
// 0x0008
struct FVehicleGemRoundData
{
	float                                              RoundTime;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TreasureNum;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarRankData
// 0x0014
struct FVehicleWarRankData
{
	int                                                RoundNo;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TeamID;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Distance;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Score;                                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GemStoneNum;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarRouteDetailData
// 0x0030
struct FVehicleWarRouteDetailData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RoundNo;                                                  // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFinish;                                                 // 0x000C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              FinishTime;                                               // 0x0010(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ProjectionPoint;                                          // 0x0014(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                CompleteLogicCircleNum;                                   // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        LastRoutePointRecord;                                     // 0x0024(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarTeamKillData
// 0x000C
struct FVehicleWarTeamKillData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ContinueKillNum;                                          // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TotalKillNum;                                             // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarTeamGroupInfo
// 0x0010
struct FVehicleWarTeamGroupInfo
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AVehicleWarPlayerState*>              TeamPlayers;                                              // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarCampGroup
// 0x0010
struct FVehicleWarCampGroup
{
	int                                                CampID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVehicleWarTeamGroupInfo>            CampGroups;                                               // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehicleWarGemMatchState
// 0x000C
struct FVehicleWarGemMatchState
{
	EVehicleWarGemMatchState                           GemMatchState;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                CampID;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CampWinServerTime;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TeamMedalTotalKillData
// 0x003C
struct FTeamMedalTotalKillData
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) UNKNOWN PROPERTY: SetProperty ShadowTrackerExtra.TeamMedalTotalKillData.TotalKillData
};

// ScriptStruct ShadowTrackerExtra.TeamMedalBeAttackedData
// 0x003C
struct FTeamMedalBeAttackedData
{
	TMap<uint32_t, float>                              BeAttackedMap;                                            // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VehicleBeAttackMapData
// 0x003C
struct FVehicleBeAttackMapData
{
	TMap<uint32_t, float>                              BeAttackedMap;                                            // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AutoChangeSeatData
// 0x0008
struct FAutoChangeSeatData
{
	int                                                TeamID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanAutoChangeSeat;                                       // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleWarEquipItem
// 0x0008
struct FVehicleWarEquipItem
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ItemNum;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.NetVehilceProps
// 0x0028
struct FNetVehilceProps
{
	int                                                ItemNum;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	TArray<struct FItemDefineID>                       PropsItem;                                                // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVehicleWarEquipItem>                ChooseEquip;                                              // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                PlayerChoose;                                             // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstWeaponID;                                            // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SecondWeaponID;                                           // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ArmedVehicleWeaponConfig
// 0x0020 (0x0070 - 0x0050)
struct FArmedVehicleWeaponConfig : public FSTExtraVehicleWeaponConfig
{
	struct FName                                       PlayerSocket;                                             // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        AuthoritySeats;                                           // 0x0058(0x000C) (Edit, ZeroConstructor)
	TArray<int>                                        DefaultControlSeats;                                      // 0x0064(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VisibleActorInfo
// 0x0018
struct FVisibleActorInfo
{
	struct FVisualFieldMetaInfo                        VisibleActorMetaInfo;                                     // 0x0000(0x0010)
	TWeakObjectPtr<class AActor>                       VisibleActor;                                             // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VisualFieldCamp
// 0x000C
struct FVisualFieldCamp
{
	TArray<struct FVisibleActorInfo>                   VisibleActorList;                                         // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VisualFieldFrame
// 0x003C
struct FVisualFieldFrame
{
	TMap<int, struct FVisualFieldCamp>                 VisualFieldFrameMap;                                      // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.VoiceCheckObjectNode
// 0x0034
struct FVoiceCheckObjectNode
{
	class ASTExtraBaseCharacter*                       nowCharacter;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	class ASTExtraVehicleBase*                         nowVehicle;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      moveImage;                                                // 0x0008(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      weaponImage;                                              // 0x000C(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      silencerWeaponImage;                                      // 0x0010(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      VehicleImage;                                             // 0x0014(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      GlassImage;                                               // 0x0018(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      ExplosionImage;                                           // 0x001C(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      HeightImage;                                              // 0x0020(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0024(0x000C) MISSED OFFSET
	class UTextBlock*                                  DistanceText;                                             // 0x0030(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GrandTheftScoreItem
// 0x0008
struct FGrandTheftScoreItem
{
	int                                                ItemSpecificID;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Score;                                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ScoreChangeValue
// 0x0008
struct FScoreChangeValue
{
	int                                                Score_RescueOthers;                                       // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Score_Kill;                                               // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BunnyDanceSyncData
// 0x000C
struct FBunnyDanceSyncData
{
	int                                                CurrentIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDancing;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              TimeStamp;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SocketAttachmentInternalData
// 0x0030
struct FSocketAttachmentInternalData
{
	struct FName                                       SocketName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             SocketBase;                                               // 0x0008(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      AttachedPlayer;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OffsetLoc;                                                // 0x0010(0x000C) (IsPlainOldData)
	struct FRotator                                    OffsetRot;                                                // 0x001C(0x000C) (IsPlainOldData)
	class UAnimMontage*                                AnimMontage;                                              // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SocketAttachmentNameTable
// 0x0028
struct FSocketAttachmentNameTable
{
	struct FName                                       SocketName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OffsetLoc;                                                // 0x0008(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    OffsetRot;                                                // 0x0014(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class UAnimMontage*                                AnimMontage;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkeletalAnimationSyncData
// 0x0008
struct FSkeletalAnimationSyncData
{
	class USceneComponent*                             SocketBase;                                               // 0x0000(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               Status;                                                   // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LoveTreeData
// 0x0018
struct FLoveTreeData
{
	int                                                ID;                                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Loc;                                                      // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              minRate;                                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              maxRate;                                                  // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeakGuidTableRow
// 0x0030
struct FWeakGuidTableRow
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     UIName;                                                   // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     UILayer;                                                  // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     RootClass;                                                // 0x001C(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                GuidTxt;                                                  // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GuidNum;                                                  // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GuidActorsArray
// 0x000C
struct FGuidActorsArray
{
	TArray<class AWeakGuidActor*>                      GuidActors;                                               // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AutoAimEnemyInfo
// 0x0014
struct FAutoAimEnemyInfo
{
	class ASTExtraPlayerCharacter*                     EnemyPawn;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0004(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HandleMeshPack
// 0x0150
struct FHandleMeshPack
{
	class UBattleItemHandleBase*                       Handle;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FWeaponMeshCfg                              MeshCfg;                                                  // 0x0008(0x0148)
};

// ScriptStruct ShadowTrackerExtra.DIYEnableLevel
// 0x0008
struct FDIYEnableLevel
{
	int                                                DeviceLevel;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EnableLevel;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DefaultWeaponHolderInfo
// 0x0018
struct FDefaultWeaponHolderInfo
{
	class UClass*                                      WeaponClass;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       WeaponSocket;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WeaponSepcificID;                                         // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WeaponTypeID;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherUIStatus
// 0x00A0
struct FWeatherUIStatus
{
	EWeatherStatusType                                 WeatherStatus;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FSlateBrush                                 PVENightBrush;                                            // 0x0008(0x0098) (Edit, BlueprintVisible, BlueprintReadOnly)
};

// ScriptStruct ShadowTrackerExtra.WeatherUIType
// 0x0010
struct FWeatherUIType
{
	EWeatherUICountDownType                            UIType;                                                   // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TArray<struct FWeatherUIStatus>                    StatusList;                                               // 0x0004(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WheelSfxOnSurface
// 0x000C
struct FWheelSfxOnSurface
{
	class UPhysicalMaterial*                           SurfaceMaterial;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EventStart;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               EventStop;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WonderfulCutOutputData
// 0x001C
struct FWonderfulCutOutputData
{
	float                                              BeginTimeSecs;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              EndTimeSecs;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<enum EWonderfulCutOutputType>          WonderfulCutType;                                         // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              ShootDistance;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FString                                     CauserName;                                               // 0x0010(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
};

// ScriptStruct ShadowTrackerExtra.WonderfulCutContinuousKillOutputData
// 0x0010
struct FWonderfulCutContinuousKillOutputData
{
	float                                              BeginTimeSecs;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              EndTimeSecs;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                KillNum;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FarthestKillDistance;                                     // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WonderfulCut_OneShootDamage
// 0x0018
struct FWonderfulCut_OneShootDamage
{
	bool                                               bVictimAI;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWonderfulCutCaptureType>         CaptureType;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWonderfulCutShootDamageType>     ShootDamageType;                                          // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	float                                              DamageTimeSecs;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShootDistance;                                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     CauserName;                                               // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WonderfulCutShootDamageData
// 0x0010
struct FWonderfulCutShootDamageData
{
	int                                                DamagePlayerID;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWonderfulCut_OneShootDamage>        ShootDamageList;                                          // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WonderfulCutShootDamageSortData
// 0x001C
struct FWonderfulCutShootDamageSortData
{
	float                                              DamageIntervalSecs;                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DamageTimeSecs;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bVictimAI;                                                // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWonderfulCutCaptureType>         CaptureType;                                              // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWonderfulCutShootDamageType>     ShootDamageType;                                          // 0x000A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
	float                                              ShootDistance;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     CauserName;                                               // 0x0010(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WorldActorFlagData
// 0x0008
struct FWorldActorFlagData
{
	int                                                ActorNetGUID;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PlayerKey;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WorldActorFlagList
// 0x000C
struct FWorldActorFlagList
{
	TArray<struct FWorldActorFlagData>                 FlagList;                                                 // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SyncRelevantPlayerTask
// 0x0010
struct FSyncRelevantPlayerTask
{
	int                                                TaskId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              TaskTargets;                                              // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.XTBetrayInfo
// 0x0008
struct FXTBetrayInfo
{
	bool                                               IsInBetray;                                               // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                BetrayTime;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ExtraDamageInfo
// 0x0008
struct FExtraDamageInfo
{
	int                                                DamageTypeId;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	EAvatarDamagePosition                              DamagePosition;                                           // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               DamageToDying;                                            // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               DamageToDead;                                             // 0x0006(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplayStreamInfo
// 0x0050
struct FReplayStreamInfo
{
	struct FString                                     Name;                                                     // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     FriendlyName;                                             // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FDateTime                                   TimeStamp;                                                // 0x0018(0x0008) (BlueprintVisible, BlueprintReadOnly)
	int                                                TimestampInt;                                             // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0024(0x0010) MISSED OFFSET
	int                                                NumViewers;                                               // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLive;                                                  // 0x0038(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0039(0x000B) MISSED OFFSET
	struct FString                                     ReplayURL;                                                // 0x0044(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.KilledTipsBlock
// 0x0028
struct FKilledTipsBlock
{
	TEnumAsByte<enum EDamageType>                      DamageType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     attackerName;                                             // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     WeaponName;                                               // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     DeadName;                                                 // 0x001C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DeliveryPolygonPoints
// 0x000C
struct FDeliveryPolygonPoints
{
	TArray<struct FVector>                             DeliveryPolygonPoint;                                     // 0x0000(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AIDynamicDamageBasedHP
// 0x0010
struct FAIDynamicDamageBasedHP
{
	float                                              HealthPercentLeft;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPercentRight;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FireHitRate;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageScale;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttackBuildingRatingDamage
// 0x000C
struct FAIAttackBuildingRatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttackMORatingDamage
// 0x000C
struct FAIAttackMORatingDamage
{
	float                                              RatingDamageScale;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FiringAccuracyRadius;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttackAIRatingFireHitRate
// 0x0008
struct FAIAttackAIRatingFireHitRate
{
	float                                              FireHitRate;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIRatingFireHitRate
// 0x0008
struct FAIRatingFireHitRate
{
	float                                              FireHitRate;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SectionRightValue;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AIAttributeTableRow
// 0x000C
struct FAIAttributeTableRow
{
	int                                                AttributeID;                                              // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageRate;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HP;                                                       // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FanInfo
// 0x0008
struct FFanInfo
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AITriggerTupple
// 0x0030
struct FAITriggerTupple
{
	int                                                Probability;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      TriggerTarget;                                            // 0x0008(0x0020) (Edit)
	int                                                TriggerSetValue;                                          // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AIGroupData
// 0x001C
struct FAIGroupData
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AnimalAIStateData
// 0x001C
struct FAnimalAIStateData
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FloatNet
// 0x0004
struct FFloatNet
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.Float_NetQuantize8
// 0x0000 (0x0004 - 0x0004)
struct FFloat_NetQuantize8 : public FFloatNet
{

};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyMatConfig
// 0x0030 (0x0048 - 0x0018)
struct FAvatarAction_ApplyMatConfig : public FAvatarActionBase
{
	struct FCustomMatConfig                            CacheMatConfig;                                           // 0x0018(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyDIYMatParam
// 0x0010 (0x0058 - 0x0048)
struct FAvatarAction_ApplyDIYMatParam : public FAvatarAction_ApplyMatConfig
{
	TArray<int>                                        MatID;                                                    // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyDIYMirroParam
// 0x0010 (0x0058 - 0x0048)
struct FAvatarAction_ApplyDIYMirroParam : public FAvatarAction_ApplyMatConfig
{
	TArray<int>                                        MirroParam;                                               // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyDIYPattern
// 0x0010 (0x0028 - 0x0018)
struct FAvatarAction_ApplyDIYPattern : public FAvatarActionBase
{
	TArray<struct FDIYMergedTexData>                   DIYTextureParam;                                          // 0x0014(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                UVIndex;                                                  // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyItemHandle
// 0x0018 (0x0030 - 0x0018)
struct FAvatarAction_ApplyItemHandle : public FAvatarActionBase
{
	struct FItemDefineID                               ItemDefineID;                                             // 0x0018(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyMaterial
// 0x0028 (0x0040 - 0x0018)
struct FAvatarAction_ApplyMaterial : public FAvatarActionBase
{
	int                                                MaterialBPID;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FMaterialGroup                              CacheMatGroup;                                            // 0x0018(0x0024)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyMesh
// 0x00C8 (0x00E0 - 0x0018)
struct FAvatarAction_ApplyMesh : public FAvatarActionBase
{
	int                                                MeshBPID;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FMeshAsset                                  CachedMeshAsset;                                          // 0x0020(0x00C0)
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyParticle
// 0x0028 (0x0040 - 0x0018)
struct FAvatarAction_ApplyParticle : public FAvatarActionBase
{
	int                                                ParticleBPID;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FParticleGroup                              ParticleGroup;                                            // 0x0018(0x0024)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.AvatarAction_ApplyWeaponHandle
// 0x0100 (0x0130 - 0x0030)
struct FAvatarAction_ApplyWeaponHandle : public FAvatarAction_ApplyItemHandle
{
	struct FMeshAsset                                  CachedMeshAsset;                                          // 0x0030(0x00C0)
	TArray<struct FMaterialAsset>                      CachedMatAsset;                                           // 0x00F0(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x00FC(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.AvatarAction_ApplyWeaponHandle.CachedLightAsset
	unsigned char                                      UnknownData02[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MaterialConfig
// 0x0068
struct FMaterialConfig
{
	struct FName                                       MatSlotName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialConfig.Mat
	unsigned char                                      UnknownData01[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.MaterialConfig.MatBase
	TArray<struct FMaterialAsset>                      additionalMats;                                           // 0x0058(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CaptureMeshBase
// 0x0010
struct FCaptureMeshBase
{
	struct FName                                       SocketName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              MeshComp;                                                 // 0x0008(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      AnimClass;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CaptureMeshDesc
// 0x0020
struct FCaptureMeshDesc
{
	struct FName                                       SocketName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              MeshComp;                                                 // 0x0008(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	EMeshType                                          meshType;                                                 // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	class UClass*                                      AnimClass;                                                // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FCaptureMeshBase>                    AttachMeshDesc;                                           // 0x0014(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AvatarItemData
// 0x0010 (0x00A8 - 0x0098)
struct FAvatarItemData : public FBattleItemData
{
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0098(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 StaticMesh;                                               // 0x009C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           MatInst;                                                  // 0x00A0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                meshType;                                                 // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GenderMultiAnimConfig
// 0x0038
struct FGenderMultiAnimConfig
{
	struct FName                                       GenderStr;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Character;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x000C(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.GenderMultiAnimConfig.Anim
};

// ScriptStruct ShadowTrackerExtra.TouchInfo
// 0x0014
struct FTouchInfo
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ResultItemData
// 0x0008
struct FResultItemData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Durability;                                               // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CorpsKillInfo
// 0x0008
struct FCorpsKillInfo
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                KilledNum;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GroupTeams
// 0x000C
struct FGroupTeams
{
	TArray<int>                                        Teams;                                                    // 0x0000(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BitMsg
// 0x0020
struct FBitMsg
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BitMsgDelta
// 0x0014
struct FBitMsgDelta
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskMobOnceMemory
// 0x0004
struct FBTTaskMobOnceMemory
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTAICheckMaxDistanceFromSpawnPointMemory
// 0x002C
struct FBTAICheckMaxDistanceFromSpawnPointMemory
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	struct FVector                                     SpawnLocation;                                            // 0x0004(0x000C) (IsPlainOldData)
	struct FBox                                        MaxMoveDistanceVolumeBox;                                 // 0x0010(0x001C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTFlyingChooseEnemyMemory
// 0x000C
struct FBTFlyingChooseEnemyMemory
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTMobAddHpMemory
// 0x0001
struct FBTMobAddHpMemory
{
	bool                                               HPBuffAdded;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTMobCheckLoseTargetMemory
// 0x0008
struct FBTMobCheckLoseTargetMemory
{
	bool                                               LastLoseTarget;                                           // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LoseTargetElapsedTime;                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTMobHearingMemory
// 0x0028
struct FBTMobHearingMemory
{
	struct FNoiseInfo                                  LastChosenNoiseInfo;                                      // 0x0000(0x0024)
	float                                              LockNoiseElapsedTime;                                     // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTMobMoveBlockTimerMemory
// 0x0004
struct FBTMobMoveBlockTimerMemory
{
	float                                              BlockElapsedTime;                                         // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTAISenseGrenadeMemory
// 0x0180
struct FBTAISenseGrenadeMemory
{
	TMap<EAISenseGrenadeType, float>                   GrenadeSensedDistance;                                    // 0x0000(0x0050) (ZeroConstructor)
	TMap<EAISenseGrenadeType, float>                   GrenadeSensedDistanceSquared;                             // 0x003C(0x0050) (ZeroConstructor)
	float                                              fMaxSenseDistance;                                        // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8C];                                      // 0x007C(0x008C) MISSED OFFSET
	TMap<EAISenseGrenadeType, struct FAISenseGrenadeBBKeyInfo> GrenadeBBKeyInfo;                                         // 0x0108(0x0050) (ZeroConstructor)
	TMap<class UClass*, EAISenseGrenadeType>           GrenadeClassesMap;                                        // 0x0144(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.BTTaskCrowdMoveMemory
// 0x0070
struct FBTTaskCrowdMoveMemory
{
	unsigned char                                      UnknownData00[0x70];                                      // 0x0000(0x0070) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskForceIdleMemory
// 0x000C
struct FBTTaskForceIdleMemory
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTLaunchMoveSpeedCurve
// 0x0008
struct FBTLaunchMoveSpeedCurve
{
	float                                              DistanceThreshold;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LaunchSpeedCurve;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BTTaskMobExplodeMemory
// 0x0001
struct FBTTaskMobExplodeMemory
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskGetNearDeathCharNearbyMemory
// 0x000C
struct FBTTaskGetNearDeathCharNearbyMemory
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskMobGetRandomAttackTargetInRadius
// 0x0008
struct FBTTaskMobGetRandomAttackTargetInRadius
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskGetVehicleNearbyMemory
// 0x000C
struct FBTTaskGetVehicleNearbyMemory
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskMoveAroundMemory
// 0x0090
struct FBTTaskMoveAroundMemory
{
	unsigned char                                      UnknownData00[0x60];                                      // 0x0000(0x0060) MISSED OFFSET
	class AActor*                                      FocusActor;                                               // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2C];                                      // 0x0064(0x002C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTTaskRotateToTargetMemory
// 0x0008
struct FBTTaskRotateToTargetMemory
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BTAICharacterCastSkillMemory
// 0x0034
struct FBTAICharacterCastSkillMemory
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	struct FVector                                     FocusLocation;                                            // 0x0004(0x000C) (IsPlainOldData)
	TWeakObjectPtr<class AActor>                       FocusActor;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TossTargetLoc;                                            // 0x0018(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FVector                                     GrenadeThrowStartLoc;                                     // 0x0028(0x000C) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.IngameInvitedNode
// 0x0018
struct FIngameInvitedNode
{
	struct FString                                     PlayerName;                                               // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     gid;                                                      // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.WeaponFireResetData
// 0x000C
struct FWeaponFireResetData
{
	EFireResetType                                     ResetType;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ResetTime;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponCrossHairHitPerformData
// 0x0028 (0x0038 - 0x0010)
struct FWeaponCrossHairHitPerformData : public FWeaponCrossHairPerformData
{
	float                                              DefaultShowHitTime;                                       // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageRangeMin;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageRangeMax;                                           // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageScaleSpreadMin;                                     // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageScaleSpreadMax;                                     // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurDamageScaleMin;                                        // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurDamageScaleMax;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurDamageScaleDecreaseSpeed;                              // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShowHitCrosshairLeftTime;                                 // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurDamageScale;                                           // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DrawCircleItemData
// 0x0028
struct FDrawCircleItemData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DrawBoxItemData
// 0x0030
struct FDrawBoxItemData
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.CrowdAgent
// 0x0300
struct FCrowdAgent
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
	class AActor*                                      actorPtr;                                                 // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2E4];                                     // 0x001C(0x02E4) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ChildPendingActiveObject
// 0x0070
struct FChildPendingActiveObject
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.ChildPendingActiveObject.ChildWidgetClass
	struct FAnchorData                                 Anchor;                                                   // 0x0028(0x0028) (Edit)
	bool                                               bAutoSize;                                                // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                ZOrder;                                                   // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     MountName;                                                // 0x0058(0x000C) (Edit, ZeroConstructor)
	struct FString                                     MountOuterName;                                           // 0x0064(0x000C) (Edit, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DamageNumberTeamColorInfo
// 0x002C
struct FDamageNumberTeamColorInfo
{
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0000(0x002C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeatherDebugView
// 0x0020
struct FWeatherDebugView
{
	struct FString                                     CurrentWeather;                                           // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	struct FString                                     WeatherStage;                                             // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	float                                              TotalElapsedTime;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WeatherElapsedTime;                                       // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeatherStatus
// 0x0002
struct FWeatherStatus
{
	EWeatherStatusType                                 WeaterType;                                               // 0x0000(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EWeatherChangeStatus                               WeaterStatus;                                             // 0x0001(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ExplosionFinderWrapper
// 0x0004
struct FExplosionFinderWrapper
{
	class UExplosionFinder*                            ExplosionFinder;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.FinderResult
// 0x0090
struct FFinderResult
{
	struct FHitResult                                  Hit;                                                      // 0x0000(0x0088) (BlueprintVisible, Transient, IsPlainOldData)
	unsigned char                                      bMarkForRemoving : 1;                                     // 0x0088(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bMarkForKeeping : 1;                                      // 0x0088(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.FourInOneRoleLevelMap
// 0x0001
struct FFourInOneRoleLevelMap
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplayFileHeader
// 0x0044
struct FReplayFileHeader
{
	int                                                ReplayFileFormatRevision;                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReplayName;                                               // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     ReplayVersion;                                            // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                DateTime;                                                 // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalTime;                                                // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     roomName;                                                 // 0x0024(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                GameModeID;                                               // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SubModeId;                                                // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MapId;                                                    // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PlayerNum;                                                // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CustomGameModeId;                                         // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CVarConfigItem
// 0x0018
struct FCVarConfigItem
{
	struct FString                                     Key;                                                      // 0x0000(0x000C) (ZeroConstructor)
	struct FString                                     Value;                                                    // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.RenderStyleAndPPMaping
// 0x003C
struct FRenderStyleAndPPMaping
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ItemsBoxDataTableRow
// 0x004C (0x0050 - 0x0004)
struct FItemsBoxDataTableRow : public FTableRowBase
{
	struct FString                                     Category;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                Weight;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<class UClass*, int>                           ItemsData;                                                // 0x0014(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SingleMarkInfo
// 0x0008
struct FSingleMarkInfo
{
	TEnumAsByte<enum EUIMarkState>                     MarkState;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UMapUIMarkBaseWidget*                        pWidget;                                                  // 0x0004(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MobAIStateData
// 0x00B0
struct FMobAIStateData
{
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0000(0x00B0) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HatredInfo
// 0x000C
struct FHatredInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterLine
// 0x001C
struct FMonsterLine
{
	int                                                CallNum;                                                  // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartPos;                                                 // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     EndPos;                                                   // 0x0010(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ClientMoveSpeedCheck
// 0x0028
struct FClientMoveSpeedCheck
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.Strategy6MoveVector
// 0x0020
struct FStrategy6MoveVector
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BulletHitInfoRepData
// 0x0040
struct FBulletHitInfoRepData
{
	struct FVector                                     ImpactPoint;                                              // 0x0000(0x000C) (IsPlainOldData)
	struct FVector_NetQuantizeNormal                   ImpactNormal;                                             // 0x000C(0x000C)
	struct FVector                                     ShootMomentMuzzlePos;                                     // 0x0018(0x000C) (IsPlainOldData)
	unsigned char                                      SurfaceType;                                              // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          Component;                                                // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ClientTimeStamp;                                          // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitBodyType;                                              // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsUnderWater : 1;                                        // 0x003D(0x0001)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponAttachmentSlot
// 0x0004
struct FWeaponAttachmentSlot
{
	int                                                TypeSpecificID;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SwitchWeaponReplicatedToOwnerData
// 0x0008
struct FSwitchWeaponReplicatedToOwnerData
{
	TEnumAsByte<enum ESurviveWeaponPropSlot>           Slot;                                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                OperationIndex;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DestroyWeaponReplicatedToOwnerData
// 0x0010
struct FDestroyWeaponReplicatedToOwnerData
{
	struct FName                                       LogicSocket;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                OperationIndex;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.DisUseWeaponReplicatedToOwnerData
// 0x0004
struct FDisUseWeaponReplicatedToOwnerData
{
	int                                                OperationIndex;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UseWeaponReplicatedToOwnerData
// 0x0010
struct FUseWeaponReplicatedToOwnerData
{
	struct FName                                       LogicSocket;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedWaitHandleSpawnFinishedOnClient;                     // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                OperationIndex;                                           // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponNotifyActionData
// 0x0008
struct FWeaponNotifyActionData
{
	int                                                OperationIndex;                                           // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EWeaponAction>                    Action;                                                   // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponReloadData
// 0x000C
struct FWeaponReloadData
{
	float                                              FillTime;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SingleBulletPrepareTime;                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UploadTime;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CurrencyInfo
// 0x0028
struct FCurrencyInfo
{
	TEnumAsByte<enum ECurrencyType>                    Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     Icon;                                                     // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     Comment;                                                  // 0x001C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ParticleDistance
// 0x000C
struct FParticleDistance
{
	TWeakObjectPtr<class UParticleSystemComponent>     ParticleSystemComp;                                       // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ToPlayerDistance;                                         // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PenetrateSurfaceResult
// 0x0034
struct FPenetrateSurfaceResult
{
	TEnumAsByte<enum EPhysicalSurface>                 SurfaceType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     InPoint;                                                  // 0x0004(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OutPoint;                                                 // 0x0010(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Normal;                                                   // 0x001C(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Tags;                                                     // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.DropEffectData
// 0x0018
struct FDropEffectData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     EffectPath;                                               // 0x0008(0x000C) (ZeroConstructor)
	struct FColor                                      EffectColor;                                              // 0x0014(0x0004) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PickupWrapperInfo
// 0x000C
struct FPickupWrapperInfo
{
	TWeakObjectPtr<class APickUpWrapperActor>          PickUpActor;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bRecentlyRendered;                                        // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEffectSpawnd;                                            // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowEffect;                                              // 0x000A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ExtractDamageParam
// 0x0010
struct FExtractDamageParam
{
	int                                                DamageType;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        KillFXItemID;                                             // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.HItResuktWithVisbility
// 0x0090
struct FHItResuktWithVisbility
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0000(0x0090) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.LowTemperatureDamageEvent
// 0x0000 (0x00A8 - 0x00A8)
struct FLowTemperatureDamageEvent : public FSTPointDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.SkillDamageEvent
// 0x0010 (0x00B8 - 0x00A8)
struct FSkillDamageEvent : public FSTPointDamageEvent
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PoisonFogDamageEvent
// 0x0000 (0x00A8 - 0x00A8)
struct FPoisonFogDamageEvent : public FSTPointDamageEvent
{

};

// ScriptStruct ShadowTrackerExtra.RespawnDelayAddItemList
// 0x000C
struct FRespawnDelayAddItemList
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RespawnDelayAddItem
// 0x0008
struct FRespawnDelayAddItem
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.TombboxLifeSpanStruct
// 0x0008
struct FTombboxLifeSpanStruct
{
	class UClass*                                      GameModeClass;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LifeSpan;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AirDropVisionInfo
// 0x0014
struct FAirDropVisionInfo
{
	int                                                AirDropId;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0004(0x000C) (IsPlainOldData)
	bool                                               IsSmoking;                                                // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.IslandInteractionEmoteConfig
// 0x000C
struct FIslandInteractionEmoteConfig
{
	int                                                PrepareEmoteId;                                           // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SelfEmoteId;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OtherEmoteId;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CustomMiniMapGuideLineInfo
// 0x003C
struct FCustomMiniMapGuideLineInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	EAddMarkFlag                                       MapAdded;                                                 // 0x0008(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FVector                                     StartLoc;                                                 // 0x000C(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FVector                                     EndLoc;                                                   // 0x0018(0x000C) (BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                DrawColor;                                                // 0x0024(0x0010) (BlueprintVisible, IsPlainOldData)
	float                                              LineDashSize;                                             // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LineThickness;                                            // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SlotWeaponData
// 0x0010
struct FSlotWeaponData
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        AttachMentIDList;                                         // 0x0004(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SoundData
// 0x0014
struct FSoundData
{
	EFSoundType                                        soundType;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     SoundDir;                                                 // 0x0004(0x000C) (IsPlainOldData)
	float                                              SoundVolume;                                              // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AkEventTableRow
// 0x0008 (0x000C - 0x0004)
struct FAkEventTableRow : public FTableRowBase
{
	int                                                ID;                                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PickUpGlobalDAndWrapperTableRow
// 0x0008 (0x000C - 0x0004)
struct FPickUpGlobalDAndWrapperTableRow : public FTableRowBase
{
	int                                                ID;                                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Template;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PickUpActionReplicatedDataBroadcast
// 0x000C
struct FPickUpActionReplicatedDataBroadcast
{
	int                                                ActionID;                                                 // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetPickUpItemID;                                       // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EHandlePickUpActionReplicatedDataActionType> ActionType;                                               // 0x0008(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PickUpActionReplicatedData
// 0x0014
struct FPickUpActionReplicatedData
{
	int                                                ActionID;                                                 // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetPickUpItemID;                                       // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ServerTargetActor;                                        // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      WrapperActor;                                             // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EHandlePickUpActionReplicatedDataActionType> ActionType;                                               // 0x0010(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ConsumeItemCDData
// 0x000C
struct FConsumeItemCDData
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ConsumeItemDataTableRow
// 0x0018 (0x0024 - 0x000C)
struct FConsumeItemDataTableRow : public FSurviveTableRowBase
{
	int                                                ConsumeItemID;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EConsumeItemType>                 Type;                                                     // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum EConsumeItemCategory>             Category;                                                 // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              ConsumeCD;                                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoverHealthPercentage;                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRecoverHealthPercentage;                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecoverEnegy;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.PlayerEquipmentDataTableRow
// 0x0010 (0x001C - 0x000C)
struct FPlayerEquipmentDataTableRow : public FSurviveTableRowBase
{
	int                                                PlayerEquipmentID;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum EPlayerEquipmentSlotType>         Type;                                                     // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              DamageMultiplyAdditionalRate;                             // 0x0014(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAvata;                                                 // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PlayerEquipmentItemData
// 0x0180
struct FPlayerEquipmentItemData
{
	struct FPickUpGlobalDataTableRow                   PickUpGlobalDataTableRow;                                 // 0x0000(0x0160) (BlueprintVisible, BlueprintReadOnly)
	struct FPlayerEquipmentDataTableRow                PlayerEquipmentDataTableRow;                              // 0x0160(0x001C) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WeaponDataTableRow
// 0x000C (0x0018 - 0x000C)
struct FWeaponDataTableRow : public FSurviveTableRowBase
{
	int                                                WeaponId;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponTemplate;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ESurvivePickUpCategory>           SurvivePickUpCategory;                                    // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MainSlotItemData
// 0x0180
struct FMainSlotItemData
{
	struct FPickUpGlobalDataTableRow                   PickUpGlobalDataTableRow;                                 // 0x0000(0x0160) (BlueprintVisible, BlueprintReadOnly)
	struct FWeaponDataTableRow                         WeaponDataTableRow;                                       // 0x0160(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class AActor*                                      TargetActor;                                              // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.UseBackpackItemParams
// 0x0001
struct FUseBackpackItemParams
{
	TEnumAsByte<enum ESurviveWeaponPropSlot>           TargetEquipWeaponComponentMainSlot;                       // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BackpackItemData
// 0x0178
struct FBackpackItemData
{
	int                                                Num;                                                      // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FPickUpGlobalDataTableRow                   BaseData;                                                 // 0x0008(0x0160) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bIsUsing;                                                 // 0x0168(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0169(0x0003) MISSED OFFSET
	float                                              FinishPercentage;                                         // 0x016C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<enum ESurvivePickUpGlobalCategory>     SurvivePickUpGlobalCategory;                              // 0x0170(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ReplayPawnInfo
// 0x000C
struct FReplayPawnInfo
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	bool                                               isEnemy;                                                  // 0x0004(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                UIIndex;                                                  // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ReplayPreInfo
// 0x0010
struct FReplayPreInfo
{
	TEnumAsByte<enum EDemoType>                        ReplayType;                                               // 0x0000(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FString                                     ReplayNameStr;                                            // 0x0004(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.StopFireInfo
// 0x0008
struct FStopFireInfo
{
	uint32_t                                           CurClipID;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentBullet;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.MoveBaseInfo_NetQuantize
// 0x0050
struct FMoveBaseInfo_NetQuantize
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.HistoryLockMapDataItem
// 0x000C
struct FHistoryLockMapDataItem
{
	float                                              LockTime;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FrameLength;                                              // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CacheTime;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.TraceShootData
// 0x0044
struct FTraceShootData
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	struct FRotator                                    ShootRotate;                                              // 0x0004(0x000C) (IsPlainOldData)
	struct FVector                                     TraceStart;                                               // 0x0010(0x000C) (IsPlainOldData)
	struct FVector                                     TraceEnd;                                                 // 0x001C(0x000C) (IsPlainOldData)
	TEnumAsByte<enum ETraceShootType>                  ShootMode;                                                // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FVector                                     ShootTargetLoc;                                           // 0x002C(0x000C) (IsPlainOldData)
	float                                              Deviation;                                                // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BackScreenPos;                                            // 0x003C(0x0008) (IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ShovelStat
// 0x0018
struct FShovelStat
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleInfoInBornIsland
// 0x0020
struct FVehicleInfoInBornIsland
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VehiclePath;                                              // 0x0004(0x000C) (ZeroConstructor)
	struct FString                                     VehicleContainerPath;                                     // 0x0010(0x000C) (ZeroConstructor)
	int                                                ShowAvatarID;                                             // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VehicleSpots
// 0x0048
struct FVehicleSpots
{
	TArray<struct FTransform>                          Spots;                                                    // 0x0000(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x000C(0x003C) UNKNOWN PROPERTY: SetProperty ShadowTrackerExtra.VehicleSpots.UsedSpot
};

// ScriptStruct ShadowTrackerExtra.SingleTrainingData
// 0x0001
struct FSingleTrainingData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkirtAnimDynamicData
// 0x0048
struct FSkirtAnimDynamicData
{
	EAnimPhysSimSpaceType                              SimulationSpace;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              GravityScale;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverrideLinearDamping;                                   // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              LinearDampingOverride;                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverrideAngularDamping;                                  // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              AngularDampingOverride;                                   // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AngularLimitsMin;                                         // 0x0018(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AngularLimitsMax;                                         // 0x0024(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FAnimPhysPlanarLimit>                PlanarLimits;                                             // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAnimPhysSphericalLimit>             SphericalLimits;                                          // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SkirtChainData
// 0x0120
struct FSkirtChainData
{
	struct FSkirtAnimDynamicData                       Chain_FR;                                                 // 0x0000(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtAnimDynamicData                       Chain_FL;                                                 // 0x0048(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtAnimDynamicData                       Chain_L;                                                  // 0x0090(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtAnimDynamicData                       Chain_R;                                                  // 0x00D8(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SkirtBoneModifyData
// 0x001C
struct FSkirtBoneModifyData
{
	TEnumAsByte<enum EBoneModificationMode>            TranslationMode;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<enum EBoneModificationMode>            RotationMode;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FVector                                     Translation;                                              // 0x0004(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0010(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkirtModifyListData
// 0x0070
struct FSkirtModifyListData
{
	struct FSkirtBoneModifyData                        Modify_L;                                                 // 0x0000(0x001C) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtBoneModifyData                        Modify_FL;                                                // 0x001C(0x001C) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtBoneModifyData                        Modify_R;                                                 // 0x0038(0x001C) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtBoneModifyData                        Modify_FR;                                                // 0x0054(0x001C) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.SkirtConfigData
// 0x019C
struct FSkirtConfigData
{
	TArray<EPawnState>                                 PawnStateList;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FSkirtChainData                             DynamicChainData;                                         // 0x000C(0x0120) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSkirtModifyListData                        BoneModifyData;                                           // 0x012C(0x0070) (Edit, BlueprintVisible, DisableEditOnInstance)
};

// ScriptStruct ShadowTrackerExtra.TempAvatarSlotDesc
// 0x009C
struct FTempAvatarSlotDesc
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAvatarTableData                            RelationData;                                             // 0x0004(0x007C) (BlueprintVisible, BlueprintReadOnly)
	TArray<int>                                        ReplaceDesc;                                              // 0x0080(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        HideDesc;                                                 // 0x008C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bForceHideState;                                          // 0x0098(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SIslandPlayerMarkInfo
// 0x0048
struct FSIslandPlayerMarkInfo
{
	uint32_t                                           PlayerKey;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FGameModePlayerAliasInfo                    PlayerAliasInfo;                                          // 0x0010(0x0034) (BlueprintVisible)
	class ASocialIslandPlayerState*                    PlayerState;                                              // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SocialIslandRankData
// 0x0001
struct FSocialIslandRankData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.StateType
// 0x0010
struct FStateType
{
	EStateType                                         StateType;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            TimeStamp;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimatedMaterialParameter_Vector
// 0x0010
struct FAnimatedMaterialParameter_Vector
{
	class UCurveVector*                                MaterialParameterCurve;                                   // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       MaterialParameterName;                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimatedMaterialParameter_Scalar
// 0x0010
struct FAnimatedMaterialParameter_Scalar
{
	class UCurveFloat*                                 MaterialParameterCurve;                                   // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       MaterialParameterName;                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CachAirDropMarkSyncData
// 0x006C
struct FCachAirDropMarkSyncData
{
	struct FMarkSyncData                               MarkSyncData;                                             // 0x0000(0x0058)
	struct FAirDropVisionInfo                          AirDropVisionInfo;                                        // 0x0058(0x0014)
};

// ScriptStruct ShadowTrackerExtra.FollowCandidateSortData
// 0x0004
struct FFollowCandidateSortData
{
	class ASTExtraBaseCharacter*                       Owner;                                                    // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.UserCmdBitMsg
// 0x00E8
struct FUserCmdBitMsg
{
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0000(0x002C) MISSED OFFSET
	class UPrimitiveComponent*                         ClientMovementBase;                                       // 0x002C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB8];                                      // 0x0030(0x00B8) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NearDeathRestoredOrignalHealthStruct
// 0x000C
struct FNearDeathRestoredOrignalHealthStruct
{
	class UClass*                                      GameModeClass;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Health;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BreathDecreathRate;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.RestoringDurationWithGameModeStruct
// 0x0008
struct FRestoringDurationWithGameModeStruct
{
	class UClass*                                      GameModeClass;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.OBCircleInfo
// 0x0010
struct FOBCircleInfo
{
	int                                                CircleStateStartServerWorldSecond;                        // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CircleStatusLastTime;                                     // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CircleStatus;                                             // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurrentCircleIndex;                                       // 0x000C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.InfectionAnimResList
// 0x002C
struct FInfectionAnimResList
{
	struct FPlayerAnimData                             MovementAnim;                                             // 0x0000(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             HurtAnim;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             TurnAnim;                                                 // 0x0010(0x0008) (Edit, BlueprintVisible)
	struct FPlayerAnimData                             PoseChangeAnim;                                           // 0x0018(0x0008) (Edit, BlueprintVisible)
	TArray<struct FPlayerAnimData>                     JumpAnimList;                                             // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.AirVehicleAudioState
// 0x0014
struct FAirVehicleAudioState
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.PetEventSyncData
// 0x0008
struct FPetEventSyncData
{
	class UPetEventItem*                               EventItem;                                                // 0x0000(0x0004) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              StartTime;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BuffEffectSettingTableRow
// 0x0014
struct FBuffEffectSettingTableRow
{
	int                                                EffectID;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     SkillID;                                                  // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                EffectObj;                                                // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ParachuteStateParams
// 0x0034
struct FParachuteStateParams
{
	float                                              MinForwardForce;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxForwardForce;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DragForceFractor;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinPitchAngle;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchAngle;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinRollAngle;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRollAngle;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinForwardSpeed;                                          // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxForwardSpeed;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinRightSpeed;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRightSpeed;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinDownSpeed;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDownSpeed;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WeaponHitDisanceSectionMap
// 0x003C
struct FWeaponHitDisanceSectionMap
{
	TMap<int, struct FWeaponHitDisanceSectionArray>    Map;                                                      // 0x0000(0x0050) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MonsterBuffEffectSettingTableRow
// 0x0014
struct FMonsterBuffEffectSettingTableRow
{
	int                                                EffectID;                                                 // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     SkillID;                                                  // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                EffectObj;                                                // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleCharacterCachedDeathInfo
// 0x00B8
struct FSimpleCharacterCachedDeathInfo
{
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0000(0x00B8) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.NightStatusRateMap
// 0x003C
struct FNightStatusRateMap
{
	TMap<ENightStatus, float>                          RateMap;                                                  // 0x0000(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.DebugVehicleSpawn
// 0x0038
struct FDebugVehicleSpawn
{
	int                                                SpawnCount;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       SpawnTag;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAtLocation;                                         // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	struct FVector                                     SpawnLocation;                                            // 0x0014(0x000C) (IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x0020(0x000C) (IsPlainOldData)
	struct FWaypointNetworkConnection                  StartingPath;                                             // 0x002C(0x000C)
};

// ScriptStruct ShadowTrackerExtra.VehicleBehaviorPayload
// 0x0018
struct FVehicleBehaviorPayload
{
	class APawn*                                       VehiclePawn;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	class UBehaviorTree*                               BehaviorTree;                                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	class UBlackboardData*                             BlackboardData;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FWaypointNetworkConnection                  StartingPath;                                             // 0x000C(0x000C)
};

// ScriptStruct ShadowTrackerExtra.VehicleSpawn
// 0x00BC (0x00C0 - 0x0004)
struct FVehicleSpawn : public FTableRowBase
{
	struct FGuid                                       ID;                                                       // 0x0004(0x0010) (Edit, EditConst, IsPlainOldData)
	ESpawnType                                         SpawnType;                                                // 0x0014(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0015(0x0028) UNKNOWN PROPERTY: SoftClassProperty ShadowTrackerExtra.VehicleSpawn.VehicleClass
	unsigned char                                      UnknownData02[0x28];                                      // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleSpawn.BehaviorTreeAsset
	unsigned char                                      UnknownData03[0x28];                                      // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty ShadowTrackerExtra.VehicleSpawn.BlackboardDataAsset
	float                                              InitialSpawnDelay;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SubsequentSpawnDelay;                                     // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTriggers;                                              // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinToSpawn;                                               // 0x009C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxToSpawn;                                               // 0x009D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x009E(0x0002) MISSED OFFSET
	struct FSpawnFilter                                SpawnFilter;                                              // 0x00A0(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SelectTouchPointCach
// 0x0010
struct FSelectTouchPointCach
{
	int                                                FingerIndex;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TouchLoc;                                                 // 0x0004(0x0008) (IsPlainOldData)
	float                                              TouchTime;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AutoChooseParachuteTeamLeaderData
// 0x0048
struct FAutoChooseParachuteTeamLeaderData
{
	uint64_t                                           UId;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0008(0x000C) (ZeroConstructor)
	float                                              MaxRankingScore;                                          // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LeaderCount;                                              // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	uint64_t                                           LastGameLeaderUID;                                        // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<uint64_t>                                   LastGameTeammatesUID;                                     // 0x0028(0x000C) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	uint64_t                                           LastGameBattleID;                                         // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bDoInitialFollow;                                         // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.RandomRule
// 0x0020
struct FRandomRule
{
	TArray<int>                                        ItemIDs;                                                  // 0x0000(0x000C) (ZeroConstructor)
	TArray<int>                                        ItemCounts;                                               // 0x000C(0x000C) (ZeroConstructor)
	int                                                RuleID;                                                   // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Weight;                                                   // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DropItemRule
// 0x0010
struct FDropItemRule
{
	int                                                ItemDropPercent;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemDropRuleStartID;                                      // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemDropRuleEndID;                                        // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemDropMode;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.DropItemData
// 0x000C
struct FDropItemData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DropMode;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ItemGenerateSpawnDatas
// 0x0018
struct FItemGenerateSpawnDatas
{
	struct FString                                     ValueCatetory;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FItemGenerateSpawnData>              AllGenerateSpawnDatas;                                    // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.GroupLocationToID
// 0x0010
struct FGroupLocationToID
{
	struct FVector                                     GroupLocation;                                            // 0x0000(0x000C) (IsPlainOldData)
	int                                                ID;                                                       // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.GroupLocationPercent
// 0x0010
struct FGroupLocationPercent
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (IsPlainOldData)
	int                                                percent;                                                  // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ScmHitbox
// 0x0044
struct FScmHitbox
{
	unsigned char                                      UnknownData00[0x44];                                      // 0x0000(0x0044) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.BoundingSpherePersistentChecker
// 0x0524
struct FBoundingSpherePersistentChecker
{
	unsigned char                                      UnknownData00[0x524];                                     // 0x0000(0x0524) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SimpleCapsulePersistentChecker
// 0x0028
struct FSimpleCapsulePersistentChecker
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SimpleCapsuleCheck
// 0x0028
struct FSimpleCapsuleCheck
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SimpleCollisionLine
// 0x003C
struct FSimpleCollisionLine
{
	struct FVector                                     Start;                                                    // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x000C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // 0x0018(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     ImpactLocation;                                           // 0x0024(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // 0x0030(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SimpleCollisionHull
// 0x0060
struct FSimpleCollisionHull
{
	struct FVector                                     Origin;                                                   // 0x0000(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x54];                                      // 0x000C(0x0054) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.MonsterAnimData
// 0x000C
struct FMonsterAnimData
{
	TEnumAsByte<enum EMonsterPoseType>                 AniPosType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	class UAnimationAsset*                             Animation;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Rate;                                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AnimUpdateRateParamDebugOptions
// 0x0058
struct FAnimUpdateRateParamDebugOptions
{
	unsigned char                                      bShouldUseLodMap : 1;                                     // 0x0000(0x0001)
	unsigned char                                      bUseSkipMapForDistanceFactor : 1;                         // 0x0000(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TMap<int, int>                                     LODToFrameSkipMap;                                        // 0x0004(0x0050) (ZeroConstructor)
	TArray<float>                                      BaseVisibleDistanceFactorThesholds;                       // 0x0040(0x000C) (ZeroConstructor)
	int                                                MinDistFromMainChar;                                      // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxDistFromMainChar;                                      // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BaseNonRenderedUpdateRate;                                // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SAAttachPawnPlayMontageInstanceStruct
// 0x0008
struct FSAAttachPawnPlayMontageInstanceStruct
{
	TWeakObjectPtr<class UAnimMontage>                 AnimMontageCurrent;                                       // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.ChangeAkRT
// 0x0008
struct FChangeAkRT
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	class UAkComponent*                                CachedAK;                                                 // 0x0004(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SALaunchMove
// 0x003C
struct FSALaunchMove
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0000(0x0038) MISSED OFFSET
	class UCurveFloat*                                 SpeedCurve;                                               // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.LockCameraViewTypeData
// 0x0008
struct FLockCameraViewTypeData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SAPlayMontageInstanceStruct
// 0x0008
struct FSAPlayMontageInstanceStruct
{
	TWeakObjectPtr<class UAnimMontage>                 AnimMontageCurrent;                                       // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SAPlayMontageWeaponStateInstanceStruct
// 0x0008
struct FSAPlayMontageWeaponStateInstanceStruct
{
	TWeakObjectPtr<class UAnimMontage>                 AnimMontageCurrent;                                       // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.BeamEffectDataParams
// 0x0018
struct FBeamEffectDataParams
{
	struct FVector                                     SourceLocation;                                           // 0x0000(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x000C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SkillTableRow
// 0x00C4
struct FSkillTableRow
{
	int                                                SkillID;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconPath;                                                 // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                SkillType;                                                // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Coeff1;                                                   // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CoolTime;                                                 // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     BPPath;                                                   // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     Desc;                                                     // 0x0034(0x000C) (BlueprintVisible, ZeroConstructor)
	TArray<int>                                        BuffIDs;                                                  // 0x0040(0x000C) (BlueprintVisible, ZeroConstructor)
	TMap<int, int>                                     BuffLoadTypes;                                            // 0x004C(0x0050) (BlueprintVisible, ZeroConstructor)
	TMap<int, struct FMultiStringMap>                  Buffs;                                                    // 0x0088(0x0050) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.SkillItemTable_Row
// 0x0054
struct FSkillItemTable_Row
{
	int                                                ID;                                                       // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SkillID;                                                  // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GrenadeType;                                              // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     WeaponPath;                                               // 0x000C(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     GrenadeSlotName;                                          // 0x0018(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     SkillIconPath;                                            // 0x0024(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                SkillIconX;                                               // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SkillIconY;                                               // 0x0034(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     GrenadeIconPath;                                          // 0x0038(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                GrenadeIconX;                                             // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GrenadeIconY;                                             // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                OrderID;                                                  // 0x004C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               HideCancleFlag;                                           // 0x0050(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.SkillTable_Row
// 0x0058
struct FSkillTable_Row
{
	int                                                SkillID;                                                  // 0x0000(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0004(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     IconPath;                                                 // 0x0010(0x000C) (BlueprintVisible, ZeroConstructor)
	int                                                SkillType;                                                // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Coeff1;                                                   // 0x0020(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CoolTime;                                                 // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     BPPath;                                                   // 0x0028(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     UIPanelPath;                                              // 0x0034(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     LuaDataPath;                                              // 0x0040(0x000C) (BlueprintVisible, ZeroConstructor)
	struct FString                                     LuaDataKey;                                               // 0x004C(0x000C) (BlueprintVisible, ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.ComsumableItemSortData
// 0x0068
struct FComsumableItemSortData
{
	int                                                ItemId;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H1S1;                                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H1S2;                                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H1S3;                                                     // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H1S4;                                                     // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H1S5;                                                     // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H2S1;                                                     // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H2S2;                                                     // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H2S3;                                                     // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H2S4;                                                     // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H2S5;                                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H3S1;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H3S2;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H3S3;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H3S4;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H3S5;                                                     // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H4S1;                                                     // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H4S2;                                                     // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H4S3;                                                     // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H4S4;                                                     // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H4S5;                                                     // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H5S1;                                                     // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H5S2;                                                     // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H5S3;                                                     // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H5S4;                                                     // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                H5S5;                                                     // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.SpeciesParams
// 0x0010
struct FSpeciesParams
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	int                                                ID;                                                       // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
	int                                                SingleId;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CurPlayingAKEvent
// 0x0004
struct FCurPlayingAKEvent
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleStatesData
// 0x000C
struct FVehicleStatesData
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               always;                                                   // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.VehicleUserReconnRepData
// 0x0010
struct FVehicleUserReconnRepData
{
	class ASTExtraVehicleBase*                         Vehicle;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	class ASTExtraPlayerCharacter*                     Character;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	ESTExtraVehicleUserState                           VehicleUserState;                                         // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                SeatIdx;                                                  // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.VoiceCheckSorttNode
// 0x0008
struct FVoiceCheckSorttNode
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.WarGameTeamScore
// 0x0010
struct FWarGameTeamScore
{
	int                                                CampID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamID;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamRank;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamScore;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.WaterDropItemData
// 0x0014
struct FWaterDropItemData
{
	class AActor*                                      HostActor;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DropLocation;                                             // 0x0004(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                DropID;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.CompareEnemyInfo
// 0x0001
struct FCompareEnemyInfo
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct ShadowTrackerExtra.ParticleEffectGroup
// 0x0018
struct FParticleEffectGroup
{
	TArray<class UParticleSystemComponent*>            ParticleCompList;                                         // 0x0000(0x000C) (ExportObject, ZeroConstructor)
	TArray<struct FParticleRes>                        ParticleRes;                                              // 0x000C(0x000C) (ZeroConstructor)
};

// ScriptStruct ShadowTrackerExtra.MiniItem
// 0x0008
struct FMiniItem
{
	int                                                Type;                                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TypeSpecificID;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct ShadowTrackerExtra.AutoTriggerWeaponEventTask
// 0x0030
struct FAutoTriggerWeaponEventTask
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

}

